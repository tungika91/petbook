{"version":3,"sources":["Header.js","api/axios.js","context/DataContext.js","Nav.js","Footer.js","Layout.js","Pet.js","PetList.js","Home.js","pets/NewPet.js","ImageUpload.js","PetDetail.js","FileUpload.js","FileDownload.js","medicals/PetMedicalRecord.js","medicals/PetMedical.js","pets/EditPet.js","About.js","Missing.js","login/Login.js","login/Register.js","login/RequireAuth.js","medicals/EditPetMedicalRecord.js","medicals/NewPetMedicalRecord.js","App.js","index.js"],"names":["Header","title","user","className","axios","create","baseURL","DataContext","createContext","DataProvider","children","useState","pets","setPets","search","setSearch","searchResults","setSearchResults","picURL","setPicURL","navigate","useNavigate","setUser","pwd","setPwd","userID","setUserID","auth","setAuth","email","setEmail","petName","setPetName","petType","setPetType","dob","setDob","Date","deworm","setDeworm","gender","setGender","ster","setSter","petDesc","setPetDesc","newPetName","setNewPetName","newPetType","setNewPetType","newDob","setNewDob","newDeworm","setNewDeworm","newGender","setNewGender","newSter","setNewSter","newPetDesc","setNewPetDesc","medicalRecord","setMedicalRecord","addPet","a","id","length","isSterilised","toLowerCase","newPet","pet_name","pet_type","pet_dob","pet_gender","last_deworm","sterilised","pet_description","user_id","api","post","headers","accessToken","response","console","log","data","allPets","format","message","useEffect","get","status","fetchPets","handleEdit","updatePet","patch","map","pet","toString","handleDelete","delete","petsList","filter","filteredResults","includes","reverse","Provider","value","handleSubmit","e","preventDefault","Nav","useContext","onSubmit","htmlFor","type","placeholder","onChange","target","to","Footer","today","getFullYear","Layout","Pet","src","profile_pic","alt","PetList","Home","style","marginTop","NewPet","required","selected","date","ImageUpload","pet_id","file","setFile","handleUpload","formData","FormData","append","class","name","files","handleFile","onClick","Button1","styled","button","Button2","Button3","PetDetail","useParams","find","slice","deworm_reminder","pet_age","window","confirm","FileUpload","record_id","FileDownload","handleDownload","then","res","alert","open","catch","error","PetMedicalRecord","record","popUpMenu","setPopUpMenu","handleMedicalDelete","clinic","address","phone","doctor","agenda","attachment","state","PetMedical","sort","b","getMedicalRecords","EditPet","About","Missing","Login","userRef","useRef","errRef","errMsg","setErrMsg","from","useLocation","pathname","current","focus","JSON","stringify","username","password","token","replace","ref","autoComplete","href","Register","RequireAuth","location","EditPetMedicalRecord","newClinic","setNewClinic","newDoctor","setNewDoctor","newAddress","setNewAddress","newPhone","setNewPhone","newDate","setNewDate","newReason","setNewReason","handleMedicalEdit","updateMedical","NewPetMedicalRecord","handleSubmitMedical","newMedical","App","path","element","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c3d0cb7.chunk.js","sourcesContent":["import { MdAccountCircle } from \"react-icons/md\";\n\nconst Header = ({ title, user }) => {\n    return (\n        <header className=\"Header\">\n            <h1>{ title }</h1>\n            <div><MdAccountCircle/> { user }</div>\n        </header>\n    )\n}\n\nexport default Header\n","import axios from 'axios';\n\nexport default axios.create({\n    // baseURL: 'http://127.0.0.1:5000/users/'\n    baseURL: 'https://petbook.onrender.com/users/'\n});","import { createContext, useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport api from '../api/axios';\n\nconst DataContext = createContext({});\n\nexport const DataProvider = ({ children }) => {\n    const [pets, setPets] = useState([]); /* default state is an array loaded from local storage or an empty array, in the event the database shoppinglist is deleted */\n    const [search, setSearch] = useState('');\n    const [searchResults, setSearchResults] = useState([]); // array of search results\n    const [picURL, setPicURL] = useState('')\n    const navigate = useNavigate();\n\n    // Inputs for Login\n    const [user, setUser] = useState('');\n    const [pwd, setPwd] = useState('');\n    const [userID, setUserID] = useState('');\n    const [auth, setAuth] = useState({})\n    const [email, setEmail] = useState('');\n\n    // Inputs for Pet in POST\n    const [petName, setPetName] = useState('');\n    const [petType, setPetType] = useState('');\n    const [dob, setDob] = useState('');\n    // const [deworm, setDeworm] = useState(format(new Date(), 'M-d-y'));\n    const [deworm, setDeworm] = useState(new Date());\n    const [gender, setGender] = useState('');\n    const [ster, setSter] = useState('false');\n    const [petDesc, setPetDesc] = useState('');\n\n    // Inputs for Pet in PATCH\n    const [newPetName, setNewPetName] = useState(petName);\n    const [newPetType, setNewPetType] = useState(petType);\n    const [newDob, setNewDob] = useState(dob);\n    const [newDeworm, setNewDeworm] = useState(deworm);\n    const [newGender, setNewGender] = useState(gender);\n    const [newSter, setNewSter] = useState(ster);\n    const [newPetDesc, setNewPetDesc] = useState(petDesc);\n\n    // Inputs for Pet Medical\n    const [medicalRecord, setMedicalRecord] = useState();\n\n    // ------------------- CREATE in CRUD ------------------- //\n    const addPet = async (petName, petType, dob, deworm, gender, ster, petDesc, userID) => {\n        const id = pets.length ? pets[pets.length - 1].id + 1 : 1; // to reference the last post --> posts[posts.length-1]\n        const isSterilised = (ster.toLowerCase()) === 'true';\n        const newPet = {\n            id,\n            pet_name: petName,\n            pet_type: petType,\n            pet_dob: dob,\n            pet_gender: gender,\n            last_deworm: deworm,\n            sterilised: isSterilised,\n            pet_description: petDesc,\n            user_id: userID\n        };\n\n        try {\n            const response = await api.post(`${userID}/pets/register`, newPet, {\n                headers: {\n                    'x-access-token': auth.accessToken\n                }\n            })\n            console.log(response.data)\n            const allPets = [...pets, response.data]; // append new post to allPosts\n            setPets(allPets); // set Posts to allPosts\n            setPetName(''); // reset the setPostTitle and setPostBody to empty\n            setPetType('');\n            setDob('');\n            setDeworm(format(new Date(), 'M-d-y'));\n            setGender('');\n            setSter('false');\n            setPetDesc('');\n        } catch (err) {\n            console.log(`Error: ${err.message}`)\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (!petName) return;\n        addPet(petName, petType, dob, deworm, gender, ster, petDesc, userID) // addItem function\n        navigate('/'); // return to home page after submitting post\n    }\n    // ------------------- REQUEST in CRUD ------------------- //\n    useEffect(() => {\n        const fetchPets = async () => {\n            try {\n                // in axios, it automatically returns response in json format and catch the error, accesible through response.data\n                const response = await api.get(`${userID}/pets`, {\n                    headers: {\n                        'x-access-token': auth.accessToken\n                    }\n                });\n                setPets(response.data); // response.data is in json format\n                console.log(response.data)\n\n            } catch (err) {\n                if (err.response) { // Not in the 200 response range\n                    console.log(err.response.data);\n                    console.log(err.response.status);\n                    console.log(err.response.headers);\n                } else { console.log(`Error: ${err.message}`) }\n            }\n        }\n        fetchPets();\n    }, [userID, auth]) // [] to show dependency so it won't infinitely request from server\n\n    // ------------------- UPDATE in CRUD ------------------- //\n    const handleEdit = async (id) => {\n        const updatePet = {\n            id,\n            pet_type: newPetType,\n            pet_dob: newDob,\n            pet_gender: newGender,\n            last_deworm: newDeworm,\n            sterilised: (newSter.toLowerCase()) === 'true',\n            pet_description: newPetDesc,\n            pet_name: newPetName\n        };\n        try {\n            const response = await api.patch(`${userID}/pets/${id}`, updatePet, {\n                headers: {\n                    'x-access-token': auth.accessToken\n                }\n            });\n            console.log(response.data)\n            setPets(pets.map(pet => (pet.id).toString() === id ? { ...response.data } : pet)) // if pet id matches then update\n            setNewPetName('')\n            navigate(`/post/${id}`)\n        } catch (err) {\n            console.log(`Error: ${err.message}`)\n        }\n    }\n    // ------------------- DELETE in CRUD ------------------- //\n    const handleDelete = async (id) => {\n        try {\n            await api.delete(`${userID}/pets/${id}`, {\n                headers: {\n                    'x-access-token': auth.accessToken\n                }\n            });\n            const petsList = pets.filter(pet => pet.id !== id); // filter out the posts with post.id not equal to the id of the post we want to delete\n            setPets(petsList); // setPets to the newly filtered postsList\n        } catch (err) {\n            console.log(`Error: ${err.message}`)\n        }\n        navigate('/');\n    }\n\n    // ------------------- Filter Search Results on Home page ------------------- //\n    useEffect(() => {\n        const filteredResults = pets.filter((pet) =>\n            ((pet.pet_name).toLowerCase()).includes(search.toLowerCase()));\n        setSearchResults(filteredResults.reverse());\n    }, [pets, search])\n\n    return (\n        <DataContext.Provider value={{\n            search, setSearch,\n            searchResults, setSearchResults,\n            handleSubmit, petName, setPetName, petType, setPetType, dob, setDob, deworm, setDeworm, gender, setGender, ster, setSter, petDesc, setPetDesc,\n            pets, handleDelete,\n            handleEdit, newPetName, setNewPetName, newPetType, setNewPetType, newDob, setNewDob, newDeworm, setNewDeworm, newGender, setNewGender, newSter, setNewSter, newPetDesc, setNewPetDesc,\n            user, setUser, pwd, setPwd, userID, setUserID, auth, setAuth, picURL, setPicURL, navigate,\n            medicalRecord, setMedicalRecord, email, setEmail\n        }}>\n            {children}\n        </DataContext.Provider>\n    )\n}\n\nexport default DataContext;","import { Link } from 'react-router-dom';\nimport { useContext } from 'react';\nimport DataContext from './context/DataContext';\n\nconst Nav = () => {\n    const { search, setSearch } = useContext(DataContext);\n    return (\n        <nav className=\"Nav\">\n            <form className=\"searchForm\" onSubmit={(e) => e.preventDefault()}>\n                <label htmlFor=\"search\">Search Posts</label>\n                <input\n                    id=\"search\" // to match with htmlFor\n                    type=\"text\" // text input\n                    placeholder=\"Search Pets\"\n                    value={ search }\n                    onChange={(e) => setSearch(e.target.value)}\n                />\n            </form>\n            <ul>\n                <li><Link to=\"/\">Home</Link></li>\n                <li><Link to=\"post\">New Pet</Link></li>\n                <li><Link to=\"about\">About</Link></li>\n            </ul>\n        </nav>\n    )\n}\n\nexport default Nav\n","const Footer = () => {\n    const today = new Date();\n    return (\n        <footer className='Footer'>\n            <p>&copy; PetBook {today.getFullYear()}</p>\n        </footer>\n    )\n}\n\nexport default Footer\n","import Header from './Header';\nimport Nav from './Nav';\nimport Footer from './Footer';\nimport { Outlet } from 'react-router-dom';\nimport { useContext } from 'react';\nimport DataContext from './context/DataContext';\n\nconst Layout = () => {\n    const { user } = useContext(DataContext);\n    return (\n        <div className=\"App\">\n            <Header \n                title=\"PetBook\"\n                user = {user}/>\n            <Nav/>\n            {/* Outlet represent all components wrap between Nav and Footer */}\n            <Outlet />\n            <Footer />\n        </div>\n    )\n}\n\nexport default Layout\n","import { Link } from 'react-router-dom';\n\nconst Pet = ({ pet }) => {\n    return (\n        <div className=\"card\">\n            <div></div>\n\n            <div>\n                <img src={pet.profile_pic} alt={pet.id}/>\n            </div>\n\n            <div>\n                <Link to={`post/${pet.id}`}>\n                    <h3>{pet.pet_name}</h3>\n                </Link>\n                <span>{pet.pet_type}</span>\n            </div>\n        </div>    \n    )\n}\n\nexport default Pet\n","import Pet from './Pet';\n\nconst PetList = ({ pets }) => {\n    return (\n        <div className=\"container\">\n            {pets.map(pet => (\n                <Pet pet={pet} key={pet.id} />\n            ))}\n        </div>\n    )\n}\n\nexport default PetList\n","import PetList from './PetList';\nimport { useContext } from 'react';\nimport DataContext from './context/DataContext';\n\nconst Home = () => {\n    const { searchResults } = useContext(DataContext);\n    return (\n        <main className=\"Home\">\n            {/* check the posts length - if there are posts > Feed, if not, show \"No Posts to display\" */}\n            {searchResults.length ? (\n                <PetList pets={searchResults} />\n            ) : (\n                <p style={{ marginTop: \"2rem\" }}>\n                    No pets to display.\n                </p>\n            )}\n        </main>\n    )\n}\n\nexport default Home\n","import { useContext } from 'react';\nimport DataContext from '../context/DataContext';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst NewPet = () => {\n    const {handleSubmit, petName, setPetName, petType, setPetType, dob, setDob, deworm, setDeworm, gender, setGender, ster, setSter, petDesc, setPetDesc} = useContext(DataContext)\n    \n    return (\n        <main className=\"NewPost\">\n            <h2>New Pet</h2>\n            <form className=\"newPostForm\" onSubmit={handleSubmit}>\n                <label htmlFor=\"postTitle\">Pet Name:</label>\n                <input\n                    id=\"postTitle\" // match with htmlFor attribute\n                    type=\"text\" // accept text input\n                    required\n                    value={petName}\n                    onChange={(e) => setPetName(e.target.value)}\n                />\n                <label htmlFor=\"postTitle\">Pet Type:</label>\n                <input\n                    id=\"postTitle\" // match with htmlFor attribute\n                    type=\"text\" // accept text input\n                    required\n                    value={petType}\n                    onChange={(e) => setPetType(e.target.value)}\n                />\n                <label htmlFor=\"postTitle\">Gender:</label>\n                <input\n                    id=\"postTitle\" // match with htmlFor attribute\n                    type=\"text\" // accept text input\n                    required\n                    value={gender}\n                    onChange={(e) => setGender(e.target.value)}\n                />\n                <label htmlFor=\"postTitle\">Birthday (MM-DD-YYYY):</label>\n                {/* <input\n                    id=\"postTitle\" // match with htmlFor attribute\n                    type=\"text\" // accept text input\n                    required\n                    value={dob}\n                    onChange={(e) => setDob(e.target.value)}\n                /> */}\n                <DatePicker selected={ dob } onChange={(date) => setDob(date)} />\n\n                <label htmlFor=\"postTitle\">Last Deworm Date (MM-DD-YYYY):</label>\n                {/* <input\n                    id=\"postTitle\" // match with htmlFor attribute\n                    type=\"text\" // accept text input\n                    required\n                    value={deworm}\n                    onChange={(e) => setDeworm(e.target.value)}\n                /> */}\n                <DatePicker selected={ deworm } onChange={(date) => setDeworm(date)} />\n\n                <label htmlFor=\"postTitle\">Is your pet sterilised?</label>\n                <input\n                    id=\"postTitle\" // match with htmlFor attribute\n                    type=\"text\" // accept text input\n                    required\n                    value={ster}\n                    onChange={(e) => setSter(e.target.value)}\n                />\n            \n                <label htmlFor=\"postBody\">Description:</label>\n                <textarea\n                    id=\"postBody\" // match with htmlFor attribute\n                    required\n                    value={petDesc}\n                    onChange={(e) => setPetDesc(e.target.value)}\n                />\n                <button type=\"submit\">Submit</button>\n            </form>\n        </main>\n    )\n}\n\nexport default NewPet\n","import { useContext } from \"react\"\nimport { useState } from \"react\";\nimport DataContext from './context/DataContext';\nimport api from './api/axios';\nimport { MdOutlineFileUpload } from \"react-icons/md\";\n\n\nconst ImageUpload = ({ pet_id }) => {\n    const { userID, auth, navigate } = useContext(DataContext);\n    const [file, setFile] = useState();\n\n    const handleFile = (e) => {\n        console.log(e.target.files[0]);\n        setFile(e.target.files[0]);\n    }\n\n    const handleUpload = async (e) => {\n        const formData = new FormData();\n        formData.append('file', file);\n        const response = await api.post(`${userID}/pets/${pet_id}/upload`, formData, {\n            headers: {\n                'x-access-token': auth.accessToken\n            }\n        });\n        console.log(response.data);\n        navigate('/');\n    }\n\n    return (\n        <>\n            <input class=\"file-upload\" type=\"file\" name='file' onChange={(e) => handleFile(e)}/>\n            <button onClick={handleUpload}> <MdOutlineFileUpload/> </button>\n        </>\n    )\n}\n\nexport default ImageUpload\n","import { useParams, Link } from \"react-router-dom\";\nimport { useContext } from 'react';\nimport DataContext from './context/DataContext';\nimport ImageUpload from \"./ImageUpload\";\nimport styled from \"styled-components\";\nimport { MdDeleteForever, MdEditSquare, MdMedicalInformation } from \"react-icons/md\";\n\n// -------------- CSS Style -------------- //\nconst Button1 = styled.button`\n    height: 48px;\n    min-width: 48px;\n    margin-left: 0.5rem;\n    border-radius: 0.25rem;\n    padding: 0.5rem;\n    font-size: 1rem;\n    background-color: #ff5e6c;\n    color: white;\n    cursor: pointer;\n`;\n\nconst Button2 = styled.button`\n    height: 48px;\n    min-width: 48px;\n    margin-left: 0.5rem;\n    border-radius: 0.25rem;\n    padding: 0.5rem; \n    font-size: 1rem;\n    background-color: #fff5d7;\n    color: black;\n    cursor: pointer;\n`;\n\nconst Button3 = styled.button`\n    height: 48px;\n    min-width: 48px;\n    margin-left: 0.5rem;\n    border-radius: 0.25rem;\n    padding: 0.5rem; \n    font-size: 1rem;\n    background-color: green;\n    color: white;\n    cursor: pointer;\n`;\n\nconst PetDetail = () => {\n    const { pets, handleDelete } = useContext(DataContext);\n    const { id } = useParams(); // id is used in Route\n    const pet = pets.find(pet => (pet.id).toString() === id); // === is for string match, == for numeric\n\n    return (\n        <main className=\"PostPage\">\n            <article className=\"post\">\n                <div>\n                    {pet ? (\n                        <>\n                            <h2>{pet.pet_name}</h2>\n                            <li className=\"postBody\">Birthday: {pet.pet_dob.slice(0, 16)}</li>\n                            <li className=\"postBody\">Last deworm date: {pet.last_deworm.slice(0, 16)}</li>\n                            <li className=\"postBody\">Time to deworm: {(pet.deworm_reminder) ? 'Yes': 'No'}</li>                           \n                            <li className=\"postBody\">Age: {pet.pet_age}</li>\n                            <li className=\"postBody\">Sterilised: {(pet.sterilised) ? 'Yes': 'No'}</li>\n                            <li className=\"postBody\">Pet Type: {pet.pet_type}</li>\n                            <li className=\"postBody\">Description: {pet.pet_description}</li>\n\n                            <Button1 onClick={() => {\n                                    const confirmBox = window.confirm(\"Do you really want to remove this pet?\");\n                                    confirmBox ? handleDelete(pet.id) : console.log('No')}}>\n                                <MdDeleteForever/>\n                            </Button1>\n\n                            <Link to={`edit`}><Button2> <MdEditSquare/> </Button2></Link>\n\n                            <Link to={`medical`}><Button3><MdMedicalInformation/></Button3></Link>\n\n                            <ImageUpload pet_id = {pet.id}/>\n                        </> ) \n                        : (\n                        <>\n                            <h2>Pet Not Found</h2>\n                            <p>\n                                <Link to='/'>Return to Homepage</Link>\n                            </p>\n                        </> )\n                    }\n                </div>\n            </article>\n        </main>\n    )\n}\n\nexport default PetDetail\n","import { useContext } from \"react\"\nimport { useState } from \"react\";\nimport DataContext from './context/DataContext';\nimport api from './api/axios';\nimport { MdOutlineFileUpload } from \"react-icons/md\";\n\nconst FileUpload = ({ record_id, pet_id }) => {\n    const { userID, auth, navigate } = useContext(DataContext);\n    const [file, setFile] = useState();\n\n    const handleFile = (e) => {\n        console.log(e.target.files[0]);\n        setFile(e.target.files[0]);\n    }\n\n    const handleUpload = async (e) => {\n        const formData = new FormData();\n        formData.append('file', file);\n        const response = await api.post(`${userID}/pets/${pet_id}/medical/${record_id}/upload`, formData, {\n            headers: {\n                'x-access-token': auth.accessToken\n            }\n        });\n        console.log(response.data);\n        navigate('/');\n    }\n\n    return (\n        <>\n            <input class=\"file-upload\" type=\"file\" name='file' onChange={(e) => handleFile(e)}/>\n            <button onClick={handleUpload}> <MdOutlineFileUpload/> </button>\n        </>\n    )\n}\n\nexport default FileUpload\n","import { useContext } from \"react\"\nimport DataContext from './context/DataContext';\nimport api from './api/axios';\nimport { MdOutlineFileDownload } from \"react-icons/md\";\n\nconst FileDownload = ({ record_id, pet_id }) => {\n    const { userID, auth } = useContext(DataContext);\n\n    const handleDownload = async () => {\n        try {\n                await api.get(`${userID}/pets/${pet_id}/medical/${record_id}/download`, {\n                headers: {\n                    'x-access-token': auth.accessToken\n                }\n            })\n            .then((response) => {\n                // Open in new tab in browser\n                const res = response.data\n                res['error'] ? alert(res['error']) : window.open(res);        \n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        }\n        catch (error) {\n            return { error };\n        }\n    }\n    return (\n        <>\n            <button onClick={handleDownload}> <MdOutlineFileDownload/> </button>\n        </>\n    )\n}\n\nexport default FileDownload","import { Link, useNavigate, useParams } from 'react-router-dom';\nimport { useContext, useState } from 'react';\nimport DataContext from '../context/DataContext';\nimport api from '../api/axios';\nimport FileUpload from \"../FileUpload\";\nimport FileDownload from '../FileDownload';\nimport { MdDeleteForever, MdEditSquare, MdKeyboardDoubleArrowDown, MdKeyboardDoubleArrowUp } from \"react-icons/md\";\n\n\nconst PetMedicalRecord = ({ record, pet_id }) => {\n    const { userID, auth } = useContext(DataContext);\n    const { id } = useParams(); // extract the id from the link\n    const navigate = useNavigate();\n    const [popUpMenu, setPopUpMenu] = useState(false);\n\n    function PopUpMenu() {\n        return (\n            <ul className=\"drop-down\">\n                <Link to = {`${record.id}/edit`} state = { record }>\n                    <button><MdEditSquare/></button>\n                </Link>\n                <button onClick={() => {\n                    const confirmBox = window.confirm(\"Do you really want to remove this record?\");\n                    confirmBox ? handleMedicalDelete() : console.log('No')}}>\n                    <MdDeleteForever/>\n                </button>\n                <FileDownload record_id = { record.id } pet_id = { pet_id }/>\n                <FileUpload record_id = { record.id } pet_id = { pet_id } />\n            </ul>\n        );\n    }\n\n    const handleMedicalDelete = async () => {\n        try {\n            await api.delete(`${userID}/pets/${id}/medical/${record.id}`, {\n                headers: {\n                    'x-access-token': auth.accessToken\n                }\n            });\n            navigate(`/post/${id}/medical`)\n        } catch (err) {\n            console.log(`Error: ${err.message}`)\n        }\n        navigate('/');\n    }\n    return (\n        <>\n            <div className=\"record\">\n                <h2 className=\"recordTitle\">{ record.date }</h2>\n                <li className=\"recordList\">ID: { record.id }</li>\n                <li className=\"recordList\">Clinic: { record.clinic }</li>\n                <li className=\"recordList\">Address: { record.address }</li>\n                <li className=\"recordList\">Phone: { record.phone }</li>\n                <li className=\"recordList\">Doctor: { record.doctor }</li>\n                <li className=\"recordList\">Reason: { record.agenda }</li>\n                <li className=\"recordList\">Attachment: { record.attachment }</li>\n\n                <button onClick={() => setPopUpMenu(!popUpMenu)}> \n                    { popUpMenu ? <MdKeyboardDoubleArrowUp/> : <MdKeyboardDoubleArrowDown/> }\n                </button>\n                {popUpMenu && PopUpMenu()}\n            </div>\n        </>\n    )\n}\n// sending props down Link through state. Then prop can be accessed via useLocation\n\nexport default PetMedicalRecord\n","import { Link, useParams } from \"react-router-dom\";\nimport { useContext, useEffect } from 'react';\nimport DataContext from '../context/DataContext';\nimport api from '../api/axios';\nimport PetMedicalRecord from \"./PetMedicalRecord\";\n\nconst PetMedical = () => {\n    const { pets, userID, auth, medicalRecord, setMedicalRecord } = useContext(DataContext);\n    const { id } = useParams(); // id is used in Route\n    const pet = pets.find(pet => (pet.id).toString() === id); // === is for string match, == for numeric\n\n    useEffect(() => {\n    const getMedicalRecords = async () => {\n        try {\n            const response = await api.get(`${userID}/pets/${pet.id}/medical/all`, {\n                headers: {\n                    'x-access-token': auth.accessToken\n                }\n            });\n            response.data.sort((a,b) => new Date(b.date) - new Date(a.date));\n            setMedicalRecord(response.data); // response.data is in json format\n        } catch (err) {\n            if (err.response) { // Not in the 200 response range\n                console.log(err.response.data);\n                console.log(err.response.status);\n                console.log(err.response.headers);\n            } else { console.log(`Error: ${err.message}`) }\n        }\n    }\n    getMedicalRecords();\n    }, [pet, userID, auth, setMedicalRecord])\n\n    return (\n        <>\n            <div className=\"newRecord\">\n                <Link to={'new'}>\n                    <button> Add Medical Record </button>\n                </Link>\n            </div>\n            <div className=\"container\">\n                {medicalRecord \n                ? medicalRecord.map(record => (\n                    <PetMedicalRecord record={record} pet_id = {pet.id} key={record.id} />))\n                : \"Missing Record\"}\n            </div>\n        </>\n        \n    )\n}\n\nexport default PetMedical\n","import { useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { useContext } from 'react';\nimport DataContext from '../context/DataContext';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport const EditPet = () => {\n    const { pets, handleEdit, newPetName, setNewPetName, newPetType, setNewPetType, newDob, setNewDob, newDeworm, setNewDeworm, newGender, setNewGender, newSter, setNewSter, newPetDesc, setNewPetDesc } = useContext(DataContext);\n    const { id } = useParams(); // extract the id from the link\n    const pet = pets.find(pet => (pet.id).toString() === id);\n\n    // function getDate(date) {\n    //     var day = date.getDate();\n    //     var month = date.getMonth()+1; // JS counts month from 0\n    //     var year = date.getFullYear();\n    //     var format = month + \"-\" + day + \"-\" + year;\n    //     console.log(format)\n    //     return format\n    // };\n\n    useEffect(() => {\n        // To pre-fill the form with existing info\n        if (pet) {\n            setNewPetName(pet.pet_name);\n            setNewPetType(pet.pet_type);\n            setNewDob(new Date(pet.pet_dob));\n            setNewDeworm(new Date(pet.last_deworm));\n            setNewGender(pet.pet_gender);\n            setNewSter(pet.sterilised.toString());\n            setNewPetDesc(pet.pet_description);\n        }\n    }, [pet, setNewPetName, setNewPetType, setNewDob, setNewDeworm, setNewGender, setNewSter, setNewPetDesc])\n    \n    return (\n        <main className=\"NewPost\">\n            {pet &&\n                <>\n                    <h2>Edit Pet</h2>\n                    <form className=\"newPostForm\" onSubmit={(e)=>e.preventDefault()}>\n                        <label htmlFor=\"postTitle\">Pet Name:</label>\n                        <input\n                            id=\"postTitle\" // match with htmlFor attribute\n                            type=\"text\" // accept text input\n                            required\n                            value={newPetName}\n                            onChange={(e) => setNewPetName(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Pet Type:</label>\n                        <input\n                            id=\"postTitle\" // match with htmlFor attribute\n                            type=\"text\" // accept text input\n                            required\n                            value={newPetType}\n                            onChange={(e) => setNewPetType(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Gender:</label>\n                        <input\n                            id=\"postTitle\" // match with htmlFor attribute\n                            type=\"text\" // accept text input\n                            required\n                            value={newGender}\n                            onChange={(e) => setNewGender(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Birthday (MM-DD-YYYY):</label>\n                        <DatePicker selected={newDob} onChange={(date) => setNewDob(date)} />\n\n                        <label htmlFor=\"postTitle\">Last Deworm Date (MM-DD-YYYY):</label>\n                        <DatePicker selected={newDeworm} onChange={(date) => setNewDeworm(date)} />\n\n                        <label htmlFor=\"postTitle\">Is your pet sterilised?</label>\n                        <input\n                            id=\"postTitle\" // match with htmlFor attribute\n                            type=\"text\" // accept text input\n                            required\n                            value={newSter}\n                            onChange={(e) => setNewSter(e.target.value)}\n                        />\n                    \n                        <label htmlFor=\"postBody\">Description:</label>\n                        <textarea\n                            id=\"postBody\" // match with htmlFor attribute\n                            required\n                            value={newPetDesc}\n                            onChange={(e) => setNewPetDesc(e.target.value)}\n                        />\n                        <button type=\"submit\" onClick={()=>handleEdit(pet.id)}>Submit</button>\n                    </form>\n                </>\n            }\n\n            {!pet && \n                <>\n                    <h2>Page Not Found</h2>\n                    <p>Well, that's disappointing.</p>\n                    <p>\n                        <Link to='/'>Visit Our Homepage</Link>\n                    </p>\n                </>\n            }\n        </main>\n    )\n}\n\nexport default EditPet","const About = () => {\n    return (\n        <main className='About'>\n            <h2>About</h2>\n            <p style={{ marginTop: \"1rem\" }}>\n                This is a pet project dedicated to the human's best friends!\n            </p>\n        </main>\n    )\n}\n\nexport default About\n","import { Link } from 'react-router-dom';\n\nconst Missing = () => {\n    return (\n        <main className='Missing'>\n            <h2>Page Not Found</h2>\n            <p>\n                <Link to='/'>Homepage</Link>\n            </p>\n        </main>\n    )\n}\n\nexport default Missing\n","import { useRef, useState, useEffect, useContext } from 'react';\nimport DataContext from '../context/DataContext';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport axios from '../api/axios';\n\nconst LOGIN_URL = '/login';\n\nconst Login = () => {\n    const userRef = useRef();\n    const errRef = useRef();\n\n    const { user, setUser, pwd, setPwd, setUserID, setAuth } = useContext(DataContext);\n    const [errMsg, setErrMsg] = useState('');\n\n    const navigate = useNavigate();\n    const location = useLocation();\n    const from = location.state?.from.pathname || \"/\";\n\n    useEffect(() => {\n        userRef.current.focus();\n    }, [])\n\n    useEffect(() => {\n        setErrMsg('');\n    }, [user, pwd])\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await axios.post(LOGIN_URL,\n                JSON.stringify({ username: user, password: pwd }),\n                {\n                    headers: { 'Content-Type': 'application/json' },\n                }\n            );\n            console.log(JSON.stringify(response?.data))\n            const id = response?.data?.id;\n            const accessToken = response?.data?.token;\n            setUserID(id)\n            setAuth({ user, pwd, accessToken })\n            // const roles = response?.data?.roles;\n            // setUser('');\n            // setPwd('');\n            console.log(from)\n            navigate(from, { replace: true });\n\n        } catch (err) {\n            if (!err?.response) {\n                setErrMsg('No Server Response');\n            } else if (err.response?.status === 400) {\n                setErrMsg('Missing Username or Password');\n            } else if (err.response?.status === 401) {\n                setErrMsg('Wrong Username or Password');\n            } else {\n                setErrMsg('Login Failed');\n            }\n            errRef.current.focus();\n        }\n    }\n\n    return (\n            <section>\n                <p ref={errRef} className={errMsg ? \"errmsg\" : \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\n                <h1>Sign In</h1>\n                <form onSubmit={handleSubmit}>\n                    <label htmlFor=\"username\">Username:</label>\n                    <input\n                        type=\"text\"\n                        id=\"username\"\n                        ref={userRef}\n                        autoComplete=\"off\"\n                        onChange={(e) => setUser(e.target.value)}\n                        value={user}\n                        required\n                    />\n\n                    <label htmlFor=\"password\">Password:</label>\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        onChange={(e) => setPwd(e.target.value)}\n                        value={pwd}\n                        required\n                    />\n                    <button>Sign In</button>\n                </form>\n                <p>\n                    Need an Account?<br />\n                    <span className=\"line\">\n                        <a href=\"register\">Sign Up</a>\n                    </span>\n                </p>\n            </section>\n\n    )\n}\n\nexport default Login","import { useRef, useState, useEffect, useContext } from 'react';\nimport DataContext from '../context/DataContext';\nimport { useNavigate } from 'react-router-dom';\n\nimport axios from '../api/axios';\nconst REGISTER_URL = '/register';\n\nconst Register = () => {\n    // const { setAuth } = useContext(AuthContext);\n    const userRef = useRef();\n    const errRef = useRef();\n\n    const { user, setUser, email, setEmail, pwd, setPwd } = useContext(DataContext);\n    const [errMsg, setErrMsg] = useState('');\n\n    const navigate = useNavigate();\n    // const location = useLocation();\n    // const from = location.state?.from.pathname || \"/\";\n\n    useEffect(() => {\n        userRef.current.focus();\n    }, [])\n\n    useEffect(() => {\n        setErrMsg('');\n    }, [user, pwd])\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await axios.post(REGISTER_URL,\n                JSON.stringify({ username: user, email: email, password: pwd }),\n                {\n                    headers: { 'Content-Type': 'application/json' },\n                    // withCredentials: true\n                }\n            );\n            console.log(JSON.stringify(response?.data))\n            navigate('/login');\n            setUser('');\n            setPwd('');\n            setEmail('');\n\n        } catch (err) {\n            if (!err?.response) {\n                setErrMsg('No Server Response');\n            } else if (err.response?.status === 400) {\n                setErrMsg('Missing Username or Password');\n            } else if (err.response?.status === 401) {\n                setErrMsg('Wrong Username or Password');\n            } else {\n                setErrMsg('Registration Failed');\n            }\n            errRef.current.focus();\n        }\n    }\n\n    return (\n            <section>\n                <p ref={errRef} className={errMsg ? \"errmsg\" : \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\n                <h1>Sign Up</h1>\n                <form onSubmit={handleSubmit}>\n                    <label htmlFor=\"username\">Username:</label>\n                    <input\n                        type=\"text\"\n                        id=\"username\"\n                        ref={userRef}\n                        autoComplete=\"off\"\n                        onChange={(e) => setUser(e.target.value)}\n                        value={user}\n                        required\n                    />\n\n                    <label htmlFor=\"email\">Email:</label>\n                    <input\n                        type=\"text\"\n                        id=\"email\"\n                        onChange={(e) => setEmail(e.target.value)}\n                        value={email}\n                        required\n                    />\n\n                    <label htmlFor=\"password\">Password:</label>\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        onChange={(e) => setPwd(e.target.value)}\n                        value={pwd}\n                        required\n                    />\n                    <button>Register</button>\n                </form>\n\n            </section>\n\n    )\n}\n\nexport default Register","import { useLocation, Navigate, Outlet } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport DataContext from \"../context/DataContext\";\n\nconst RequireAuth = () => {\n    const { user } = useContext(DataContext);\n    const location = useLocation();\n\n    return (\n        user\n            ? <Outlet />\n            : <Navigate to=\"/login\" state={{from: location}} replace/>\n    );\n}\n\nexport default RequireAuth;","import { useEffect, useState } from \"react\";\nimport { useParams, Link, useNavigate, useLocation } from \"react-router-dom\";\nimport { useContext } from 'react';\nimport DataContext from '../context/DataContext';\nimport api from '../api/axios';\n\nexport const EditPetMedicalRecord = () => {\n    const navigate = useNavigate();\n    // access prop by using location = useLocation() through location.state\n    const location = useLocation();\n    const record = location.state;\n    console.log(record)\n    const { userID, auth } = useContext(DataContext);\n    const { id, record_id } = useParams(); // extract the id from the link\n    const [newClinic, setNewClinic] = useState('');\n    const [newDoctor, setNewDoctor] = useState('');\n    const [newAddress, setNewAddress] = useState('');\n    const [newPhone, setNewPhone] = useState('');\n    const [newDate, setNewDate] = useState('');\n    const [newReason, setNewReason] = useState('');\n\n    useEffect(() => {\n        // To pre-fill the form with existing info\n        if (record) {\n            setNewClinic(record.clinic);\n            setNewDoctor(record.doctor);\n            setNewAddress(record.address);\n            setNewPhone(record.phone);\n            setNewDate(record.date);\n            setNewReason(record.agenda);\n        }\n    }, [record])\n    \n    const handleMedicalEdit = async (record_id) => {\n        const updateMedical = {\n            id: record_id,\n            date: newDate,\n            clinic: newClinic,\n            address: newAddress,\n            phone: newPhone,\n            doctor: newDoctor,\n            agenda: newReason\n        };\n        console.log(updateMedical)\n        try {\n            const response = await api.patch(`${userID}/pets/${id}/medical/${record_id}`, updateMedical, {\n                headers: {\n                    'x-access-token': auth.accessToken\n                }\n            });\n            navigate(`/post/${id}`)\n            console.log(response)\n        } catch (err) {\n            console.log(`Error: ${err.message}`)\n        }\n    }\n\n    return (\n        <main className=\"NewPost\">\n            {record &&\n                <>\n                    <h2>Edit Medical Record</h2>\n                    <form className=\"newPostForm\" onSubmit={(e)=>e.preventDefault()}>\n                        <label htmlFor=\"postTitle\">Date:</label>\n                        <input\n                            id=\"postTitle\"\n                            type=\"text\"\n                            required\n                            value={ newDate }\n                            onChange={(e) => setNewDate(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Clinic:</label>\n                        <input\n                            id=\"postTitle\"\n                            type=\"text\"\n                            required\n                            value={ newClinic }\n                            onChange={(e) => setNewClinic(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Address:</label>\n                        <input\n                            id=\"postTitle\"\n                            type=\"text\"\n                            required\n                            value={ newAddress }\n                            onChange={(e) => setNewAddress(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Phone:</label>\n                        <input\n                            id=\"postTitle\"\n                            type=\"text\"\n                            required\n                            value={ newPhone }\n                            onChange={(e) => setNewPhone(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Doctor:</label>\n                        <input\n                            id=\"postTitle\"\n                            type=\"text\"\n                            required\n                            value={ newDoctor }\n                            onChange={(e) => setNewDoctor(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Reason:</label>\n                        <input\n                            id=\"postTitle\"\n                            type=\"text\"\n                            required\n                            value={ newReason }\n                            onChange={(e) => setNewReason(e.target.value)}\n                        />\n\n                        <button type=\"submit\" onClick={() => handleMedicalEdit(record_id)}>Submit</button>\n\n                    </form>\n                </>\n            }\n\n            {!record && \n                <>\n                    <h2>Page Not Found</h2>\n                    <p>Well, that's disappointing.</p>\n                    <p>\n                        <Link to='/'>Visit Our Homepage</Link>\n                    </p>\n                </>\n            }\n        </main>\n    )\n}\n\nexport default EditPetMedicalRecord","import { useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useContext } from 'react';\nimport DataContext from '../context/DataContext';\nimport api from '../api/axios';\n\nexport const NewPetMedicalRecord = () => {\n    const navigate = useNavigate();\n\n    // Inputs for Pet in POST\n    const { userID, auth } = useContext(DataContext);\n    const { id } = useParams(); // extract the id from the link\n    const [newClinic, setNewClinic] = useState('');\n    const [newDoctor, setNewDoctor] = useState('');\n    const [newAddress, setNewAddress] = useState('');\n    const [newPhone, setNewPhone] = useState('');\n    const [newDate, setNewDate] = useState('');\n    const [newReason, setNewReason] = useState('');\n    \n    const handleSubmitMedical = async () => {\n        const newMedical = {\n            date: newDate,\n            clinic: newClinic,\n            address: newAddress,\n            phone: newPhone,\n            doctor: newDoctor,\n            agenda: newReason\n        };\n        try {\n            const response = await api.post(`${userID}/pets/${id}/medical`, newMedical, {\n                headers: {\n                    'x-access-token': auth.accessToken\n                }\n            });\n            navigate(`/post/${id}`)\n            console.log(response)\n        } catch (err) {\n            console.log(`Error: ${err.message}`)\n        }\n    }\n\n    return (\n        <main className=\"NewPost\">\n            <>\n                <h2>New Medical Record</h2>\n                <form className=\"newPostForm\" onSubmit={(e)=>e.preventDefault()}>\n                    <label htmlFor=\"postTitle\">Date:</label>\n                    <input\n                        id=\"postTitle\"\n                        type=\"text\"\n                        required\n                        value={ newDate }\n                        onChange={(e) => setNewDate(e.target.value)}\n                    />\n                    <label htmlFor=\"postTitle\">Clinic:</label>\n                    <input\n                        id=\"postTitle\"\n                        type=\"text\"\n                        required\n                        value={ newClinic }\n                        onChange={(e) => setNewClinic(e.target.value)}\n                    />\n                    <label htmlFor=\"postTitle\">Address:</label>\n                    <input\n                        id=\"postTitle\"\n                        type=\"text\"\n                        required\n                        value={ newAddress }\n                        onChange={(e) => setNewAddress(e.target.value)}\n                    />\n                    <label htmlFor=\"postTitle\">Phone:</label>\n                    <input\n                        id=\"postTitle\"\n                        type=\"text\"\n                        required\n                        value={ newPhone }\n                        onChange={(e) => setNewPhone(e.target.value)}\n                    />\n                    <label htmlFor=\"postTitle\">Doctor:</label>\n                    <input\n                        id=\"postTitle\"\n                        type=\"text\"\n                        required\n                        value={ newDoctor }\n                        onChange={(e) => setNewDoctor(e.target.value)}\n                    />\n                    <label htmlFor=\"postTitle\">Reason:</label>\n                    <input\n                        id=\"postTitle\"\n                        type=\"text\"\n                        required\n                        value={ newReason }\n                        onChange={(e) => setNewReason(e.target.value)}\n                    />\n                    <button type=\"submit\" onClick={() => handleSubmitMedical()}>Submit</button>\n\n                </form>\n            </>\n        </main>\n    )\n}\n\nexport default NewPetMedicalRecord","import Layout from './Layout';\nimport Home from './Home';\nimport NewPet from './pets/NewPet';\nimport PetDetail from './PetDetail';\nimport PetMedical from './medicals/PetMedical';\nimport EditPet from './pets/EditPet';\nimport About from './About';\nimport Missing from './Missing';\nimport Login from './login/Login';\nimport Register from './login/Register';\nimport RequireAuth from './login/RequireAuth';\nimport { Route, Routes } from 'react-router-dom';\nimport { DataProvider } from './context/DataContext';\nimport EditPetMedicalRecord from './medicals/EditPetMedicalRecord';\nimport NewPetMedicalRecord from './medicals/NewPetMedicalRecord';\n\nfunction App() {\n  return (\n    <DataProvider>\n      <Routes>\n        {/* Public/Login Page */}\n        <Route path=\"register\" element={<Register />} />\n        <Route path=\"login\" element={<Login />} />\n        <Route path=\"/\" element={<Layout />}>\n          {/* Protected Page */}\n          <Route element={<RequireAuth />}>\n            <Route index element={<Home />} />\n            <Route path=\"post\">\n              <Route index element={<NewPet />} />\n              <Route path=\":id\" element={<PetDetail />} />\n            </Route>\n            <Route path=\"post/:id/edit\">\n              <Route index element={<EditPet />} />\n            </Route>\n            <Route path=\"post/:id/medical\">\n              <Route index element={<PetMedical />} />\n              <Route path=\":record_id/edit\" element={<EditPetMedicalRecord />} />\n              <Route path=\"new\" element={<NewPetMedicalRecord />} />\n            </Route>\n            <Route path=\"about\" element={<About />} />\n            <Route path=\"*\" element={<Missing />} />\n          </Route>\n        </Route>\n      </Routes>\n    </DataProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { DataProvider } from './context/DataContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <DataProvider>\n        <Routes>\n          <Route path=\"/*\" element={<App />} />\n        </Routes>\n      </DataProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}