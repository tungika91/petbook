[{"/Users/tungngo/Dropbox/Personal/Learning/React/tutorial/react_router_v6/src/index.js":"1","/Users/tungngo/Dropbox/Personal/Learning/React/tutorial/react_router_v6/src/App.js":"2","/Users/tungngo/Dropbox/Personal/Learning/React/tutorial/react_router_v6/src/Layout.js":"3","/Users/tungngo/Dropbox/Personal/Learning/React/tutorial/react_router_v6/src/Home.js":"4","/Users/tungngo/Dropbox/Personal/Learning/React/tutorial/react_router_v6/src/NewPost.js":"5","/Users/tungngo/Dropbox/Personal/Learning/React/tutorial/react_router_v6/src/PostPage.js":"6","/Users/tungngo/Dropbox/Personal/Learning/React/tutorial/react_router_v6/src/About.js":"7","/Users/tungngo/Dropbox/Personal/Learning/React/tutorial/react_router_v6/src/Missing.js":"8","/Users/tungngo/Dropbox/Personal/Learning/React/tutorial/react_router_v6/src/Header.js":"9","/Users/tungngo/Dropbox/Personal/Learning/React/tutorial/react_router_v6/src/Nav.js":"10","/Users/tungngo/Dropbox/Personal/Learning/React/tutorial/react_router_v6/src/Footer.js":"11","/Users/tungngo/Dropbox/Personal/Learning/React/tutorial/react_router_v6/src/Feed.js":"12","/Users/tungngo/Dropbox/Personal/Learning/React/tutorial/react_router_v6/src/Post.js":"13","/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/index.js":"14","/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/App.js":"15","/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/context/DataContext.js":"16","/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/Layout.js":"17","/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/About.js":"18","/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/Home.js":"19","/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/Missing.js":"20","/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/api/posts.js":"21","/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/Nav.js":"22","/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/Header.js":"23","/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/api/axios.js":"24","/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/Footer.js":"25","/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/ImageUpload.js":"26","/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/hooks/useWindowSize.js":"27","/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/login/Login.js":"28","/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/login/Register.js":"29","/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/login/RequireAuth.js":"30","/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/pets/EditPet.js":"31","/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/pets/NewPet.js":"32","/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/PetList.js":"33","/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/Pet.js":"34","/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/PetDetail.js":"35","/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/medicals/PetMedical.js":"36","/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/medicals/PetMedicalRecord.js":"37","/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/medicals/EditPetMedicalRecord.js":"38","/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/medicals/NewPetMedicalRecord.js":"39"},{"size":387,"mtime":1678582440809,"results":"40","hashOfConfig":"41"},{"size":4078,"mtime":1678603965308,"results":"42","hashOfConfig":"41"},{"size":413,"mtime":1678582440804,"results":"43","hashOfConfig":"41"},{"size":469,"mtime":1678589879627,"results":"44","hashOfConfig":"41"},{"size":1012,"mtime":1678592626238,"results":"45","hashOfConfig":"41"},{"size":1274,"mtime":1678590423082,"results":"46","hashOfConfig":"41"},{"size":253,"mtime":1678582440801,"results":"47","hashOfConfig":"41"},{"size":333,"mtime":1678583808814,"results":"48","hashOfConfig":"41"},{"size":159,"mtime":1678582440803,"results":"49","hashOfConfig":"41"},{"size":813,"mtime":1678590061030,"results":"50","hashOfConfig":"41"},{"size":209,"mtime":1678582440803,"results":"51","hashOfConfig":"41"},{"size":223,"mtime":1678582440802,"results":"52","hashOfConfig":"41"},{"size":640,"mtime":1678590192367,"results":"53","hashOfConfig":"41"},{"size":490,"mtime":1681604663100,"results":"54","hashOfConfig":"55"},{"size":1771,"mtime":1688994266842,"results":"56","hashOfConfig":"55"},{"size":7064,"mtime":1688993559870,"results":"57","hashOfConfig":"55"},{"size":604,"mtime":1688285015782,"results":"58","hashOfConfig":"55"},{"size":281,"mtime":1678605264982,"results":"59","hashOfConfig":"55"},{"size":623,"mtime":1688384733309,"results":"60","hashOfConfig":"55"},{"size":276,"mtime":1689167330084,"results":"61","hashOfConfig":"55"},{"size":105,"mtime":1681911923892,"results":"62","hashOfConfig":"55"},{"size":940,"mtime":1688388709416,"results":"63","hashOfConfig":"55"},{"size":511,"mtime":1688384953150,"results":"64","hashOfConfig":"55"},{"size":105,"mtime":1681606551802,"results":"65","hashOfConfig":"55"},{"size":207,"mtime":1688384828477,"results":"66","hashOfConfig":"55"},{"size":1017,"mtime":1688384873345,"results":"67","hashOfConfig":"55"},{"size":898,"mtime":1680007930507,"results":"68","hashOfConfig":"55"},{"size":3212,"mtime":1688993646937,"results":"69","hashOfConfig":"55"},{"size":3195,"mtime":1688384223194,"results":"70","hashOfConfig":"55"},{"size":423,"mtime":1688383997642,"results":"71","hashOfConfig":"55"},{"size":5024,"mtime":1688384505198,"results":"72","hashOfConfig":"55"},{"size":3023,"mtime":1688384512852,"results":"73","hashOfConfig":"55"},{"size":248,"mtime":1688384741259,"results":"74","hashOfConfig":"55"},{"size":475,"mtime":1688384862574,"results":"75","hashOfConfig":"55"},{"size":2890,"mtime":1688866041317,"results":"76","hashOfConfig":"55"},{"size":1673,"mtime":1688996637497,"results":"77","hashOfConfig":"55"},{"size":1867,"mtime":1689343827762,"results":"78","hashOfConfig":"55"},{"size":4914,"mtime":1688996730245,"results":"79","hashOfConfig":"55"},{"size":3761,"mtime":1688994703410,"results":"80","hashOfConfig":"55"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"1jreftz",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"xkxaup",{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"110"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"110"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"110"},"/Users/tungngo/Dropbox/Personal/Learning/React/tutorial/react_router_v6/src/index.js",[],["165","166"],"/Users/tungngo/Dropbox/Personal/Learning/React/tutorial/react_router_v6/src/App.js",[],"/Users/tungngo/Dropbox/Personal/Learning/React/tutorial/react_router_v6/src/Layout.js",[],"/Users/tungngo/Dropbox/Personal/Learning/React/tutorial/react_router_v6/src/Home.js",[],"/Users/tungngo/Dropbox/Personal/Learning/React/tutorial/react_router_v6/src/NewPost.js",[],"/Users/tungngo/Dropbox/Personal/Learning/React/tutorial/react_router_v6/src/PostPage.js",[],"/Users/tungngo/Dropbox/Personal/Learning/React/tutorial/react_router_v6/src/About.js",[],"/Users/tungngo/Dropbox/Personal/Learning/React/tutorial/react_router_v6/src/Missing.js",[],"/Users/tungngo/Dropbox/Personal/Learning/React/tutorial/react_router_v6/src/Header.js",[],"/Users/tungngo/Dropbox/Personal/Learning/React/tutorial/react_router_v6/src/Nav.js",[],"/Users/tungngo/Dropbox/Personal/Learning/React/tutorial/react_router_v6/src/Footer.js",[],"/Users/tungngo/Dropbox/Personal/Learning/React/tutorial/react_router_v6/src/Feed.js",[],"/Users/tungngo/Dropbox/Personal/Learning/React/tutorial/react_router_v6/src/Post.js",[],"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/index.js",[],["167","168"],"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/App.js",[],"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/context/DataContext.js",[],"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/Layout.js",[],"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/About.js",[],"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/Home.js",[],"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/Missing.js",[],"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/api/posts.js",[],"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/Nav.js",[],"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/Header.js",[],"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/api/axios.js",[],"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/Footer.js",[],"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/ImageUpload.js",[],"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/hooks/useWindowSize.js",[],["169","170"],"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/login/Login.js",[],"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/login/Register.js",[],"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/login/RequireAuth.js",[],"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/pets/EditPet.js",[],"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/pets/NewPet.js",[],"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/PetList.js",[],"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/Pet.js",[],"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/PetDetail.js",[],"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/medicals/PetMedical.js",["171"],"import { Link, useParams } from \"react-router-dom\";\nimport { useContext, useEffect } from 'react';\nimport DataContext from '../context/DataContext';\nimport api from '../api/posts';\nimport PetMedicalRecord from \"./PetMedicalRecord\";\n\nconst PetMedical = () => {\n    const { pets, userID, auth, medicalRecord, setMedicalRecord } = useContext(DataContext);\n    const { id } = useParams(); // id is used in Route\n    const pet = pets.find(pet => (pet.id).toString() === id); // === is for string match, == for numeric\n\n    useEffect(() => {\n    const getMedicalRecords = async () => {\n        try {\n            const response = await api.get(`${userID}/pets/${pet.id}/medical/all`, {\n                headers: {\n                    'x-access-token': auth.accessToken\n                }\n            });\n            setMedicalRecord(response.data); // response.data is in json format\n\n        } catch (err) {\n            if (err.response) { // Not in the 200 response range\n                console.log(err.response.data);\n                console.log(err.response.status);\n                console.log(err.response.headers);\n            } else { console.log(`Error: ${err.message}`) }\n        }\n    }\n    getMedicalRecords();\n    }, [pet, userID, auth])\n\n    return (\n        <>\n            <Link to={'new'}>\n                <button>Add New Record</button>\n            </Link>\n\n            <div className=\"container\">\n                {medicalRecord \n                ? medicalRecord.map(record => (\n                    <PetMedicalRecord record={record} key={record.id} />))\n                : \"Missing Record\"}\n            </div>\n        </>\n        \n    )\n}\n\nexport default PetMedical\n","/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/medicals/PetMedicalRecord.js",[],"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/medicals/EditPetMedicalRecord.js",["172"],"import { useEffect, useState } from \"react\";\nimport { useParams, Link, useNavigate, useLocation } from \"react-router-dom\";\nimport { useContext } from 'react';\nimport DataContext from '../context/DataContext';\nimport api from '../api/posts';\n\nexport const EditPetMedicalRecord = () => {\n    const navigate = useNavigate();\n    // access prop by using location = useLocation() through location.state\n    const location = useLocation();\n    const record = location.state;\n    console.log(record)\n    const { userID, auth } = useContext(DataContext);\n    const { id, record_id } = useParams(); // extract the id from the link\n    const [newClinic, setNewClinic] = useState('');\n    const [newDoctor, setNewDoctor] = useState('');\n    const [newAddress, setNewAddress] = useState('');\n    const [newPhone, setNewPhone] = useState('');\n    const [newDate, setNewDate] = useState('');\n    const [newReason, setNewReason] = useState('');\n\n    useEffect(() => {\n        // To pre-fill the form with existing info\n        if (record) {\n            setNewClinic(record.clinic);\n            setNewDoctor(record.doctor);\n            setNewAddress(record.address);\n            setNewPhone(record.phone);\n            setNewDate(record.date);\n            setNewReason(record.agenda);\n        }\n    }, [record])\n    \n    const handleMedicalEdit = async (record_id) => {\n        const updateMedical = {\n            id: record_id,\n            date: newDate,\n            clinic: newClinic,\n            address: newAddress,\n            phone: newPhone,\n            doctor: newDoctor,\n            agenda: newReason\n        };\n        try {\n            const response = await api.patch(`${userID}/pets/${id}/medical/${record_id}`, updateMedical, {\n                headers: {\n                    'x-access-token': auth.accessToken\n                }\n            });\n            navigate(`/post/${id}`)\n        } catch (err) {\n            console.log(`Error: ${err.message}`)\n        }\n    }\n\n    return (\n        <main className=\"NewPost\">\n            {record &&\n                <>\n                    <h2>Edit Medical Record</h2>\n                    <form className=\"newPostForm\" onSubmit={(e)=>e.preventDefault()}>\n                        <label htmlFor=\"postTitle\">Date:</label>\n                        <input\n                            id=\"postTitle\"\n                            type=\"text\"\n                            required\n                            value={ newDate }\n                            onChange={(e) => setNewDate(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Clinic:</label>\n                        <input\n                            id=\"postTitle\"\n                            type=\"text\"\n                            required\n                            value={ newClinic }\n                            onChange={(e) => setNewClinic(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Address:</label>\n                        <input\n                            id=\"postTitle\"\n                            type=\"text\"\n                            required\n                            value={ newAddress }\n                            onChange={(e) => setNewAddress(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Phone:</label>\n                        <input\n                            id=\"postTitle\"\n                            type=\"text\"\n                            required\n                            value={ newPhone }\n                            onChange={(e) => setNewPhone(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Doctor:</label>\n                        <input\n                            id=\"postTitle\"\n                            type=\"text\"\n                            required\n                            value={ newDoctor }\n                            onChange={(e) => setNewDoctor(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Reason:</label>\n                        <input\n                            id=\"postTitle\"\n                            type=\"text\"\n                            required\n                            value={ newReason }\n                            onChange={(e) => setNewReason(e.target.value)}\n                        />\n                        <button type=\"submit\" onClick={() => handleMedicalEdit(record_id)}>Submit</button>\n\n                    </form>\n                </>\n            }\n\n            {!record && \n                <>\n                    <h2>Page Not Found</h2>\n                    <p>Well, that's disappointing.</p>\n                    <p>\n                        <Link to='/'>Visit Our Homepage</Link>\n                    </p>\n                </>\n            }\n        </main>\n    )\n}\n\nexport default EditPetMedicalRecord","/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/medicals/NewPetMedicalRecord.js",["173"],"import { useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useContext } from 'react';\nimport DataContext from '../context/DataContext';\nimport api from '../api/posts';\n\nexport const NewPetMedicalRecord = () => {\n    const navigate = useNavigate();\n\n    // Inputs for Pet in POST\n    const { userID, auth } = useContext(DataContext);\n    const { id } = useParams(); // extract the id from the link\n    const [newClinic, setNewClinic] = useState('');\n    const [newDoctor, setNewDoctor] = useState('');\n    const [newAddress, setNewAddress] = useState('');\n    const [newPhone, setNewPhone] = useState('');\n    const [newDate, setNewDate] = useState('');\n    const [newReason, setNewReason] = useState('');\n    \n    const handleSubmitMedical = async () => {\n        const newMedical = {\n            date: newDate,\n            clinic: newClinic,\n            address: newAddress,\n            phone: newPhone,\n            doctor: newDoctor,\n            agenda: newReason\n        };\n        try {\n            const response = await api.post(`${userID}/pets/${id}/medical`, newMedical, {\n                headers: {\n                    'x-access-token': auth.accessToken\n                }\n            });\n            navigate(`/post/${id}`)\n        } catch (err) {\n            console.log(`Error: ${err.message}`)\n        }\n    }\n\n    return (\n        <main className=\"NewPost\">\n            <>\n                <h2>New Medical Record</h2>\n                <form className=\"newPostForm\" onSubmit={(e)=>e.preventDefault()}>\n                    <label htmlFor=\"postTitle\">Date:</label>\n                    <input\n                        id=\"postTitle\"\n                        type=\"text\"\n                        required\n                        value={ newDate }\n                        onChange={(e) => setNewDate(e.target.value)}\n                    />\n                    <label htmlFor=\"postTitle\">Clinic:</label>\n                    <input\n                        id=\"postTitle\"\n                        type=\"text\"\n                        required\n                        value={ newClinic }\n                        onChange={(e) => setNewClinic(e.target.value)}\n                    />\n                    <label htmlFor=\"postTitle\">Address:</label>\n                    <input\n                        id=\"postTitle\"\n                        type=\"text\"\n                        required\n                        value={ newAddress }\n                        onChange={(e) => setNewAddress(e.target.value)}\n                    />\n                    <label htmlFor=\"postTitle\">Phone:</label>\n                    <input\n                        id=\"postTitle\"\n                        type=\"text\"\n                        required\n                        value={ newPhone }\n                        onChange={(e) => setNewPhone(e.target.value)}\n                    />\n                    <label htmlFor=\"postTitle\">Doctor:</label>\n                    <input\n                        id=\"postTitle\"\n                        type=\"text\"\n                        required\n                        value={ newDoctor }\n                        onChange={(e) => setNewDoctor(e.target.value)}\n                    />\n                    <label htmlFor=\"postTitle\">Reason:</label>\n                    <input\n                        id=\"postTitle\"\n                        type=\"text\"\n                        required\n                        value={ newReason }\n                        onChange={(e) => setNewReason(e.target.value)}\n                    />\n                    <button type=\"submit\" onClick={() => handleSubmitMedical()}>Submit</button>\n\n                </form>\n            </>\n        </main>\n    )\n}\n\nexport default NewPetMedicalRecord",{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"174","replacedBy":"178"},{"ruleId":"176","replacedBy":"179"},{"ruleId":"174","replacedBy":"180"},{"ruleId":"176","replacedBy":"181"},{"ruleId":"182","severity":1,"message":"183","line":31,"column":8,"nodeType":"184","endLine":31,"endColumn":27,"suggestions":"185"},{"ruleId":"186","severity":1,"message":"187","line":45,"column":19,"nodeType":"188","messageId":"189","endLine":45,"endColumn":27},{"ruleId":"186","severity":1,"message":"187","line":30,"column":19,"nodeType":"188","messageId":"189","endLine":30,"endColumn":27},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],["190"],["191"],["190"],["191"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setMedicalRecord'. Either include it or remove the dependency array.","ArrayExpression",["192"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"193","fix":"194"},"Update the dependencies array to be: [pet, userID, auth, setMedicalRecord]",{"range":"195","text":"196"},[1222,1241],"[pet, userID, auth, setMedicalRecord]"]