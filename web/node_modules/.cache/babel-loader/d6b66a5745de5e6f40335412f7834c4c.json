{"ast":null,"code":"var _jsxFileName = \"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/pets/EditPet.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { useContext } from 'react';\nimport DataContext from '../context/DataContext';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const EditPet = () => {\n  _s();\n\n  const {\n    pets,\n    handleEdit,\n    newPetName,\n    setNewPetName,\n    newPetType,\n    setNewPetType,\n    newDob,\n    setNewDob,\n    newDeworm,\n    setNewDeworm,\n    newGender,\n    setNewGender,\n    newSter,\n    setNewSter,\n    newPetDesc,\n    setNewPetDesc\n  } = useContext(DataContext);\n  const {\n    id\n  } = useParams(); // extract the id from the link\n\n  const pet = pets.find(pet => pet.id.toString() === id);\n  const [startDate, setStartDate] = useState(new Date());\n\n  function getDate(date) {\n    var day = date.getDate();\n    var month = date.getMonth() + 1; // JS counts month from 0\n\n    var year = date.getFullYear();\n    var format = month + \"-\" + day + \"-\" + year;\n    console.log(format);\n    return format;\n  }\n\n  ;\n  useEffect(() => {\n    // To pre-fill the form with existing info\n    if (pet) {\n      setNewPetName(pet.pet_name);\n      setNewPetType(pet.pet_type);\n      setNewDob(getDate(new Date(pet.pet_dob)));\n      setNewDeworm(getDate(new Date(pet.last_deworm)));\n      setNewGender(pet.pet_gender);\n      setNewSter(pet.sterilised.toString());\n      setNewPetDesc(pet.pet_description);\n    }\n  }, [pet, setNewPetName, setNewPetType, setNewDob, setNewDeworm, setNewGender, setNewSter, setNewPetDesc]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"NewPost\",\n    children: [pet && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Pet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"newPostForm\",\n        onSubmit: e => e.preventDefault(),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Pet Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\" // match with htmlFor attribute\n          ,\n          type: \"text\" // accept text input\n          ,\n          required: true,\n          value: newPetName,\n          onChange: e => setNewPetName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Pet Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\" // match with htmlFor attribute\n          ,\n          type: \"text\" // accept text input\n          ,\n          required: true,\n          value: newPetType,\n          onChange: e => setNewPetType(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Gender:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\" // match with htmlFor attribute\n          ,\n          type: \"text\" // accept text input\n          ,\n          required: true,\n          value: newGender,\n          onChange: e => setNewGender(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Birthday (MM-DD-YYYY):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\" // match with htmlFor attribute\n          ,\n          type: \"text\" // accept text input\n          ,\n          required: true,\n          value: newDob,\n          onChange: e => setNewDob(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: startDate,\n          onChange: date => setStartDate(date)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Last Deworm Date (MM-DD-YYYY):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\" // match with htmlFor attribute\n          ,\n          type: \"text\" // accept text input\n          ,\n          required: true,\n          value: newDeworm,\n          onChange: e => setNewDeworm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Is your pet sterilised?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\" // match with htmlFor attribute\n          ,\n          type: \"text\" // accept text input\n          ,\n          required: true,\n          value: newSter,\n          onChange: e => setNewSter(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postBody\",\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"postBody\" // match with htmlFor attribute\n          ,\n          required: true,\n          value: newPetDesc,\n          onChange: e => setNewPetDesc(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: () => handleEdit(pet.id),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), !pet && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Page Not Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Well, that's disappointing.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Visit Our Homepage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditPet, \"WEifZclOlCjTjk83H4pWfPU1nyc=\", false, function () {\n  return [useParams];\n});\n\n_c = EditPet;\nexport default EditPet;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPet\");","map":{"version":3,"sources":["/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/pets/EditPet.js"],"names":["useEffect","useState","useParams","Link","useContext","DataContext","DatePicker","EditPet","pets","handleEdit","newPetName","setNewPetName","newPetType","setNewPetType","newDob","setNewDob","newDeworm","setNewDeworm","newGender","setNewGender","newSter","setNewSter","newPetDesc","setNewPetDesc","id","pet","find","toString","startDate","setStartDate","Date","getDate","date","day","month","getMonth","year","getFullYear","format","console","log","pet_name","pet_type","pet_dob","last_deworm","pet_gender","sterilised","pet_description","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { useContext } from 'react';\nimport DataContext from '../context/DataContext';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport const EditPet = () => {\n    const { pets, handleEdit, newPetName, setNewPetName, newPetType, setNewPetType, newDob, setNewDob, newDeworm, setNewDeworm, newGender, setNewGender, newSter, setNewSter, newPetDesc, setNewPetDesc } = useContext(DataContext);\n    const { id } = useParams(); // extract the id from the link\n    const pet = pets.find(pet => (pet.id).toString() === id);\n    const [ startDate, setStartDate ] = useState(new Date());\n\n    function getDate(date) {\n        var day = date.getDate();\n        var month = date.getMonth()+1; // JS counts month from 0\n        var year = date.getFullYear();\n        var format = month + \"-\" + day + \"-\" + year;\n        console.log(format)\n        return format\n    };\n\n    useEffect(() => {\n        // To pre-fill the form with existing info\n        if (pet) {\n            setNewPetName(pet.pet_name);\n            setNewPetType(pet.pet_type);\n            setNewDob(getDate(new Date(pet.pet_dob)));\n            setNewDeworm(getDate(new Date(pet.last_deworm)));\n            setNewGender(pet.pet_gender);\n            setNewSter(pet.sterilised.toString());\n            setNewPetDesc(pet.pet_description);\n        }\n    }, [pet, setNewPetName, setNewPetType, setNewDob, setNewDeworm, setNewGender, setNewSter, setNewPetDesc])\n    \n    return (\n        <main className=\"NewPost\">\n            {pet &&\n                <>\n                    <h2>Edit Pet</h2>\n                    <form className=\"newPostForm\" onSubmit={(e)=>e.preventDefault()}>\n                        <label htmlFor=\"postTitle\">Pet Name:</label>\n                        <input\n                            id=\"postTitle\" // match with htmlFor attribute\n                            type=\"text\" // accept text input\n                            required\n                            value={newPetName}\n                            onChange={(e) => setNewPetName(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Pet Type:</label>\n                        <input\n                            id=\"postTitle\" // match with htmlFor attribute\n                            type=\"text\" // accept text input\n                            required\n                            value={newPetType}\n                            onChange={(e) => setNewPetType(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Gender:</label>\n                        <input\n                            id=\"postTitle\" // match with htmlFor attribute\n                            type=\"text\" // accept text input\n                            required\n                            value={newGender}\n                            onChange={(e) => setNewGender(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Birthday (MM-DD-YYYY):</label>\n                        <input\n                            id=\"postTitle\" // match with htmlFor attribute\n                            type=\"text\" // accept text input\n                            required\n                            value={newDob}\n                            onChange={(e) => setNewDob(e.target.value)}\n                        />\n                        <DatePicker selected={startDate} onChange={(date) => setStartDate(date)} />\n\n                        <label htmlFor=\"postTitle\">Last Deworm Date (MM-DD-YYYY):</label>\n                        <input\n                            id=\"postTitle\" // match with htmlFor attribute\n                            type=\"text\" // accept text input\n                            required\n                            value={newDeworm}\n                            onChange={(e) => setNewDeworm(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Is your pet sterilised?</label>\n                        <input\n                            id=\"postTitle\" // match with htmlFor attribute\n                            type=\"text\" // accept text input\n                            required\n                            value={newSter}\n                            onChange={(e) => setNewSter(e.target.value)}\n                        />\n                    \n                        <label htmlFor=\"postBody\">Description:</label>\n                        <textarea\n                            id=\"postBody\" // match with htmlFor attribute\n                            required\n                            value={newPetDesc}\n                            onChange={(e) => setNewPetDesc(e.target.value)}\n                        />\n                        <button type=\"submit\" onClick={()=>handleEdit(pet.id)}>Submit</button>\n                    </form>\n                </>\n            }\n\n            {!pet && \n                <>\n                    <h2>Page Not Found</h2>\n                    <p>Well, that's disappointing.</p>\n                    <p>\n                        <Link to='/'>Visit Our Homepage</Link>\n                    </p>\n                </>\n            }\n        </main>\n    )\n}\n\nexport default EditPet"]},"metadata":{},"sourceType":"module"}