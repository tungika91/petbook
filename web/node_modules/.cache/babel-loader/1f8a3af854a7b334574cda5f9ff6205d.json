{"ast":null,"code":"var _jsxFileName = \"/Users/tungngo/Dropbox/Personal/Learning/React/petbook/src/Post.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport { useEffect, useContext } from 'react';\nimport DataContext from './context/DataContext';\nimport api from './api/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = ({\n  pet\n}) => {\n  _s();\n\n  const {\n    userID,\n    auth,\n    picURL,\n    setPicURL\n  } = useContext(DataContext);\n  useEffect(() => {\n    const getImages = async id => {\n      try {\n        // in axios, it automatically returns response in json format and catch the error, accesible through response.data\n        const response = await api.get(`${userID}/pets/${id}/upload`, {\n          headers: {\n            'x-access-token': auth.accessToken\n          }\n        });\n        setPicURL(response.data); // response.data is in json format\n      } catch (err) {\n        if (err.response) {\n          // Not in the 200 response range\n          console.log(err.response.data);\n          console.log(err.response.status);\n          console.log(err.response.headers);\n        } else {\n          console.log(`Error: ${err.message}`);\n        }\n      }\n    };\n\n    getImages(pet.id);\n  }, [pet.id]); // [] to show dependency so it won't infinitely request from server\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: picURL,\n        alt: pet.pet_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `post/${pet.id}`,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: pet.pet_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: pet.pet_type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, pet.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Post, \"h7caWl22pq+UlK3Tvb1AQt4Rgws=\");\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/tungngo/Dropbox/Personal/Learning/React/petbook/src/Post.js"],"names":["Link","useEffect","useContext","DataContext","api","Post","pet","userID","auth","picURL","setPicURL","getImages","id","response","get","headers","accessToken","data","err","console","log","status","message","pet_name","pet_type"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,OAAtC;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,GAAP,MAAgB,aAAhB;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AAAA;;AACtB,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA,MAAhB;AAAwBC,IAAAA;AAAxB,MAAsCR,UAAU,CAACC,WAAD,CAAtD;AACAF,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,SAAS,GAAG,MAAOC,EAAP,IAAc;AAC5B,UAAI;AACA;AACA,cAAMC,QAAQ,GAAG,MAAMT,GAAG,CAACU,GAAJ,CAAS,GAAEP,MAAO,SAAQK,EAAG,SAA7B,EAAuC;AAC1DG,UAAAA,OAAO,EAAE;AACL,8BAAkBP,IAAI,CAACQ;AADlB;AADiD,SAAvC,CAAvB;AAKAN,QAAAA,SAAS,CAACG,QAAQ,CAACI,IAAV,CAAT,CAPA,CAO0B;AAC7B,OARD,CAQE,OAAOC,GAAP,EAAY;AACV,YAAIA,GAAG,CAACL,QAAR,EAAkB;AAAE;AAChBM,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACL,QAAJ,CAAaI,IAAzB;AACAE,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACL,QAAJ,CAAaQ,MAAzB;AACAF,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACL,QAAJ,CAAaE,OAAzB;AACH,SAJD,MAIO;AAAEI,UAAAA,OAAO,CAACC,GAAR,CAAa,UAASF,GAAG,CAACI,OAAQ,EAAlC;AAAsC;AAClD;AACJ,KAhBD;;AAiBAX,IAAAA,SAAS,CAACL,GAAG,CAACM,EAAL,CAAT;AACH,GAnBQ,EAmBN,CAACN,GAAG,CAACM,EAAL,CAnBM,CAAT,CAFsB,CAqBT;;AAEb,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAA,6BACI;AAAK,QAAA,GAAG,EAAEH,MAAV;AAAkB,QAAA,GAAG,EAAEH,GAAG,CAACiB;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHJ,eAOI;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,QAAOjB,GAAG,CAACM,EAAG,EAAzB;AAAA,+BACI;AAAA,oBAAKN,GAAG,CAACiB;AAAT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA,kBAAOjB,GAAG,CAACkB;AAAX;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,KAA4BlB,GAAG,CAACM,EAAhC;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CA7CD;;GAAMP,I;;KAAAA,I;AA+CN,eAAeA,IAAf","sourcesContent":["import { Link } from 'react-router-dom';\nimport { useEffect, useContext } from 'react';\nimport DataContext from './context/DataContext';\nimport api from './api/posts';\n\nconst Post = ({ pet }) => {\n    const { userID, auth, picURL, setPicURL } = useContext(DataContext);\n    useEffect(() => {\n        const getImages = async (id) => {\n            try {\n                // in axios, it automatically returns response in json format and catch the error, accesible through response.data\n                const response = await api.get(`${userID}/pets/${id}/upload`, {\n                    headers: {\n                        'x-access-token': auth.accessToken\n                    }\n                });\n                setPicURL(response.data); // response.data is in json format\n            } catch (err) {\n                if (err.response) { // Not in the 200 response range\n                    console.log(err.response.data);\n                    console.log(err.response.status);\n                    console.log(err.response.headers);\n                } else { console.log(`Error: ${err.message}`) }\n            }\n        }\n        getImages(pet.id);\n    }, [pet.id]) // [] to show dependency so it won't infinitely request from server\n\n    return (\n        <div className=\"movie\" key={pet.id}>\n            <div></div>\n\n            <div>\n                <img src={picURL} alt={pet.pet_name}/>\n            </div>\n\n            <div>\n                <Link to={`post/${pet.id}`}>\n                    <h3>{pet.pet_name}</h3>\n                </Link>\n                <span>{pet.pet_type}</span>\n            </div>\n\n            {/* <p className=\"postBody\">{\n                (pet.pet_description).length <= 25\n                    ? pet.pet_description\n                    : `${(pet.pet_description).slice(0, 25)}...`\n            }</p> */}\n        </div>    \n    )\n}\n\nexport default Post\n"]},"metadata":{},"sourceType":"module"}