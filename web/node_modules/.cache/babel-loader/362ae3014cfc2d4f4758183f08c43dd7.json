{"ast":null,"code":"var _jsxFileName = \"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/medicals/EditPetMedicalRecord.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams, Link, useNavigate, useLocation } from \"react-router-dom\";\nimport { useContext } from 'react';\nimport DataContext from '../context/DataContext';\nimport api from '../api/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const EditPetMedicalRecord = () => {\n  _s();\n\n  const navigate = useNavigate(); // access prop by using location = useLocation() through location.state\n\n  const location = useLocation();\n  const record = location.state;\n  console.log(record);\n  const {\n    userID,\n    auth\n  } = useContext(DataContext);\n  const {\n    pet_id,\n    record_id\n  } = useParams(); // extract the id from the link\n\n  const [newClinic, setNewClinic] = useState('');\n  const [newDoctor, setNewDoctor] = useState('');\n  const [newAddress, setNewAddress] = useState('');\n  const [newPhone, setNewPhone] = useState('');\n  const [newDate, setNewDate] = useState('');\n  const [newReason, setNewReason] = useState('');\n  useEffect(() => {\n    // To pre-fill the form with existing info\n    if (record) {\n      setNewClinic(record.clinic);\n      setNewDoctor(record.doctor);\n      setNewAddress(record.address);\n      setNewPhone(record.phone);\n      setNewDate(record.date);\n      setNewReason(record.agenda);\n    }\n  }, [record]);\n\n  const handleMedicalEdit = async record_id => {\n    const updateMedical = {\n      id: record_id,\n      date: newDate,\n      clinic: newClinic,\n      address: newAddress,\n      phone: newPhone,\n      doctor: newDoctor,\n      agenda: newReason\n    };\n    console.log(updateMedical);\n\n    try {\n      const response = await api.patch(`${userID}/pets/${pet_id}/medical/${record_id}`, updateMedical, {\n        headers: {\n          'x-access-token': auth.accessToken\n        }\n      });\n      navigate(`/post/${pet_id}`);\n    } catch (err) {\n      console.log(`Error: ${err.message}`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"NewPost\",\n    children: [record && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Medical Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"newPostForm\",\n        onSubmit: e => e.preventDefault(),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\",\n          type: \"text\",\n          required: true,\n          value: newDate,\n          onChange: e => setNewDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Clinic:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\",\n          type: \"text\",\n          required: true,\n          value: newClinic,\n          onChange: e => setNewClinic(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\",\n          type: \"text\",\n          required: true,\n          value: newAddress,\n          onChange: e => setNewAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Phone:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\",\n          type: \"text\",\n          required: true,\n          value: newPhone,\n          onChange: e => setNewPhone(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Doctor:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\",\n          type: \"text\",\n          required: true,\n          value: newDoctor,\n          onChange: e => setNewDoctor(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Reason:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\",\n          type: \"text\",\n          required: true,\n          value: newReason,\n          onChange: e => setNewReason(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: () => handleMedicalEdit(record_id),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), !record && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Page Not Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Well, that's disappointing.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Visit Our Homepage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditPetMedicalRecord, \"rV7/HwpgUL0bs1X22q7ybJQqS2g=\", false, function () {\n  return [useNavigate, useLocation, useParams];\n});\n\n_c = EditPetMedicalRecord;\nexport default EditPetMedicalRecord;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPetMedicalRecord\");","map":{"version":3,"sources":["/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/medicals/EditPetMedicalRecord.js"],"names":["useEffect","useState","useParams","Link","useNavigate","useLocation","useContext","DataContext","api","EditPetMedicalRecord","navigate","location","record","state","console","log","userID","auth","pet_id","record_id","newClinic","setNewClinic","newDoctor","setNewDoctor","newAddress","setNewAddress","newPhone","setNewPhone","newDate","setNewDate","newReason","setNewReason","clinic","doctor","address","phone","date","agenda","handleMedicalEdit","updateMedical","id","response","patch","headers","accessToken","err","message","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams, Link, useNavigate, useLocation } from \"react-router-dom\";\nimport { useContext } from 'react';\nimport DataContext from '../context/DataContext';\nimport api from '../api/posts';\n\nexport const EditPetMedicalRecord = () => {\n    const navigate = useNavigate();\n    // access prop by using location = useLocation() through location.state\n    const location = useLocation();\n    const record = location.state;\n    console.log(record)\n    const { userID, auth } = useContext(DataContext);\n    const { pet_id, record_id } = useParams(); // extract the id from the link\n    const [newClinic, setNewClinic] = useState('');\n    const [newDoctor, setNewDoctor] = useState('');\n    const [newAddress, setNewAddress] = useState('');\n    const [newPhone, setNewPhone] = useState('');\n    const [newDate, setNewDate] = useState('');\n    const [newReason, setNewReason] = useState('');\n\n    useEffect(() => {\n        // To pre-fill the form with existing info\n        if (record) {\n            setNewClinic(record.clinic);\n            setNewDoctor(record.doctor);\n            setNewAddress(record.address);\n            setNewPhone(record.phone);\n            setNewDate(record.date);\n            setNewReason(record.agenda);\n        }\n    }, [record])\n    \n    const handleMedicalEdit = async (record_id) => {\n        const updateMedical = {\n            id: record_id,\n            date: newDate,\n            clinic: newClinic,\n            address: newAddress,\n            phone: newPhone,\n            doctor: newDoctor,\n            agenda: newReason\n        };\n        console.log(updateMedical)\n        try {\n            const response = await api.patch(`${userID}/pets/${pet_id}/medical/${record_id}`, updateMedical, {\n                headers: {\n                    'x-access-token': auth.accessToken\n                }\n            });\n            navigate(`/post/${pet_id}`)\n        } catch (err) {\n            console.log(`Error: ${err.message}`)\n        }\n    }\n\n    return (\n        <main className=\"NewPost\">\n            {record &&\n                <>\n                    <h2>Edit Medical Record</h2>\n                    <form className=\"newPostForm\" onSubmit={(e)=>e.preventDefault()}>\n                        <label htmlFor=\"postTitle\">Date:</label>\n                        <input\n                            id=\"postTitle\"\n                            type=\"text\"\n                            required\n                            value={ newDate }\n                            onChange={(e) => setNewDate(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Clinic:</label>\n                        <input\n                            id=\"postTitle\"\n                            type=\"text\"\n                            required\n                            value={ newClinic }\n                            onChange={(e) => setNewClinic(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Address:</label>\n                        <input\n                            id=\"postTitle\"\n                            type=\"text\"\n                            required\n                            value={ newAddress }\n                            onChange={(e) => setNewAddress(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Phone:</label>\n                        <input\n                            id=\"postTitle\"\n                            type=\"text\"\n                            required\n                            value={ newPhone }\n                            onChange={(e) => setNewPhone(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Doctor:</label>\n                        <input\n                            id=\"postTitle\"\n                            type=\"text\"\n                            required\n                            value={ newDoctor }\n                            onChange={(e) => setNewDoctor(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Reason:</label>\n                        <input\n                            id=\"postTitle\"\n                            type=\"text\"\n                            required\n                            value={ newReason }\n                            onChange={(e) => setNewReason(e.target.value)}\n                        />\n\n                        <button type=\"submit\" onClick={() => handleMedicalEdit(record_id)}>Submit</button>\n\n                    </form>\n                </>\n            }\n\n            {!record && \n                <>\n                    <h2>Page Not Found</h2>\n                    <p>Well, that's disappointing.</p>\n                    <p>\n                        <Link to='/'>Visit Our Homepage</Link>\n                    </p>\n                </>\n            }\n        </main>\n    )\n}\n\nexport default EditPetMedicalRecord"]},"metadata":{},"sourceType":"module"}