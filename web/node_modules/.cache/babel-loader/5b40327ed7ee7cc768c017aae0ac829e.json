{"ast":null,"code":"var _jsxFileName = \"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/medicals/PetMedical.js\",\n    _s = $RefreshSig$();\n\nimport { Link, useParams } from \"react-router-dom\";\nimport { useContext, useEffect, useState } from 'react';\nimport DataContext from '../context/DataContext';\nimport api from '../api/posts';\nimport PetMedicalRecord from \"./PetMedicalRecord\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PetMedical = () => {\n  _s();\n\n  const {\n    pets,\n    userID,\n    auth,\n    medicalRecord,\n    setMedicalRecord\n  } = useContext(DataContext);\n  const {\n    id\n  } = useParams(); // id is used in Route\n\n  const pet = pets.find(pet => pet.id.toString() === id); // === is for string match, == for numeric\n\n  const [popUpMenu, setPopUpMenu] = useState(false);\n\n  function PopUpMenu() {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"drop-down\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Menu-item-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Menu-item-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Menu-item-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this);\n  }\n\n  useEffect(() => {\n    const getMedicalRecords = async () => {\n      try {\n        const response = await api.get(`${userID}/pets/${pet.id}/medical/all`, {\n          headers: {\n            'x-access-token': auth.accessToken\n          }\n        });\n        response.data.sort((a, b) => new Date(b.date) - new Date(a.date));\n        setMedicalRecord(response.data); // response.data is in json format\n      } catch (err) {\n        if (err.response) {\n          // Not in the 200 response range\n          console.log(err.response.data);\n          console.log(err.response.status);\n          console.log(err.response.headers);\n        } else {\n          console.log(`Error: ${err.message}`);\n        }\n      }\n    };\n\n    getMedicalRecords();\n  }, [pet, userID, auth, setMedicalRecord]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPopUpMenu(!popUpMenu),\n        children: \"Menu with Dropdown\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), popUpMenu && PopUpMenu()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: 'new',\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add New Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: medicalRecord ? medicalRecord.map(record => /*#__PURE__*/_jsxDEV(PetMedicalRecord, {\n        record: record,\n        pet_id: pet.id\n      }, record.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)) : \"Missing Record\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PetMedical, \"bBMmf3nJfmG5kiXplTKi24dkWEk=\", false, function () {\n  return [useParams];\n});\n\n_c = PetMedical;\nexport default PetMedical;\n\nvar _c;\n\n$RefreshReg$(_c, \"PetMedical\");","map":{"version":3,"sources":["/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/medicals/PetMedical.js"],"names":["Link","useParams","useContext","useEffect","useState","DataContext","api","PetMedicalRecord","PetMedical","pets","userID","auth","medicalRecord","setMedicalRecord","id","pet","find","toString","popUpMenu","setPopUpMenu","PopUpMenu","getMedicalRecords","response","get","headers","accessToken","data","sort","a","b","Date","date","err","console","log","status","message","map","record"],"mappings":"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","sourcesContent":["import { Link, useParams } from \"react-router-dom\";\nimport { useContext, useEffect, useState } from 'react';\nimport DataContext from '../context/DataContext';\nimport api from '../api/posts';\nimport PetMedicalRecord from \"./PetMedicalRecord\";\n\nconst PetMedical = () => {\n    const { pets, userID, auth, medicalRecord, setMedicalRecord } = useContext(DataContext);\n    const { id } = useParams(); // id is used in Route\n    const pet = pets.find(pet => (pet.id).toString() === id); // === is for string match, == for numeric\n    const [popUpMenu, setPopUpMenu] = useState(false);\n\n    function PopUpMenu() {\n        return (\n          <ul className=\"drop-down\">\n            <li>Menu-item-1</li>\n            <li>Menu-item-2</li>\n            <li>Menu-item-3</li>\n          </ul>\n        );\n    }\n\n    useEffect(() => {\n    const getMedicalRecords = async () => {\n        try {\n            const response = await api.get(`${userID}/pets/${pet.id}/medical/all`, {\n                headers: {\n                    'x-access-token': auth.accessToken\n                }\n            });\n            response.data.sort((a,b) => new Date(b.date) - new Date(a.date));\n            setMedicalRecord(response.data); // response.data is in json format\n        } catch (err) {\n            if (err.response) { // Not in the 200 response range\n                console.log(err.response.data);\n                console.log(err.response.status);\n                console.log(err.response.headers);\n            } else { console.log(`Error: ${err.message}`) }\n        }\n    }\n    getMedicalRecords();\n    }, [pet, userID, auth, setMedicalRecord])\n\n    return (\n        <>\n            <div className=\"App\">\n                <button onClick={() => setPopUpMenu(!popUpMenu)}>\n                    Menu with Dropdown\n                </button>\n                {popUpMenu && PopUpMenu()}\n            </div>\n        \n            <Link to={'new'}>\n                <button>Add New Record</button>\n            </Link>\n            <div className=\"container\">\n                {medicalRecord \n                ? medicalRecord.map(record => (\n                    <PetMedicalRecord record={record} pet_id = {pet.id} key={record.id} />))\n                : \"Missing Record\"}\n            </div>\n        </>\n        \n    )\n}\n\nexport default PetMedical\n"]},"metadata":{},"sourceType":"module"}