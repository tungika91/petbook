{"ast":null,"code":"import{useEffect}from\"react\";import{useParams,Link}from\"react-router-dom\";import{useContext}from'react';import DataContext from'../context/DataContext';import DatePicker from\"react-datepicker\";import\"react-datepicker/dist/react-datepicker.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var EditPet=function EditPet(){var _useContext=useContext(DataContext),pets=_useContext.pets,handleEdit=_useContext.handleEdit,newPetName=_useContext.newPetName,setNewPetName=_useContext.setNewPetName,newPetType=_useContext.newPetType,setNewPetType=_useContext.setNewPetType,newDob=_useContext.newDob,setNewDob=_useContext.setNewDob,newDeworm=_useContext.newDeworm,setNewDeworm=_useContext.setNewDeworm,newGender=_useContext.newGender,setNewGender=_useContext.setNewGender,newSter=_useContext.newSter,setNewSter=_useContext.setNewSter,newPetDesc=_useContext.newPetDesc,setNewPetDesc=_useContext.setNewPetDesc;var _useParams=useParams(),id=_useParams.id;// extract the id from the link\nvar pet=pets.find(function(pet){return pet.id.toString()===id;});// function getDate(date) {\n//     var day = date.getDate();\n//     var month = date.getMonth()+1; // JS counts month from 0\n//     var year = date.getFullYear();\n//     var format = month + \"-\" + day + \"-\" + year;\n//     console.log(format)\n//     return format\n// };\nuseEffect(function(){// To pre-fill the form with existing info\nif(pet){setNewPetName(pet.pet_name);setNewPetType(pet.pet_type);setNewDob(new Date(pet.pet_dob));setNewDeworm(new Date(pet.last_deworm));setNewGender(pet.pet_gender);setNewSter(pet.sterilised.toString());setNewPetDesc(pet.pet_description);}},[pet,setNewPetName,setNewPetType,setNewDob,setNewDeworm,setNewGender,setNewSter,setNewPetDesc]);return/*#__PURE__*/_jsxs(\"main\",{className:\"NewPost\",children:[pet&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Edit Pet\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"newPostForm\",onSubmit:function onSubmit(e){return e.preventDefault();},children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"postTitle\",children:\"Pet Name:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"postTitle\"// match with htmlFor attribute\n,type:\"text\"// accept text input\n,required:true,value:newPetName,onChange:function onChange(e){return setNewPetName(e.target.value);}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"postTitle\",children:\"Pet Type:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"postTitle\"// match with htmlFor attribute\n,type:\"text\"// accept text input\n,required:true,value:newPetType,onChange:function onChange(e){return setNewPetType(e.target.value);}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"postTitle\",children:\"Gender:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"postTitle\"// match with htmlFor attribute\n,type:\"text\"// accept text input\n,required:true,value:newGender,onChange:function onChange(e){return setNewGender(e.target.value);}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"postTitle\",children:\"Birthday (MM-DD-YYYY):\"}),/*#__PURE__*/_jsx(DatePicker,{selected:newDob,onChange:function onChange(date){return setNewDob(date);}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"postTitle\",children:\"Last Deworm Date (MM-DD-YYYY):\"}),/*#__PURE__*/_jsx(DatePicker,{selected:newDeworm,onChange:function onChange(date){return setNewDeworm(date);}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"postTitle\",children:\"Is your pet sterilised?\"}),/*#__PURE__*/_jsx(\"input\",{id:\"postTitle\"// match with htmlFor attribute\n,type:\"text\"// accept text input\n,required:true,value:newSter,onChange:function onChange(e){return setNewSter(e.target.value);}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"postBody\",children:\"Description:\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"postBody\"// match with htmlFor attribute\n,required:true,value:newPetDesc,onChange:function onChange(e){return setNewPetDesc(e.target.value);}}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",onClick:function onClick(){return handleEdit(pet.id);},children:\"Submit\"})]})]}),!pet&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Page Not Found\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Well, that's disappointing.\"}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(Link,{to:\"/\",children:\"Visit Our Homepage\"})})]})]});};export default EditPet;","map":{"version":3,"sources":["/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/pets/EditPet.js"],"names":["useEffect","useParams","Link","useContext","DataContext","DatePicker","EditPet","pets","handleEdit","newPetName","setNewPetName","newPetType","setNewPetType","newDob","setNewDob","newDeworm","setNewDeworm","newGender","setNewGender","newSter","setNewSter","newPetDesc","setNewPetDesc","id","pet","find","toString","pet_name","pet_type","Date","pet_dob","last_deworm","pet_gender","sterilised","pet_description","e","preventDefault","target","value","date"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { useContext } from 'react';\nimport DataContext from '../context/DataContext';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport const EditPet = () => {\n    const { pets, handleEdit, newPetName, setNewPetName, newPetType, setNewPetType, newDob, setNewDob, newDeworm, setNewDeworm, newGender, setNewGender, newSter, setNewSter, newPetDesc, setNewPetDesc } = useContext(DataContext);\n    const { id } = useParams(); // extract the id from the link\n    const pet = pets.find(pet => (pet.id).toString() === id);\n\n    // function getDate(date) {\n    //     var day = date.getDate();\n    //     var month = date.getMonth()+1; // JS counts month from 0\n    //     var year = date.getFullYear();\n    //     var format = month + \"-\" + day + \"-\" + year;\n    //     console.log(format)\n    //     return format\n    // };\n\n    useEffect(() => {\n        // To pre-fill the form with existing info\n        if (pet) {\n            setNewPetName(pet.pet_name);\n            setNewPetType(pet.pet_type);\n            setNewDob(new Date(pet.pet_dob));\n            setNewDeworm(new Date(pet.last_deworm));\n            setNewGender(pet.pet_gender);\n            setNewSter(pet.sterilised.toString());\n            setNewPetDesc(pet.pet_description);\n        }\n    }, [pet, setNewPetName, setNewPetType, setNewDob, setNewDeworm, setNewGender, setNewSter, setNewPetDesc])\n    \n    return (\n        <main className=\"NewPost\">\n            {pet &&\n                <>\n                    <h2>Edit Pet</h2>\n                    <form className=\"newPostForm\" onSubmit={(e)=>e.preventDefault()}>\n                        <label htmlFor=\"postTitle\">Pet Name:</label>\n                        <input\n                            id=\"postTitle\" // match with htmlFor attribute\n                            type=\"text\" // accept text input\n                            required\n                            value={newPetName}\n                            onChange={(e) => setNewPetName(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Pet Type:</label>\n                        <input\n                            id=\"postTitle\" // match with htmlFor attribute\n                            type=\"text\" // accept text input\n                            required\n                            value={newPetType}\n                            onChange={(e) => setNewPetType(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Gender:</label>\n                        <input\n                            id=\"postTitle\" // match with htmlFor attribute\n                            type=\"text\" // accept text input\n                            required\n                            value={newGender}\n                            onChange={(e) => setNewGender(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Birthday (MM-DD-YYYY):</label>\n                        <DatePicker selected={newDob} onChange={(date) => setNewDob(date)} />\n\n                        <label htmlFor=\"postTitle\">Last Deworm Date (MM-DD-YYYY):</label>\n                        <DatePicker selected={newDeworm} onChange={(date) => setNewDeworm(date)} />\n\n                        <label htmlFor=\"postTitle\">Is your pet sterilised?</label>\n                        <input\n                            id=\"postTitle\" // match with htmlFor attribute\n                            type=\"text\" // accept text input\n                            required\n                            value={newSter}\n                            onChange={(e) => setNewSter(e.target.value)}\n                        />\n                    \n                        <label htmlFor=\"postBody\">Description:</label>\n                        <textarea\n                            id=\"postBody\" // match with htmlFor attribute\n                            required\n                            value={newPetDesc}\n                            onChange={(e) => setNewPetDesc(e.target.value)}\n                        />\n                        <button type=\"submit\" onClick={()=>handleEdit(pet.id)}>Submit</button>\n                    </form>\n                </>\n            }\n\n            {!pet && \n                <>\n                    <h2>Page Not Found</h2>\n                    <p>Well, that's disappointing.</p>\n                    <p>\n                        <Link to='/'>Visit Our Homepage</Link>\n                    </p>\n                </>\n            }\n        </main>\n    )\n}\n\nexport default EditPet"]},"metadata":{},"sourceType":"module"}