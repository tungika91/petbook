{"ast":null,"code":"var _jsxFileName = \"/Users/tungngo/Dropbox/Personal/Learning/React/petbook/src/EditPet.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const EditPet = ({\n  pets,\n  handleEdit,\n  newPetName,\n  setNewPetName,\n  newPetType,\n  setNewPetType,\n  newDob,\n  setNewDob,\n  newDeworm,\n  setNewDeworm,\n  newGender,\n  setNewGender,\n  newSter,\n  setNewSter,\n  newPetDesc,\n  setNewPetDesc\n}) => {\n  _s();\n\n  const {\n    id\n  } = useParams(); // extract the id from the link\n\n  const pet = pets.find(pet => pet.id.toString() === id);\n  useEffect(() => {\n    // To pre-fill with form with existing info\n    if (pet) {\n      var parts = pet.pet_dob.split(' '); // Please pay attention to the month (parts[1]); JavaScript counts months from 0:\n      // January - 0, February - 1, etc.\n\n      console.log(parts[0], parts[1], parts[2]);\n      setNewPetName(pet.pet_name);\n      setNewPetType(pet.pet_type);\n      setNewDob(format(new Date(), 'M-d-y'));\n      setNewDeworm(pet.last_deworm);\n      setNewGender(pet.pet_gender);\n      setNewSter(pet.sterilised);\n      setNewPetDesc(pet.pet_description);\n    }\n  }, [pet, setNewPetName, setNewPetType]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"NewPost\",\n    children: [pet && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Pet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"newPostForm\",\n        onSubmit: e => e.preventDefault(),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Pet Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\" // match with htmlFor attribute\n          ,\n          type: \"text\" // accept text input\n          ,\n          required: true,\n          value: newPetName,\n          onChange: e => setNewPetName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Pet Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\" // match with htmlFor attribute\n          ,\n          type: \"text\" // accept text input\n          ,\n          required: true,\n          value: newPetType,\n          onChange: e => setNewPetType(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Gender:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\" // match with htmlFor attribute\n          ,\n          type: \"text\" // accept text input\n          ,\n          required: true,\n          value: newGender,\n          onChange: e => setNewGender(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Birthday (MM-DD-YYYY):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\" // match with htmlFor attribute\n          ,\n          type: \"text\" // accept text input\n          ,\n          required: true,\n          value: newDob,\n          onChange: e => setNewDob(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Last Deworm Date (MM-DD-YYYY):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\" // match with htmlFor attribute\n          ,\n          type: \"text\" // accept text input\n          ,\n          required: true,\n          value: newDeworm,\n          onChange: e => setNewDeworm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Is your pet sterilised?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\" // match with htmlFor attribute\n          ,\n          type: \"text\" // accept text input\n          ,\n          required: true,\n          value: newSter,\n          onChange: e => setNewSter(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postBody\",\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"postBody\" // match with htmlFor attribute\n          ,\n          required: true,\n          value: newPetDesc,\n          onChange: e => setNewPetDesc(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: () => handleEdit(pet.id),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), !pet && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Page Not Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Well, that's disappointing.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Visit Our Homepage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditPet, \"XT1vicrm+NSYLQxrGm9hA77HN9Y=\", false, function () {\n  return [useParams];\n});\n\n_c = EditPet;\nexport default EditPet;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPet\");","map":{"version":3,"sources":["/Users/tungngo/Dropbox/Personal/Learning/React/petbook/src/EditPet.js"],"names":["useEffect","useParams","Link","format","EditPet","pets","handleEdit","newPetName","setNewPetName","newPetType","setNewPetType","newDob","setNewDob","newDeworm","setNewDeworm","newGender","setNewGender","newSter","setNewSter","newPetDesc","setNewPetDesc","id","pet","find","toString","parts","pet_dob","split","console","log","pet_name","pet_type","Date","last_deworm","pet_gender","sterilised","pet_description","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { format } from 'date-fns';\n\nexport const EditPet = ({\n    pets, handleEdit, newPetName, setNewPetName, newPetType, setNewPetType, newDob, setNewDob, newDeworm, setNewDeworm, newGender, setNewGender, newSter, setNewSter, newPetDesc, setNewPetDesc\n}) => {\n\n    const { id } = useParams(); // extract the id from the link\n    const pet = pets.find(pet => (pet.id).toString() === id);\n    \n    useEffect(() => {\n        // To pre-fill with form with existing info\n        if (pet) {\n            var parts =pet.pet_dob.split(' ');\n            // Please pay attention to the month (parts[1]); JavaScript counts months from 0:\n            // January - 0, February - 1, etc.\n            console.log(parts[0], parts[1], parts[2]);\n            setNewPetName(pet.pet_name);\n            setNewPetType(pet.pet_type);\n            setNewDob(format(new Date(), 'M-d-y'));\n            setNewDeworm(pet.last_deworm);\n            setNewGender(pet.pet_gender);\n            setNewSter(pet.sterilised);\n            setNewPetDesc(pet.pet_description);\n        }\n    }, [pet, setNewPetName, setNewPetType])\n    \n    return (\n        <main className=\"NewPost\">\n            {pet &&\n                <>\n                    <h2>Edit Pet</h2>\n                    <form className=\"newPostForm\" onSubmit={(e)=>e.preventDefault()}>\n                        <label htmlFor=\"postTitle\">Pet Name:</label>\n                        <input\n                            id=\"postTitle\" // match with htmlFor attribute\n                            type=\"text\" // accept text input\n                            required\n                            value={newPetName}\n                            onChange={(e) => setNewPetName(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Pet Type:</label>\n                        <input\n                            id=\"postTitle\" // match with htmlFor attribute\n                            type=\"text\" // accept text input\n                            required\n                            value={newPetType}\n                            onChange={(e) => setNewPetType(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Gender:</label>\n                        <input\n                            id=\"postTitle\" // match with htmlFor attribute\n                            type=\"text\" // accept text input\n                            required\n                            value={newGender}\n                            onChange={(e) => setNewGender(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Birthday (MM-DD-YYYY):</label>\n                        <input\n                            id=\"postTitle\" // match with htmlFor attribute\n                            type=\"text\" // accept text input\n                            required\n                            value={newDob}\n                            onChange={(e) => setNewDob(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Last Deworm Date (MM-DD-YYYY):</label>\n                        <input\n                            id=\"postTitle\" // match with htmlFor attribute\n                            type=\"text\" // accept text input\n                            required\n                            value={newDeworm}\n                            onChange={(e) => setNewDeworm(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Is your pet sterilised?</label>\n                        <input\n                            id=\"postTitle\" // match with htmlFor attribute\n                            type=\"text\" // accept text input\n                            required\n                            value={newSter}\n                            onChange={(e) => setNewSter(e.target.value)}\n                        />\n                    \n                        <label htmlFor=\"postBody\">Description:</label>\n                        <textarea\n                            id=\"postBody\" // match with htmlFor attribute\n                            required\n                            value={newPetDesc}\n                            onChange={(e) => setNewPetDesc(e.target.value)}\n                        />\n                        <button type=\"submit\" onClick={()=>handleEdit(pet.id)}>Submit</button>\n                    </form>\n                </>\n            }\n\n            {!pet && \n                <>\n                    <h2>Page Not Found</h2>\n                    <p>Well, that's disappointing.</p>\n                    <p>\n                        <Link to='/'>Visit Our Homepage</Link>\n                    </p>\n                </>\n            }\n        </main>\n    )\n}\n\nexport default EditPet"]},"metadata":{},"sourceType":"module"}