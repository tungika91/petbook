{"ast":null,"code":"var _jsxFileName = \"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/medicals/EditPetMedicalRecord.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { useContext } from 'react';\nimport DataContext from '../context/DataContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const EditPetMedicalRecord = () => {\n  _s();\n\n  // Inputs for Pet in PATCH\n  const {\n    medicalRecord\n  } = useContext(DataContext);\n  console.log(medicalRecord);\n  const {\n    id\n  } = useParams(); // extract the id from the link\n\n  console.log(id);\n  const record = medicalRecord.find(record => record.id.toString() === id);\n  useEffect(() => {\n    // To pre-fill the form with existing info\n    if (record) {\n      setNewClinic(record.clinic);\n    }\n  }, [record, setNewClinic]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"NewPost\",\n    children: [record && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Medical Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"newPostForm\",\n        onSubmit: e => e.preventDefault(),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Clinic:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\" // match with htmlFor attribute\n          ,\n          type: \"text\" // accept text input\n          ,\n          required: true,\n          value: newClinic,\n          onChange: e => setNewClinic(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), !record && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Page Not Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Well, that's disappointing.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Visit Our Homepage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditPetMedicalRecord, \"41JO7SDgBQjhInhJBnfo/GYdOHI=\", false, function () {\n  return [useParams];\n});\n\n_c = EditPetMedicalRecord;\nexport default EditPetMedicalRecord;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPetMedicalRecord\");","map":{"version":3,"sources":["/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/medicals/EditPetMedicalRecord.js"],"names":["useEffect","useState","useParams","Link","useContext","DataContext","EditPetMedicalRecord","medicalRecord","console","log","id","record","find","toString","setNewClinic","clinic","e","preventDefault","newClinic","target","value"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,kBAAhC;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;;AAEA,OAAO,MAAMC,oBAAoB,GAAG,MAAM;AAAA;;AACtC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAoBH,UAAU,CAACC,WAAD,CAApC;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AACA,QAAM;AAAEG,IAAAA;AAAF,MAASR,SAAS,EAAxB,CAJsC,CAIV;;AAC5BM,EAAAA,OAAO,CAACC,GAAR,CAAYC,EAAZ;AACA,QAAMC,MAAM,GAAGJ,aAAa,CAACK,IAAd,CAAmBD,MAAM,IAAKA,MAAM,CAACD,EAAR,CAAYG,QAAZ,OAA2BH,EAAxD,CAAf;AAIAV,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,QAAIW,MAAJ,EAAY;AACRG,MAAAA,YAAY,CAACH,MAAM,CAACI,MAAR,CAAZ;AACH;AACJ,GALQ,EAKN,CAACJ,MAAD,EAASG,YAAT,CALM,CAAT;AAOA,sBACI;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA,eACKH,MAAM,iBACH;AAAA,8BACI;AAAA,kBAAI;AAAJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,SAAS,EAAC,aAAhB;AAA8B,QAAA,QAAQ,EAAGK,CAAD,IAAKA,CAAC,CAACC,cAAF,EAA7C;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,WAAf;AAAA,oBAA2B;AAA3B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,UAAA,EAAE,EAAC,WADP,CACmB;AADnB;AAEI,UAAA,IAAI,EAAC,MAFT,CAEgB;AAFhB;AAGI,UAAA,QAAQ,MAHZ;AAII,UAAA,KAAK,EAAEC,SAJX;AAKI,UAAA,QAAQ,EAAGF,CAAD,IAAOF,YAAY,CAACE,CAAC,CAACG,MAAF,CAASC,KAAV;AALjC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,oBAFR,EAiBK,CAACT,MAAD,iBACG;AAAA,8BACI;AAAA,kBAAI;AAAJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAG;AAAH;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAA,oBAAa;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA,oBAlBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CA9CM;;GAAML,oB;UAIMJ,S;;;KAJNI,oB;AAgDb,eAAeA,oBAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { useContext } from 'react';\nimport DataContext from '../context/DataContext';\n\nexport const EditPetMedicalRecord = () => {\n    // Inputs for Pet in PATCH\n    const { medicalRecord } = useContext(DataContext);\n    console.log(medicalRecord);\n    const { id } = useParams(); // extract the id from the link\n    console.log(id);\n    const record = medicalRecord.find(record => (record.id).toString() === id);\n\n\n\n    useEffect(() => {\n        // To pre-fill the form with existing info\n        if (record) {\n            setNewClinic(record.clinic);\n        }\n    }, [record, setNewClinic])\n    \n    return (\n        <main className=\"NewPost\">\n            {record &&\n                <>\n                    <h2>Edit Medical Record</h2>\n                    <form className=\"newPostForm\" onSubmit={(e)=>e.preventDefault()}>\n                        <label htmlFor=\"postTitle\">Clinic:</label>\n                        <input\n                            id=\"postTitle\" // match with htmlFor attribute\n                            type=\"text\" // accept text input\n                            required\n                            value={newClinic}\n                            onChange={(e) => setNewClinic(e.target.value)}\n                        />\n                    </form>\n                </>\n            }\n\n            {!record && \n                <>\n                    <h2>Page Not Found</h2>\n                    <p>Well, that's disappointing.</p>\n                    <p>\n                        <Link to='/'>Visit Our Homepage</Link>\n                    </p>\n                </>\n            }\n        </main>\n    )\n}\n\nexport default EditPetMedicalRecord"]},"metadata":{},"sourceType":"module"}