{"ast":null,"code":"var _jsxFileName = \"/Users/tungngo/Dropbox/Personal/Learning/React/petbook/src/Register.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState, useEffect, useContext } from 'react';\nimport DataContext from './context/DataContext';\nimport { Link, useNavigate, useLocation } from 'react-router-dom'; // import AuthContext from \"./context/AuthProvider\";\n\nimport axios from './api/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst REGISTER_URL = '/register';\n\nconst Login = () => {\n  _s();\n\n  var _location$state;\n\n  // const { setAuth } = useContext(AuthContext);\n  const userRef = useRef();\n  const errRef = useRef();\n  const {\n    user,\n    setUser,\n    email,\n    setEmail,\n    pwd,\n    setPwd,\n    setUserID,\n    setAuth\n  } = useContext(DataContext);\n  const [errMsg, setErrMsg] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.from.pathname) || \"/\";\n  useEffect(() => {\n    userRef.current.focus();\n  }, []);\n  useEffect(() => {\n    setErrMsg('');\n  }, [user, pwd]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      var _response$data, _response$data2;\n\n      const response = await axios.post(REGISTER_URL, JSON.stringify({\n        username: user,\n        password: pwd\n      }), {\n        headers: {\n          'Content-Type': 'application/json'\n        } // withCredentials: true\n\n      });\n      console.log(JSON.stringify(response === null || response === void 0 ? void 0 : response.data));\n      const id = response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.id;\n      const accessToken = response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.token;\n      setUserID(id);\n      setAuth({\n        user,\n        pwd,\n        accessToken\n      }); // const roles = response?.data?.roles;\n      // setUser('');\n      // setPwd('');\n\n      navigate(from, {\n        replace: true\n      });\n    } catch (err) {\n      var _err$response, _err$response2;\n\n      if (!(err === null || err === void 0 ? void 0 : err.response)) {\n        setErrMsg('No Server Response');\n      } else if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 400) {\n        setErrMsg('Missing Username or Password');\n      } else if (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) === 401) {\n        setErrMsg('Wrong Username or Password');\n      } else {\n        setErrMsg('Login Failed');\n      }\n\n      errRef.current.focus();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      ref: errRef,\n      className: errMsg ? \"errmsg\" : \"offscreen\",\n      \"aria-live\": \"assertive\",\n      children: errMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        ref: userRef,\n        autoComplete: \"off\",\n        onChange: e => setUser(e.target.value),\n        value: user,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        autoComplete: \"off\",\n        onChange: e => setEmail(e.target.value),\n        value: user,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        onChange: e => setPwd(e.target.value),\n        value: pwd,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Login, \"zD5fY9NHeQMAVfkRvzLUZZdZF9k=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/tungngo/Dropbox/Personal/Learning/React/petbook/src/Register.js"],"names":["useRef","useState","useEffect","useContext","DataContext","Link","useNavigate","useLocation","axios","REGISTER_URL","Login","userRef","errRef","user","setUser","email","setEmail","pwd","setPwd","setUserID","setAuth","errMsg","setErrMsg","navigate","location","from","state","pathname","current","focus","handleSubmit","e","preventDefault","response","post","JSON","stringify","username","password","headers","console","log","data","id","accessToken","token","replace","err","status","target","value"],"mappings":"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","sourcesContent":["import { useRef, useState, useEffect, useContext } from 'react';\nimport DataContext from './context/DataContext';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\n// import AuthContext from \"./context/AuthProvider\";\n\nimport axios from './api/axios';\nconst REGISTER_URL = '/register';\n\nconst Login = () => {\n    // const { setAuth } = useContext(AuthContext);\n    const userRef = useRef();\n    const errRef = useRef();\n\n    const { user, setUser, email, setEmail, pwd, setPwd, setUserID, setAuth } = useContext(DataContext);\n    const [errMsg, setErrMsg] = useState('');\n\n    const navigate = useNavigate();\n    const location = useLocation();\n    const from = location.state?.from.pathname || \"/\";\n\n    useEffect(() => {\n        userRef.current.focus();\n    }, [])\n\n    useEffect(() => {\n        setErrMsg('');\n    }, [user, pwd])\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await axios.post(REGISTER_URL,\n                JSON.stringify({ username: user, password: pwd }),\n                {\n                    headers: { 'Content-Type': 'application/json' },\n                    // withCredentials: true\n                }\n            );\n            console.log(JSON.stringify(response?.data))\n            const id = response?.data?.id;\n            const accessToken = response?.data?.token;\n            setUserID(id)\n            setAuth({ user, pwd, accessToken })\n            // const roles = response?.data?.roles;\n            // setUser('');\n            // setPwd('');\n            navigate(from, { replace: true });\n\n        } catch (err) {\n            if (!err?.response) {\n                setErrMsg('No Server Response');\n            } else if (err.response?.status === 400) {\n                setErrMsg('Missing Username or Password');\n            } else if (err.response?.status === 401) {\n                setErrMsg('Wrong Username or Password');\n            } else {\n                setErrMsg('Login Failed');\n            }\n            errRef.current.focus();\n        }\n    }\n\n    return (\n            <section>\n                <p ref={errRef} className={errMsg ? \"errmsg\" : \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\n                <h1>Sign Up</h1>\n                <form onSubmit={handleSubmit}>\n                    <label htmlFor=\"username\">Username:</label>\n                    <input\n                        type=\"text\"\n                        id=\"username\"\n                        ref={userRef}\n                        autoComplete=\"off\"\n                        onChange={(e) => setUser(e.target.value)}\n                        value={user}\n                        required\n                    />\n\n                    <label htmlFor=\"email\">Email:</label>\n                    <input\n                        type=\"text\"\n                        id=\"email\"\n                        autoComplete=\"off\"\n                        onChange={(e) => setEmail(e.target.value)}\n                        value={user}\n                        required\n                    />\n\n                    <label htmlFor=\"password\">Password:</label>\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        onChange={(e) => setPwd(e.target.value)}\n                        value={pwd}\n                        required\n                    />\n                    <button>Register</button>\n                </form>\n\n            </section>\n\n    )\n}\n\nexport default Login"]},"metadata":{},"sourceType":"module"}