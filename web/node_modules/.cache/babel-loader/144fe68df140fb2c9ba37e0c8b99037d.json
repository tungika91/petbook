{"ast":null,"code":"import _regeneratorRuntime from\"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from\"react\";import{useParams,Link,useNavigate,useLocation}from\"react-router-dom\";import{useContext}from'react';import DataContext from'../context/DataContext';import api from'../api/axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var EditPetMedicalRecord=function EditPetMedicalRecord(){var navigate=useNavigate();// access prop by using location = useLocation() through location.state\nvar location=useLocation();var record=location.state;console.log(record);var _useContext=useContext(DataContext),userID=_useContext.userID,auth=_useContext.auth;var _useParams=useParams(),id=_useParams.id,record_id=_useParams.record_id;// extract the id from the link\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),newClinic=_useState2[0],setNewClinic=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),newDoctor=_useState4[0],setNewDoctor=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),newAddress=_useState6[0],setNewAddress=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),newPhone=_useState8[0],setNewPhone=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),newDate=_useState10[0],setNewDate=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),newReason=_useState12[0],setNewReason=_useState12[1];useEffect(function(){// To pre-fill the form with existing info\nif(record){setNewClinic(record.clinic);setNewDoctor(record.doctor);setNewAddress(record.address);setNewPhone(record.phone);setNewDate(record.date);setNewReason(record.agenda);}},[record]);var handleMedicalEdit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(record_id){var updateMedical,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:updateMedical={id:record_id,date:newDate,clinic:newClinic,address:newAddress,phone:newPhone,doctor:newDoctor,agenda:newReason};console.log(updateMedical);_context.prev=2;_context.next=5;return api.patch(\"\".concat(userID,\"/pets/\").concat(id,\"/medical/\").concat(record_id),updateMedical,{headers:{'x-access-token':auth.accessToken}});case 5:response=_context.sent;navigate(\"/post/\".concat(id));console.log(response);_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](2);console.log(\"Error: \".concat(_context.t0.message));case 13:case\"end\":return _context.stop();}}},_callee,null,[[2,10]]);}));return function handleMedicalEdit(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"main\",{className:\"NewPost\",children:[record&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Edit Medical Record\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"newPostForm\",onSubmit:function onSubmit(e){return e.preventDefault();},children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"postTitle\",children:\"Date:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"postTitle\",type:\"text\",required:true,value:newDate,onChange:function onChange(e){return setNewDate(e.target.value);}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"postTitle\",children:\"Clinic:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"postTitle\",type:\"text\",required:true,value:newClinic,onChange:function onChange(e){return setNewClinic(e.target.value);}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"postTitle\",children:\"Address:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"postTitle\",type:\"text\",required:true,value:newAddress,onChange:function onChange(e){return setNewAddress(e.target.value);}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"postTitle\",children:\"Phone:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"postTitle\",type:\"text\",required:true,value:newPhone,onChange:function onChange(e){return setNewPhone(e.target.value);}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"postTitle\",children:\"Doctor:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"postTitle\",type:\"text\",required:true,value:newDoctor,onChange:function onChange(e){return setNewDoctor(e.target.value);}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"postTitle\",children:\"Reason:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"postTitle\",type:\"text\",required:true,value:newReason,onChange:function onChange(e){return setNewReason(e.target.value);}}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",onClick:function onClick(){return handleMedicalEdit(record_id);},children:\"Submit\"})]})]}),!record&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Page Not Found\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Well, that's disappointing.\"}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(Link,{to:\"/\",children:\"Visit Our Homepage\"})})]})]});};export default EditPetMedicalRecord;","map":{"version":3,"sources":["/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/medicals/EditPetMedicalRecord.js"],"names":["useEffect","useState","useParams","Link","useNavigate","useLocation","useContext","DataContext","api","EditPetMedicalRecord","navigate","location","record","state","console","log","userID","auth","id","record_id","newClinic","setNewClinic","newDoctor","setNewDoctor","newAddress","setNewAddress","newPhone","setNewPhone","newDate","setNewDate","newReason","setNewReason","clinic","doctor","address","phone","date","agenda","handleMedicalEdit","updateMedical","patch","headers","accessToken","response","message","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams, Link, useNavigate, useLocation } from \"react-router-dom\";\nimport { useContext } from 'react';\nimport DataContext from '../context/DataContext';\nimport api from '../api/axios';\n\nexport const EditPetMedicalRecord = () => {\n    const navigate = useNavigate();\n    // access prop by using location = useLocation() through location.state\n    const location = useLocation();\n    const record = location.state;\n    console.log(record)\n    const { userID, auth } = useContext(DataContext);\n    const { id, record_id } = useParams(); // extract the id from the link\n    const [newClinic, setNewClinic] = useState('');\n    const [newDoctor, setNewDoctor] = useState('');\n    const [newAddress, setNewAddress] = useState('');\n    const [newPhone, setNewPhone] = useState('');\n    const [newDate, setNewDate] = useState('');\n    const [newReason, setNewReason] = useState('');\n\n    useEffect(() => {\n        // To pre-fill the form with existing info\n        if (record) {\n            setNewClinic(record.clinic);\n            setNewDoctor(record.doctor);\n            setNewAddress(record.address);\n            setNewPhone(record.phone);\n            setNewDate(record.date);\n            setNewReason(record.agenda);\n        }\n    }, [record])\n    \n    const handleMedicalEdit = async (record_id) => {\n        const updateMedical = {\n            id: record_id,\n            date: newDate,\n            clinic: newClinic,\n            address: newAddress,\n            phone: newPhone,\n            doctor: newDoctor,\n            agenda: newReason\n        };\n        console.log(updateMedical)\n        try {\n            const response = await api.patch(`${userID}/pets/${id}/medical/${record_id}`, updateMedical, {\n                headers: {\n                    'x-access-token': auth.accessToken\n                }\n            });\n            navigate(`/post/${id}`)\n            console.log(response)\n        } catch (err) {\n            console.log(`Error: ${err.message}`)\n        }\n    }\n\n    return (\n        <main className=\"NewPost\">\n            {record &&\n                <>\n                    <h2>Edit Medical Record</h2>\n                    <form className=\"newPostForm\" onSubmit={(e)=>e.preventDefault()}>\n                        <label htmlFor=\"postTitle\">Date:</label>\n                        <input\n                            id=\"postTitle\"\n                            type=\"text\"\n                            required\n                            value={ newDate }\n                            onChange={(e) => setNewDate(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Clinic:</label>\n                        <input\n                            id=\"postTitle\"\n                            type=\"text\"\n                            required\n                            value={ newClinic }\n                            onChange={(e) => setNewClinic(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Address:</label>\n                        <input\n                            id=\"postTitle\"\n                            type=\"text\"\n                            required\n                            value={ newAddress }\n                            onChange={(e) => setNewAddress(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Phone:</label>\n                        <input\n                            id=\"postTitle\"\n                            type=\"text\"\n                            required\n                            value={ newPhone }\n                            onChange={(e) => setNewPhone(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Doctor:</label>\n                        <input\n                            id=\"postTitle\"\n                            type=\"text\"\n                            required\n                            value={ newDoctor }\n                            onChange={(e) => setNewDoctor(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Reason:</label>\n                        <input\n                            id=\"postTitle\"\n                            type=\"text\"\n                            required\n                            value={ newReason }\n                            onChange={(e) => setNewReason(e.target.value)}\n                        />\n\n                        <button type=\"submit\" onClick={() => handleMedicalEdit(record_id)}>Submit</button>\n\n                    </form>\n                </>\n            }\n\n            {!record && \n                <>\n                    <h2>Page Not Found</h2>\n                    <p>Well, that's disappointing.</p>\n                    <p>\n                        <Link to='/'>Visit Our Homepage</Link>\n                    </p>\n                </>\n            }\n        </main>\n    )\n}\n\nexport default EditPetMedicalRecord"]},"metadata":{},"sourceType":"module"}