{"ast":null,"code":"import _regeneratorRuntime from\"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from\"react\";import{useParams,useNavigate}from\"react-router-dom\";import{useContext}from'react';import DataContext from'../context/DataContext';import api from'../api/axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var NewPetMedicalRecord=function NewPetMedicalRecord(){var navigate=useNavigate();// Inputs for Pet in POST\nvar _useContext=useContext(DataContext),userID=_useContext.userID,auth=_useContext.auth;var _useParams=useParams(),id=_useParams.id;// extract the id from the link\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),newClinic=_useState2[0],setNewClinic=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),newDoctor=_useState4[0],setNewDoctor=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),newAddress=_useState6[0],setNewAddress=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),newPhone=_useState8[0],setNewPhone=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),newDate=_useState10[0],setNewDate=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),newReason=_useState12[0],setNewReason=_useState12[1];var handleSubmitMedical=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var newMedical,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:newMedical={date:newDate,clinic:newClinic,address:newAddress,phone:newPhone,doctor:newDoctor,agenda:newReason};_context.prev=1;_context.next=4;return api.post(\"\".concat(userID,\"/pets/\").concat(id,\"/medical\"),newMedical,{headers:{'x-access-token':auth.accessToken}});case 4:response=_context.sent;navigate(\"/post/\".concat(id));console.log(response);_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](1);console.log(\"Error: \".concat(_context.t0.message));case 12:case\"end\":return _context.stop();}}},_callee,null,[[1,9]]);}));return function handleSubmitMedical(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsx(\"main\",{className:\"NewPost\",children:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"New Medical Record\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"newPostForm\",onSubmit:function onSubmit(e){return e.preventDefault();},children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"postTitle\",children:\"Date:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"postTitle\",type:\"text\",required:true,value:newDate,onChange:function onChange(e){return setNewDate(e.target.value);}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"postTitle\",children:\"Clinic:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"postTitle\",type:\"text\",required:true,value:newClinic,onChange:function onChange(e){return setNewClinic(e.target.value);}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"postTitle\",children:\"Address:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"postTitle\",type:\"text\",required:true,value:newAddress,onChange:function onChange(e){return setNewAddress(e.target.value);}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"postTitle\",children:\"Phone:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"postTitle\",type:\"text\",required:true,value:newPhone,onChange:function onChange(e){return setNewPhone(e.target.value);}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"postTitle\",children:\"Doctor:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"postTitle\",type:\"text\",required:true,value:newDoctor,onChange:function onChange(e){return setNewDoctor(e.target.value);}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"postTitle\",children:\"Reason:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"postTitle\",type:\"text\",required:true,value:newReason,onChange:function onChange(e){return setNewReason(e.target.value);}}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",onClick:function onClick(){return handleSubmitMedical();},children:\"Submit\"})]})]})});};export default NewPetMedicalRecord;","map":{"version":3,"sources":["/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/medicals/NewPetMedicalRecord.js"],"names":["useState","useParams","useNavigate","useContext","DataContext","api","NewPetMedicalRecord","navigate","userID","auth","id","newClinic","setNewClinic","newDoctor","setNewDoctor","newAddress","setNewAddress","newPhone","setNewPhone","newDate","setNewDate","newReason","setNewReason","handleSubmitMedical","newMedical","date","clinic","address","phone","doctor","agenda","post","headers","accessToken","response","console","log","message","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useContext } from 'react';\nimport DataContext from '../context/DataContext';\nimport api from '../api/axios';\n\nexport const NewPetMedicalRecord = () => {\n    const navigate = useNavigate();\n\n    // Inputs for Pet in POST\n    const { userID, auth } = useContext(DataContext);\n    const { id } = useParams(); // extract the id from the link\n    const [newClinic, setNewClinic] = useState('');\n    const [newDoctor, setNewDoctor] = useState('');\n    const [newAddress, setNewAddress] = useState('');\n    const [newPhone, setNewPhone] = useState('');\n    const [newDate, setNewDate] = useState('');\n    const [newReason, setNewReason] = useState('');\n    \n    const handleSubmitMedical = async () => {\n        const newMedical = {\n            date: newDate,\n            clinic: newClinic,\n            address: newAddress,\n            phone: newPhone,\n            doctor: newDoctor,\n            agenda: newReason\n        };\n        try {\n            const response = await api.post(`${userID}/pets/${id}/medical`, newMedical, {\n                headers: {\n                    'x-access-token': auth.accessToken\n                }\n            });\n            navigate(`/post/${id}`)\n            console.log(response)\n        } catch (err) {\n            console.log(`Error: ${err.message}`)\n        }\n    }\n\n    return (\n        <main className=\"NewPost\">\n            <>\n                <h2>New Medical Record</h2>\n                <form className=\"newPostForm\" onSubmit={(e)=>e.preventDefault()}>\n                    <label htmlFor=\"postTitle\">Date:</label>\n                    <input\n                        id=\"postTitle\"\n                        type=\"text\"\n                        required\n                        value={ newDate }\n                        onChange={(e) => setNewDate(e.target.value)}\n                    />\n                    <label htmlFor=\"postTitle\">Clinic:</label>\n                    <input\n                        id=\"postTitle\"\n                        type=\"text\"\n                        required\n                        value={ newClinic }\n                        onChange={(e) => setNewClinic(e.target.value)}\n                    />\n                    <label htmlFor=\"postTitle\">Address:</label>\n                    <input\n                        id=\"postTitle\"\n                        type=\"text\"\n                        required\n                        value={ newAddress }\n                        onChange={(e) => setNewAddress(e.target.value)}\n                    />\n                    <label htmlFor=\"postTitle\">Phone:</label>\n                    <input\n                        id=\"postTitle\"\n                        type=\"text\"\n                        required\n                        value={ newPhone }\n                        onChange={(e) => setNewPhone(e.target.value)}\n                    />\n                    <label htmlFor=\"postTitle\">Doctor:</label>\n                    <input\n                        id=\"postTitle\"\n                        type=\"text\"\n                        required\n                        value={ newDoctor }\n                        onChange={(e) => setNewDoctor(e.target.value)}\n                    />\n                    <label htmlFor=\"postTitle\">Reason:</label>\n                    <input\n                        id=\"postTitle\"\n                        type=\"text\"\n                        required\n                        value={ newReason }\n                        onChange={(e) => setNewReason(e.target.value)}\n                    />\n                    <button type=\"submit\" onClick={() => handleSubmitMedical()}>Submit</button>\n\n                </form>\n            </>\n        </main>\n    )\n}\n\nexport default NewPetMedicalRecord"]},"metadata":{},"sourceType":"module"}