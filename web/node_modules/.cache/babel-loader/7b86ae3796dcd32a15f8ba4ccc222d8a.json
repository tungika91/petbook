{"ast":null,"code":"var _jsxFileName = \"/Users/tungngo/Dropbox/Personal/Learning/React/tutorial/react_router_v6/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Layout from './Layout';\nimport Home from './Home';\nimport NewPost from './NewPost';\nimport PostPage from './PostPage';\nimport About from './About';\nimport Missing from './Missing';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [posts, setPosts] = useState([{\n    id: 1,\n    title: \"My First Post\",\n    datetime: \"July 01, 2021 11:17:36 AM\",\n    body: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Quis consequatur expedita, assumenda similique non optio! Modi nesciunt excepturi corrupti atque blanditiis quo nobis, non optio quae possimus illum exercitationem ipsa!\"\n  }, {\n    id: 2,\n    title: \"My 2nd Post\",\n    datetime: \"July 01, 2021 11:17:36 AM\",\n    body: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Quis consequatur expedita, assumenda similique non optio! Modi nesciunt excepturi corrupti atque blanditiis quo nobis, non optio quae possimus illum exercitationem ipsa!\"\n  }, {\n    id: 3,\n    title: \"My 3rd Post\",\n    datetime: \"July 01, 2021 11:17:36 AM\",\n    body: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Quis consequatur expedita, assumenda similique non optio! Modi nesciunt excepturi corrupti atque blanditiis quo nobis, non optio quae possimus illum exercitationem ipsa!\"\n  }, {\n    id: 4,\n    title: \"My Fourth Post\",\n    datetime: \"July 01, 2021 11:17:36 AM\",\n    body: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Quis consequatur expedita, assumenda similique non optio! Modi nesciunt excepturi corrupti atque blanditiis quo nobis, non optio quae possimus illum exercitationem ipsa!\"\n  }]);\n  const [search, setSearch] = useState('');\n  const [searchResults, setSearchResults] = useState([]); // array of search results\n\n  const [postTitle, setPostTitle] = useState('');\n  const [postBody, setPostBody] = useState('');\n  const navigate = useNavigate(); // \n\n  useEffect(() => {\n    const filteredResults = posts.filter(post => post.body.toLowerCase().includes(search.toLowerCase()) // to check if post.body inclues the value in search\n    || post.title.toLowerCase().includes(search.toLowerCase()));\n    setSearchResults(filteredResults.reverse());\n  }, [posts, search]); // [posts, search] = dependency\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const id = posts.length ? posts[posts.length - 1].id + 1 : 1; // to reference the last post --> posts[posts.length-1]\n\n    const datetime = format(new Date(), 'MMMM dd, yyyy pp'); // pp for time\n\n    const newPost = {\n      id,\n      title: postTitle,\n      datetime,\n      body: postBody\n    };\n    const allPosts = [...posts, newPost]; // append new post to allPosts\n\n    setPosts(allPosts); // set Posts to allPosts\n\n    setPostTitle(''); // reset the setPostTitle and setPostBody to empty\n\n    setPostBody('');\n    navigate('/'); // return to home page after submitting post\n  };\n\n  const handleDelete = id => {\n    // filter out the posts with post.id not equal to the id of the post we want to delete\n    const postsList = posts.filter(post => post.id !== id);\n    setPosts(postsList); // set the Posts to the newly filtered postsList\n\n    navigate('/');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(Layout, {\n        search: search,\n        setSearch: setSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 32\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(Home, {\n          posts: searchResults\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(NewPost, {\n            handleSubmit: handleSubmit,\n            postTitle: postTitle,\n            setPostTitle: setPostTitle,\n            postBody: postBody,\n            setPostBody: setPostBody\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \":id\",\n          element: /*#__PURE__*/_jsxDEV(PostPage, {\n            posts: posts,\n            handleDelete: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Missing, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"SY1MqoiWRoQTYqAzeALFoWukjkk=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tungngo/Dropbox/Personal/Learning/React/tutorial/react_router_v6/src/App.js"],"names":["Layout","Home","NewPost","PostPage","About","Missing","Route","Routes","useNavigate","useState","useEffect","format","App","posts","setPosts","id","title","datetime","body","search","setSearch","searchResults","setSearchResults","postTitle","setPostTitle","postBody","setPostBody","navigate","filteredResults","filter","post","toLowerCase","includes","reverse","handleSubmit","e","preventDefault","length","Date","newPost","allPosts","handleDelete","postsList"],"mappings":"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","sourcesContent":["import Layout from './Layout';\nimport Home from './Home';\nimport NewPost from './NewPost';\nimport PostPage from './PostPage';\nimport About from './About';\nimport Missing from './Missing';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { format } from 'date-fns';\n\nfunction App() {\n  const [posts, setPosts] = useState([\n    {\n      id: 1,\n      title: \"My First Post\",\n      datetime: \"July 01, 2021 11:17:36 AM\",\n      body: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Quis consequatur expedita, assumenda similique non optio! Modi nesciunt excepturi corrupti atque blanditiis quo nobis, non optio quae possimus illum exercitationem ipsa!\"\n    },\n    {\n      id: 2,\n      title: \"My 2nd Post\",\n      datetime: \"July 01, 2021 11:17:36 AM\",\n      body: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Quis consequatur expedita, assumenda similique non optio! Modi nesciunt excepturi corrupti atque blanditiis quo nobis, non optio quae possimus illum exercitationem ipsa!\"\n    },\n    {\n      id: 3,\n      title: \"My 3rd Post\",\n      datetime: \"July 01, 2021 11:17:36 AM\",\n      body: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Quis consequatur expedita, assumenda similique non optio! Modi nesciunt excepturi corrupti atque blanditiis quo nobis, non optio quae possimus illum exercitationem ipsa!\"\n    },\n    {\n      id: 4,\n      title: \"My Fourth Post\",\n      datetime: \"July 01, 2021 11:17:36 AM\",\n      body: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Quis consequatur expedita, assumenda similique non optio! Modi nesciunt excepturi corrupti atque blanditiis quo nobis, non optio quae possimus illum exercitationem ipsa!\"\n    }\n  ])\n  const [search, setSearch] = useState('');\n  const [searchResults, setSearchResults] = useState([]); // array of search results\n  const [postTitle, setPostTitle] = useState('');\n  const [postBody, setPostBody] = useState('');\n  const navigate = useNavigate();\n\n  // \n  useEffect(() => {\n    const filteredResults = posts.filter((post) =>\n      ((post.body).toLowerCase()).includes(search.toLowerCase()) // to check if post.body inclues the value in search\n      || ((post.title).toLowerCase()).includes(search.toLowerCase()));\n\n    setSearchResults(filteredResults.reverse());\n  }, [posts, search]) // [posts, search] = dependency\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const id = posts.length ? posts[posts.length - 1].id + 1 : 1; // to reference the last post --> posts[posts.length-1]\n    const datetime = format(new Date(), 'MMMM dd, yyyy pp'); // pp for time\n    const newPost = { \n      id, \n      title: postTitle, \n      datetime, \n      body: postBody };\n    const allPosts = [...posts, newPost]; // append new post to allPosts\n    setPosts(allPosts); // set Posts to allPosts\n    setPostTitle(''); // reset the setPostTitle and setPostBody to empty\n    setPostBody('');\n    navigate('/'); // return to home page after submitting post\n  }\n\n  const handleDelete = (id) => {\n    // filter out the posts with post.id not equal to the id of the post we want to delete\n    const postsList = posts.filter(post => post.id !== id);\n    setPosts(postsList); // set the Posts to the newly filtered postsList\n    navigate('/');\n  }\n\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Layout\n        search={search}\n        setSearch={setSearch}\n      />}>\n        <Route index element={<Home posts={searchResults} />} />\n        <Route path=\"post\">\n          <Route index element={<NewPost\n            handleSubmit={handleSubmit}\n            postTitle={postTitle}\n            setPostTitle={setPostTitle}\n            postBody={postBody}\n            setPostBody={setPostBody}\n          />} />\n          <Route path=\":id\" element={<PostPage\n            posts={posts}\n            handleDelete={handleDelete}\n          />} />\n        </Route>\n        <Route path=\"about\" element={<About />} />\n        <Route path=\"*\" element={<Missing />} />\n      </Route>\n    </Routes>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}