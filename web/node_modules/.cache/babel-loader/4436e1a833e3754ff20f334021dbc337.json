{"ast":null,"code":"var _jsxFileName = \"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/FileDownload.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { useState } from \"react\";\nimport DataContext from './context/DataContext';\nimport api from './api/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FileDownload = ({\n  record_id,\n  pet_id\n}) => {\n  _s();\n\n  const {\n    userID,\n    auth\n  } = useContext(DataContext);\n  const [url, setUrl] = useState('');\n\n  const handleDownload = async () => {\n    try {\n      await api.get(`${userID}/pets/${pet_id}/medical/${record_id}/download`, {\n        headers: {\n          'x-access-token': auth.accessToken\n        }\n      }).then(response => {\n        // Open in new tab in browser\n        window.open(response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    } catch (error) {\n      return {\n        error\n      };\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDownload,\n      children: \" Download \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(FileDownload, \"KsywMr0bMvR8BIThT9GWVHq8g6s=\");\n\n_c = FileDownload;\nexport default FileDownload; // try {\n//     await axios\n//       .get(uri.ApiBaseUrl + \"AccountReport/GetTrialBalancePdfReport\", {\n//         responseType: \"blob\",\n//         params: {\n//           ...searchObject,\n//         },\n//       })\n//       .then((response) => {\n//         //Create a Blob from the PDF Stream\n//         const file = new Blob([response.data], { type: \"application/pdf\" });\n//         //Build a URL from the file\n//         const fileURL = URL.createObjectURL(file);\n//         //Open the URL on new Window\n//          const pdfWindow = window.open();\n//          pdfWindow.location.href = fileURL;            \n//       })\n//       .catch((error) => {\n//         console.log(error);\n//       });\n//   } catch (error) {\n//     return { error };\n//   }\n\nvar _c;\n\n$RefreshReg$(_c, \"FileDownload\");","map":{"version":3,"sources":["/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/FileDownload.js"],"names":["useContext","useState","DataContext","api","FileDownload","record_id","pet_id","userID","auth","url","setUrl","handleDownload","get","headers","accessToken","then","response","window","open","data","catch","error","console","log"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,GAAP,MAAgB,aAAhB;;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA2B;AAAA;;AAC5C,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAmBR,UAAU,CAACE,WAAD,CAAnC;AACA,QAAM,CAACO,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,CAAC,EAAD,CAA9B;;AAEA,QAAMU,cAAc,GAAG,YAAY;AAC/B,QAAI;AACI,YAAMR,GAAG,CAACS,GAAJ,CAAS,GAAEL,MAAO,SAAQD,MAAO,YAAWD,SAAU,WAAtD,EAAkE;AACxEQ,QAAAA,OAAO,EAAE;AACL,4BAAkBL,IAAI,CAACM;AADlB;AAD+D,OAAlE,EAKTC,IALS,CAKHC,QAAD,IAAc;AAChB;AACAC,QAAAA,MAAM,CAACC,IAAP,CAAYF,QAAQ,CAACG,IAArB;AACH,OARS,EASTC,KATS,CASFC,KAAD,IAAW;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAXS,CAAN;AAYP,KAbD,CAcA,OAAOA,KAAP,EAAc;AACV,aAAO;AAAEA,QAAAA;AAAF,OAAP;AACH;AACJ,GAlBD;;AAmBA,sBACI;AAAA,2BACI;AAAQ,MAAA,OAAO,EAAEV,cAAjB;AAAA,gBAAiC;AAAjC;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAKH,CA5BD;;GAAMP,Y;;KAAAA,Y;AA8BN,eAAeA,YAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { useContext } from \"react\"\nimport { useState } from \"react\";\nimport DataContext from './context/DataContext';\nimport api from './api/posts';\n\nconst FileDownload = ({ record_id, pet_id }) => {\n    const { userID, auth } = useContext(DataContext);\n    const [url, setUrl] = useState('')\n\n    const handleDownload = async () => {\n        try {\n                await api.get(`${userID}/pets/${pet_id}/medical/${record_id}/download`, {\n                headers: {\n                    'x-access-token': auth.accessToken\n                }\n            })\n            .then((response) => {\n                // Open in new tab in browser\n                window.open(response.data);        \n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        }\n        catch (error) {\n            return { error };\n        }\n    }\n    return (\n        <>\n            <button onClick={handleDownload}> Download </button>\n        </>\n    )\n}\n\nexport default FileDownload\n\n// try {\n//     await axios\n//       .get(uri.ApiBaseUrl + \"AccountReport/GetTrialBalancePdfReport\", {\n//         responseType: \"blob\",\n//         params: {\n//           ...searchObject,\n//         },\n//       })\n//       .then((response) => {\n//         //Create a Blob from the PDF Stream\n//         const file = new Blob([response.data], { type: \"application/pdf\" });\n//         //Build a URL from the file\n//         const fileURL = URL.createObjectURL(file);\n//         //Open the URL on new Window\n//          const pdfWindow = window.open();\n//          pdfWindow.location.href = fileURL;            \n//       })\n//       .catch((error) => {\n//         console.log(error);\n//       });\n//   } catch (error) {\n//     return { error };\n//   }\n"]},"metadata":{},"sourceType":"module"}