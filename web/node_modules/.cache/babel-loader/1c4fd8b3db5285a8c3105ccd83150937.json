{"ast":null,"code":"var _jsxFileName = \"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/PetMedical.js\",\n    _s = $RefreshSig$();\n\nimport { useParams, Link } from \"react-router-dom\";\nimport { useContext, useState } from 'react';\nimport DataContext from './context/DataContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PetMedical = () => {\n  _s();\n\n  const [medicalRecord, setMedicalRecord] = useState();\n  const {\n    pets,\n    userID\n  } = useContext(DataContext);\n  const {\n    id\n  } = useParams(); // id is used in Route\n\n  const pet = pets.find(pet => pet.id.toString() === id); // === is for string match, == for numeric\n\n  useEffect(() => {\n    const fetchMedical = async () => {\n      try {\n        // in axios, it automatically returns response in json format and catch the error, accesible through response.data\n        const response = await api.get(`${userID}/pets/${pet_id}/medical/all`, {\n          headers: {\n            'x-access-token': auth.accessToken\n          }\n        });\n        setMedicalRecord(response.data); // response.data is in json format\n\n        console.log(response.data);\n      } catch (err) {\n        if (err.response) {\n          // Not in the 200 response range\n          console.log(err.response.data);\n          console.log(err.response.status);\n          console.log(err.response.headers);\n        } else {\n          console.log(`Error: ${err.message}`);\n        }\n      }\n    };\n\n    fetchMedical();\n  }, [pet_id, auth]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Medical Record\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PetMedical, \"JbADKn5L7M0WBfTkBIfdiAFZIQc=\", false, function () {\n  return [useParams];\n});\n\n_c = PetMedical;\nexport default PetMedical;\n\nvar _c;\n\n$RefreshReg$(_c, \"PetMedical\");","map":{"version":3,"sources":["/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/PetMedical.js"],"names":["useParams","Link","useContext","useState","DataContext","PetMedical","medicalRecord","setMedicalRecord","pets","userID","id","pet","find","toString","useEffect","fetchMedical","response","api","get","pet_id","headers","auth","accessToken","data","console","log","err","status","message"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,IAApB,QAAgC,kBAAhC;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,OAAOC,WAAP,MAAwB,uBAAxB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCJ,QAAQ,EAAlD;AACA,QAAM;AAAEK,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAmBP,UAAU,CAACE,WAAD,CAAnC;AACA,QAAM;AAAEM,IAAAA;AAAF,MAASV,SAAS,EAAxB,CAHqB,CAGO;;AAC5B,QAAMW,GAAG,GAAGH,IAAI,CAACI,IAAL,CAAUD,GAAG,IAAKA,GAAG,CAACD,EAAL,CAASG,QAAT,OAAwBH,EAAzC,CAAZ,CAJqB,CAIqC;;AAE1DI,EAAAA,SAAS,CAAC,MAAM;AAChB,UAAMC,YAAY,GAAG,YAAY;AAC7B,UAAI;AACA;AACA,cAAMC,QAAQ,GAAG,MAAMC,GAAG,CAACC,GAAJ,CAAS,GAAET,MAAO,SAAQU,MAAO,cAAjC,EAAgD;AACnEC,UAAAA,OAAO,EAAE;AACL,8BAAkBC,IAAI,CAACC;AADlB;AAD0D,SAAhD,CAAvB;AAKAf,QAAAA,gBAAgB,CAACS,QAAQ,CAACO,IAAV,CAAhB,CAPA,CAOiC;;AACjCC,QAAAA,OAAO,CAACC,GAAR,CAAYT,QAAQ,CAACO,IAArB;AAEH,OAVD,CAUE,OAAOG,GAAP,EAAY;AACV,YAAIA,GAAG,CAACV,QAAR,EAAkB;AAAE;AAChBQ,UAAAA,OAAO,CAACC,GAAR,CAAYC,GAAG,CAACV,QAAJ,CAAaO,IAAzB;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYC,GAAG,CAACV,QAAJ,CAAaW,MAAzB;AACAH,UAAAA,OAAO,CAACC,GAAR,CAAYC,GAAG,CAACV,QAAJ,CAAaI,OAAzB;AACH,SAJD,MAIO;AAAEI,UAAAA,OAAO,CAACC,GAAR,CAAa,UAASC,GAAG,CAACE,OAAQ,EAAlC;AAAsC;AAClD;AACJ,KAlBD;;AAmBAb,IAAAA,YAAY;AACX,GArBQ,EAqBN,CAACI,MAAD,EAASE,IAAT,CArBM,CAAT;AAuBA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACI;AAAA,gBAAI;AAAJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAlCD;;GAAMhB,U;UAGaL,S;;;KAHbK,U;AAoCN,eAAeA,UAAf","sourcesContent":["import { useParams, Link } from \"react-router-dom\";\nimport { useContext, useState } from 'react';\nimport DataContext from './context/DataContext';\n\nconst PetMedical = () => {\n    const [medicalRecord, setMedicalRecord] = useState();\n    const { pets, userID } = useContext(DataContext);\n    const { id } = useParams(); // id is used in Route\n    const pet = pets.find(pet => (pet.id).toString() === id); // === is for string match, == for numeric\n\n    useEffect(() => {\n    const fetchMedical = async () => {\n        try {\n            // in axios, it automatically returns response in json format and catch the error, accesible through response.data\n            const response = await api.get(`${userID}/pets/${pet_id}/medical/all`, {\n                headers: {\n                    'x-access-token': auth.accessToken\n                }\n            });\n            setMedicalRecord(response.data); // response.data is in json format\n            console.log(response.data)\n\n        } catch (err) {\n            if (err.response) { // Not in the 200 response range\n                console.log(err.response.data);\n                console.log(err.response.status);\n                console.log(err.response.headers);\n            } else { console.log(`Error: ${err.message}`) }\n        }\n    }\n    fetchMedical();\n    }, [pet_id, auth])\n\n    return (\n        <div className=\"card\">\n            <h2>Medical Record</h2>\n        </div>    \n    )\n}\n\nexport default PetMedical\n"]},"metadata":{},"sourceType":"module"}