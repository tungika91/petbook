{"ast":null,"code":"var _jsxFileName = \"/Users/tungngo/Dropbox/Personal/Learning/React/petbook/src/EditPet.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const EditPet = ({\n  pets,\n  handleEdit,\n  newPetName,\n  setNewPetName,\n  newPetType,\n  setNewPetType,\n  newDob,\n  setNewDob,\n  newDeworm,\n  setNewDeworm,\n  newGender,\n  setNewGender,\n  newSter,\n  setNewSter,\n  newPetDesc,\n  setNewPetDesc\n}) => {\n  _s();\n\n  const {\n    id\n  } = useParams(); // extract the id from the link\n\n  const pet = pets.find(pet => pet.id.toString() === id);\n  useEffect(() => {\n    if (pet) {\n      setNewPetName(pet.pet_name);\n      setNewPetType(pet.pet_type);\n    }\n  }, [pet, setNewPetName, setNewPetType]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"NewPost\",\n    children: [pet && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Pet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"newPostForm\",\n        onSubmit: e => e.preventDefault(),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Pet Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\" // match with htmlFor attribute\n          ,\n          type: \"text\" // accept text input\n          ,\n          required: true,\n          value: newPetName,\n          onChange: e => setNewPetName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Pet Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\" // match with htmlFor attribute\n          ,\n          type: \"text\" // accept text input\n          ,\n          required: true,\n          value: newPetType,\n          onChange: e => setNewPetType(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Gender:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\" // match with htmlFor attribute\n          ,\n          type: \"text\" // accept text input\n          ,\n          required: true,\n          value: newGender,\n          onChange: e => setNewGender(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Birthday (MM-DD-YYYY):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\" // match with htmlFor attribute\n          ,\n          type: \"text\" // accept text input\n          ,\n          required: true,\n          value: newDob,\n          onChange: e => setNewDob(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Last Deworm Date (MM-DD-YYYY):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\" // match with htmlFor attribute\n          ,\n          type: \"text\" // accept text input\n          ,\n          required: true,\n          value: newDeworm,\n          onChange: e => setNewDeworm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Is your pet sterilised?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\" // match with htmlFor attribute\n          ,\n          type: \"text\" // accept text input\n          ,\n          required: true,\n          value: newSter,\n          onChange: e => setNewSter(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postBody\",\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"postBody\" // match with htmlFor attribute\n          ,\n          required: true,\n          value: newPetDesc,\n          onChange: e => setNewPetDesc(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: () => handleEdit(pet.id),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), !pet && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Page Not Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Well, that's disappointing.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Visit Our Homepage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditPet, \"XT1vicrm+NSYLQxrGm9hA77HN9Y=\", false, function () {\n  return [useParams];\n});\n\n_c = EditPet;\nexport default EditPet;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPet\");","map":{"version":3,"sources":["/Users/tungngo/Dropbox/Personal/Learning/React/petbook/src/EditPet.js"],"names":["useEffect","useParams","Link","EditPet","pets","handleEdit","newPetName","setNewPetName","newPetType","setNewPetType","newDob","setNewDob","newDeworm","setNewDeworm","newGender","setNewGender","newSter","setNewSter","newPetDesc","setNewPetDesc","id","pet","find","toString","pet_name","pet_type","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\n\nexport const EditPet = ({\n    pets, handleEdit, newPetName, setNewPetName, newPetType, setNewPetType, newDob, setNewDob, newDeworm, setNewDeworm, newGender, setNewGender, newSter, setNewSter, newPetDesc, setNewPetDesc\n}) => {\n\n    const { id } = useParams(); // extract the id from the link\n    const pet = pets.find(pet => (pet.id).toString() === id);\n    \n    useEffect(() => {\n        if (pet) {\n            setNewPetName(pet.pet_name);\n            setNewPetType(pet.pet_type);\n        }\n    }, [pet, setNewPetName, setNewPetType])\n    \n    return (\n        <main className=\"NewPost\">\n            {pet &&\n                <>\n                    <h2>Edit Pet</h2>\n                    <form className=\"newPostForm\" onSubmit={(e)=>e.preventDefault()}>\n                        <label htmlFor=\"postTitle\">Pet Name:</label>\n                        <input\n                            id=\"postTitle\" // match with htmlFor attribute\n                            type=\"text\" // accept text input\n                            required\n                            value={newPetName}\n                            onChange={(e) => setNewPetName(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Pet Type:</label>\n                        <input\n                            id=\"postTitle\" // match with htmlFor attribute\n                            type=\"text\" // accept text input\n                            required\n                            value={newPetType}\n                            onChange={(e) => setNewPetType(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Gender:</label>\n                        <input\n                            id=\"postTitle\" // match with htmlFor attribute\n                            type=\"text\" // accept text input\n                            required\n                            value={newGender}\n                            onChange={(e) => setNewGender(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Birthday (MM-DD-YYYY):</label>\n                        <input\n                            id=\"postTitle\" // match with htmlFor attribute\n                            type=\"text\" // accept text input\n                            required\n                            value={newDob}\n                            onChange={(e) => setNewDob(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Last Deworm Date (MM-DD-YYYY):</label>\n                        <input\n                            id=\"postTitle\" // match with htmlFor attribute\n                            type=\"text\" // accept text input\n                            required\n                            value={newDeworm}\n                            onChange={(e) => setNewDeworm(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Is your pet sterilised?</label>\n                        <input\n                            id=\"postTitle\" // match with htmlFor attribute\n                            type=\"text\" // accept text input\n                            required\n                            value={newSter}\n                            onChange={(e) => setNewSter(e.target.value)}\n                        />\n                    \n                        <label htmlFor=\"postBody\">Description:</label>\n                        <textarea\n                            id=\"postBody\" // match with htmlFor attribute\n                            required\n                            value={newPetDesc}\n                            onChange={(e) => setNewPetDesc(e.target.value)}\n                        />\n                        <button type=\"submit\" onClick={()=>handleEdit(pet.id)}>Submit</button>\n                    </form>\n                </>\n            }\n\n            {!pet && \n                <>\n                    <h2>Page Not Found</h2>\n                    <p>Well, that's disappointing.</p>\n                    <p>\n                        <Link to='/'>Visit Our Homepage</Link>\n                    </p>\n                </>\n            }\n        </main>\n    )\n}\n\nexport default EditPet"]},"metadata":{},"sourceType":"module"}