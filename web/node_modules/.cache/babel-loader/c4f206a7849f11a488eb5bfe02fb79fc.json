{"ast":null,"code":"var _jsxFileName = \"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/medicals/PetMedical.js\",\n    _s = $RefreshSig$();\n\nimport { Link, useParams } from \"react-router-dom\";\nimport { useContext, useEffect } from 'react';\nimport DataContext from '../context/DataContext';\nimport api from '../api/posts';\nimport PetMedicalRecord from \"./PetMedicalRecord\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PetMedical = () => {\n  _s();\n\n  const {\n    pets,\n    userID,\n    auth,\n    medicalRecord,\n    setMedicalRecord\n  } = useContext(DataContext);\n  const {\n    id\n  } = useParams(); // id is used in Route\n\n  const pet = pets.find(pet => pet.id.toString() === id); // === is for string match, == for numeric\n\n  useEffect(() => {\n    const getMedicalRecords = async () => {\n      try {\n        const response = await api.get(`${userID}/pets/${pet.id}/medical/all`, {\n          headers: {\n            'x-access-token': auth.accessToken\n          }\n        });\n        setMedicalRecord(response.data); // response.data is in json format\n      } catch (err) {\n        if (err.response) {\n          // Not in the 200 response range\n          console.log(err.response.data);\n          console.log(err.response.status);\n          console.log(err.response.headers);\n        } else {\n          console.log(`Error: ${err.message}`);\n        }\n      }\n    };\n\n    getMedicalRecords();\n    console.log(medicalRecord);\n  }, [pet, userID, auth]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: 'new',\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add New Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: medicalRecord ? medicalRecord.map(record => /*#__PURE__*/_jsxDEV(PetMedicalRecord, {\n        record: record\n      }, record.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)) : \"Missing Record\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PetMedical, \"0+ILOp9c3jJaofcd4HLjUBTKugc=\", false, function () {\n  return [useParams];\n});\n\n_c = PetMedical;\nexport default PetMedical;\n\nvar _c;\n\n$RefreshReg$(_c, \"PetMedical\");","map":{"version":3,"sources":["/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/medicals/PetMedical.js"],"names":["Link","useParams","useContext","useEffect","DataContext","api","PetMedicalRecord","PetMedical","pets","userID","auth","medicalRecord","setMedicalRecord","id","pet","find","toString","getMedicalRecords","response","get","headers","accessToken","data","err","console","log","status","message","map","record"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA,IAAhB;AAAsBC,IAAAA,aAAtB;AAAqCC,IAAAA;AAArC,MAA0DV,UAAU,CAACE,WAAD,CAA1E;AACA,QAAM;AAAES,IAAAA;AAAF,MAASZ,SAAS,EAAxB,CAFqB,CAEO;;AAC5B,QAAMa,GAAG,GAAGN,IAAI,CAACO,IAAL,CAAUD,GAAG,IAAKA,GAAG,CAACD,EAAL,CAASG,QAAT,OAAwBH,EAAzC,CAAZ,CAHqB,CAGqC;;AAE1DV,EAAAA,SAAS,CAAC,MAAM;AAChB,UAAMc,iBAAiB,GAAG,YAAY;AAClC,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMb,GAAG,CAACc,GAAJ,CAAS,GAAEV,MAAO,SAAQK,GAAG,CAACD,EAAG,cAAjC,EAAgD;AACnEO,UAAAA,OAAO,EAAE;AACL,8BAAkBV,IAAI,CAACW;AADlB;AAD0D,SAAhD,CAAvB;AAKAT,QAAAA,gBAAgB,CAACM,QAAQ,CAACI,IAAV,CAAhB,CANA,CAMiC;AAEpC,OARD,CAQE,OAAOC,GAAP,EAAY;AACV,YAAIA,GAAG,CAACL,QAAR,EAAkB;AAAE;AAChBM,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACL,QAAJ,CAAaI,IAAzB;AACAE,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACL,QAAJ,CAAaQ,MAAzB;AACAF,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACL,QAAJ,CAAaE,OAAzB;AACH,SAJD,MAIO;AAAEI,UAAAA,OAAO,CAACC,GAAR,CAAa,UAASF,GAAG,CAACI,OAAQ,EAAlC;AAAsC;AAClD;AACJ,KAhBD;;AAiBAV,IAAAA,iBAAiB;AACjBO,IAAAA,OAAO,CAACC,GAAR,CAAYd,aAAZ;AACC,GApBQ,EAoBN,CAACG,GAAD,EAAML,MAAN,EAAcC,IAAd,CApBM,CAAT;AAsBA,sBACI;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE,KAAV;AAAA,6BACI;AAAA,kBAAQ;AAAR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACKC,aAAa,GACZA,aAAa,CAACiB,GAAd,CAAkBC,MAAM,iBACtB,QAAC,gBAAD;AAAkB,QAAA,MAAM,EAAEA;AAA1B,SAAuCA,MAAM,CAAChB,EAA9C;AAAA;AAAA;AAAA;AAAA,cADF,CADY,GAGZ;AAJN;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,kBADJ;AAeH,CA1CD;;GAAMN,U;UAEaN,S;;;KAFbM,U;AA4CN,eAAeA,UAAf","sourcesContent":["import { Link, useParams } from \"react-router-dom\";\nimport { useContext, useEffect } from 'react';\nimport DataContext from '../context/DataContext';\nimport api from '../api/posts';\nimport PetMedicalRecord from \"./PetMedicalRecord\";\n\nconst PetMedical = () => {\n    const { pets, userID, auth, medicalRecord, setMedicalRecord } = useContext(DataContext);\n    const { id } = useParams(); // id is used in Route\n    const pet = pets.find(pet => (pet.id).toString() === id); // === is for string match, == for numeric\n\n    useEffect(() => {\n    const getMedicalRecords = async () => {\n        try {\n            const response = await api.get(`${userID}/pets/${pet.id}/medical/all`, {\n                headers: {\n                    'x-access-token': auth.accessToken\n                }\n            });\n            setMedicalRecord(response.data); // response.data is in json format\n\n        } catch (err) {\n            if (err.response) { // Not in the 200 response range\n                console.log(err.response.data);\n                console.log(err.response.status);\n                console.log(err.response.headers);\n            } else { console.log(`Error: ${err.message}`) }\n        }\n    }\n    getMedicalRecords();\n    console.log(medicalRecord)\n    }, [pet, userID, auth])\n\n    return (\n        <>\n            <Link to={'new'}>\n                <button>Add New Record</button>\n            </Link>\n\n            <div className=\"container\">\n                {medicalRecord \n                ? medicalRecord.map(record => (\n                    <PetMedicalRecord record={record} key={record.id} />))\n                : \"Missing Record\"}\n            </div>\n        </>\n        \n    )\n}\n\nexport default PetMedical\n"]},"metadata":{},"sourceType":"module"}