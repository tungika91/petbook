{"ast":null,"code":"var _jsxFileName = \"/Users/tungngo/Dropbox/Personal/Learning/React/petbook/src/EditPet.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const EditPet = ({\n  pets,\n  handleEdit,\n  newPetName,\n  setNewPetName\n}) => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const pet = pets.find(pet => pet.id.toString() === id);\n  useEffect(() => {\n    if (pet) {\n      setNewPetName(newPetName);\n    }\n  }, [pet, setNewPetName]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"NewPost\",\n    children: [newPetName && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"New Pet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"newPostForm\",\n        onSubmit: e => e.preventDefault(),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Pet Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\" // match with htmlFor attribute\n          ,\n          type: \"text\" // accept text input\n          ,\n          required: true,\n          value: newPetName,\n          onChange: e => setNewPetName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Pet Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\" // match with htmlFor attribute\n          ,\n          type: \"text\" // accept text input\n          ,\n          required: true,\n          value: petType,\n          onChange: e => setPetType(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Gender:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\" // match with htmlFor attribute\n          ,\n          type: \"text\" // accept text input\n          ,\n          required: true,\n          value: gender,\n          onChange: e => setGender(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Birthday (MM-DD-YYYY):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\" // match with htmlFor attribute\n          ,\n          type: \"text\" // accept text input\n          ,\n          required: true,\n          value: dob,\n          onChange: e => setDob(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Last Deworm Date (MM-DD-YYYY):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\" // match with htmlFor attribute\n          ,\n          type: \"text\" // accept text input\n          ,\n          required: true,\n          value: deworm,\n          onChange: e => setDeworm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Is your pet sterilised?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\" // match with htmlFor attribute\n          ,\n          type: \"text\" // accept text input\n          ,\n          required: true,\n          value: ster,\n          onChange: e => setSter(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postBody\",\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"postBody\" // match with htmlFor attribute\n          ,\n          required: true,\n          value: petDesc,\n          onChange: e => setPetDesc(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: () => handleEdit(pet.id),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), !newPetName && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Page Not Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Well, that's disappointing.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Visit Our Homepage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditPet, \"XT1vicrm+NSYLQxrGm9hA77HN9Y=\", false, function () {\n  return [useParams];\n});\n\n_c = EditPet;\nexport default EditPet;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPet\");","map":{"version":3,"sources":["/Users/tungngo/Dropbox/Personal/Learning/React/petbook/src/EditPet.js"],"names":["useEffect","useParams","Link","EditPet","pets","handleEdit","newPetName","setNewPetName","id","pet","find","toString","e","preventDefault","target","value","petType","setPetType","gender","setGender","dob","setDob","deworm","setDeworm","ster","setSter","petDesc","setPetDesc"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\n\nexport const EditPet = ({\n    pets, handleEdit, newPetName, setNewPetName\n}) => {\n\n    const { id } = useParams();\n    const pet = pets.find(pet => (pet.id).toString() === id);\n\n    useEffect(() => {\n        if (pet) {\n            setNewPetName(newPetName);\n        }\n    }, [pet, setNewPetName])\n    return (\n        <main className=\"NewPost\">\n            {newPetName &&\n                <>\n                    <h2>New Pet</h2>\n                    <form className=\"newPostForm\" onSubmit={(e)=>e.preventDefault()}>\n                        <label htmlFor=\"postTitle\">Pet Name:</label>\n                        <input\n                            id=\"postTitle\" // match with htmlFor attribute\n                            type=\"text\" // accept text input\n                            required\n                            value={newPetName}\n                            onChange={(e) => setNewPetName(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Pet Type:</label>\n                        <input\n                            id=\"postTitle\" // match with htmlFor attribute\n                            type=\"text\" // accept text input\n                            required\n                            value={petType}\n                            onChange={(e) => setPetType(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Gender:</label>\n                        <input\n                            id=\"postTitle\" // match with htmlFor attribute\n                            type=\"text\" // accept text input\n                            required\n                            value={gender}\n                            onChange={(e) => setGender(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Birthday (MM-DD-YYYY):</label>\n                        <input\n                            id=\"postTitle\" // match with htmlFor attribute\n                            type=\"text\" // accept text input\n                            required\n                            value={dob}\n                            onChange={(e) => setDob(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Last Deworm Date (MM-DD-YYYY):</label>\n                        <input\n                            id=\"postTitle\" // match with htmlFor attribute\n                            type=\"text\" // accept text input\n                            required\n                            value={deworm}\n                            onChange={(e) => setDeworm(e.target.value)}\n                        />\n                        <label htmlFor=\"postTitle\">Is your pet sterilised?</label>\n                        <input\n                            id=\"postTitle\" // match with htmlFor attribute\n                            type=\"text\" // accept text input\n                            required\n                            value={ster}\n                            onChange={(e) => setSter(e.target.value)}\n                        />\n                    \n                        <label htmlFor=\"postBody\">Description:</label>\n                        <textarea\n                            id=\"postBody\" // match with htmlFor attribute\n                            required\n                            value={petDesc}\n                            onChange={(e) => setPetDesc(e.target.value)}\n                        />\n                        <button type=\"submit\" onClick={()=>handleEdit(pet.id)}>Submit</button>\n                    </form>\n                </>\n            }\n\n            {!newPetName && \n                <>\n                    <h2>Page Not Found</h2>\n                    <p>Well, that's disappointing.</p>\n                    <p>\n                        <Link to='/'>Visit Our Homepage</Link>\n                    </p>\n                </>\n            }\n        </main>\n    )\n}\n\nexport default EditPet"]},"metadata":{},"sourceType":"module"}