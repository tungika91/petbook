{"ast":null,"code":"var _jsxFileName = \"/Users/tungngo/Dropbox/Personal/Learning/React/petbook/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Layout from './Layout';\nimport Home from './Home';\nimport NewPet from './NewPet';\nimport PostPage from './PostPage';\nimport About from './About';\nimport Missing from './Missing';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { format } from 'date-fns';\nimport api from './api/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const API_URL = 'http://127.0.0.1:5000/pets/';\n  const [pets, setPets] = useState([]);\n  /* default state is an array loaded from local storage or an empty array, in the event the database shoppinglist is deleted */\n\n  const [search, setSearch] = useState('');\n  const [searchResults, setSearchResults] = useState([]); // array of search results\n  // const [edit, setEdit] = useState('');\n\n  const navigate = useNavigate(); // Inputs for Pet in POST\n\n  const [petName, setPetName] = useState('');\n  const [petType, setPetType] = useState('');\n  const [dob, setDob] = useState('');\n  const [deworm, setDeworm] = useState(format(new Date(), 'M-d-y'));\n  const [gender, setGender] = useState('');\n  const [ster, setSter] = useState('false');\n  const [petDesc, setPetDesc] = useState(''); // Inputs for Pet in PATCH\n\n  const [newPetName, setNewPetName] = useState('');\n  const [newPetType, setNewPetType] = useState('');\n  const [newDob, setNewDob] = useState('');\n  const [newDeworm, setNewDeworm] = useState(format(new Date(), 'M-d-y'));\n  const [newGender, setNewGender] = useState('');\n  const [newSter, setNewSter] = useState('false');\n  const [newPetDesc, setNewPetDesc] = useState(''); // ------------------- CREATE in CRUD ------------------- //\n\n  const addPet = async (petName, petType, dob, deworm, gender, ster, petDesc) => {\n    const id = pets.length ? pets[pets.length - 1].id + 1 : 1; // to reference the last post --> posts[posts.length-1]\n\n    const isSterilised = ster.toLowerCase() === 'true';\n    const newPet = {\n      id,\n      pet_name: petName,\n      pet_type: petType,\n      pet_dob: dob,\n      pet_gender: gender,\n      last_deworm: deworm,\n      sterilised: isSterilised,\n      pet_description: petDesc,\n      user_id: 7\n    };\n\n    try {\n      const response = api.post('register', newPet);\n      console.log(response);\n      const allPets = [...pets, newPet]; // append new post to allPosts\n\n      setPets(allPets); // set Posts to allPosts\n\n      setPetName(''); // reset the setPostTitle and setPostBody to empty\n\n      setPetType('');\n      setDob('');\n      setDeworm(format(new Date(), 'M-d-y'));\n      setGender('');\n      setSter('false');\n      setPetDesc('');\n    } catch (err) {\n      console.log(`Error: ${err.message}`);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!petName) return;\n    addPet(petName, petType, dob, deworm, gender, ster, petDesc); // addItem function\n\n    navigate('/'); // return to home page after submitting post\n  }; // ------------------- REQUEST in CRUD ------------------- //\n\n\n  useEffect(() => {\n    const fetchPets = async () => {\n      try {\n        // in axios, it automatically returns response in json format and catch the error, accesible through response.data\n        const response = await api.get('');\n        setPets(response.data); // response.data is in json format\n      } catch (err) {\n        if (err.response) {\n          // Not in the 200 response range\n          console.log(err.response.data);\n          console.log(err.response.status);\n          console.log(err.response.headers);\n        } else {\n          console.log(`Error: ${err.message}`);\n        }\n      }\n    };\n\n    fetchPets();\n  }, []); // [] to show dependency so it won't infinitely request from server\n  // ------------------- UPDATE in CRUD ------------------- //\n\n  const handleEdit = async id => {\n    const updatePet = {\n      id,\n      pet_type: petType,\n      pet_dob: dob,\n      pet_gender: gender,\n      last_deworm: deworm,\n      sterilised: isSterilised,\n      pet_description: petDesc,\n      pet_name: newPetName\n    };\n\n    try {\n      const response = await api.patch(`${id}`, updatePet);\n      setPets(pets.map(pet => pet.id === id ? { ...updatePet\n      } : pet)); // if pet id matches then update\n\n      setNewPetName('');\n      navigate('/');\n    } catch (err) {\n      console.log(`Error: ${err.message}`);\n    }\n  }; // ------------------- DELETE in CRUD ------------------- //\n\n\n  const handleDelete = async id => {\n    try {\n      await api.delete(`${id}`);\n      const petsList = pets.filter(pet => pet.id !== id); // filter out the posts with post.id not equal to the id of the post we want to delete\n\n      setPets(petsList); // setPets to the newly filtered postsList\n    } catch (err) {\n      console.log(`Error: ${err.message}`);\n    }\n\n    navigate('/');\n  }; // ------------------- Send Notification Email (not automated) ------------------- //\n\n\n  const sendEmail = async id => {\n    try {\n      const response = api.get(`${API_URL}reminder/${id}/send-email`);\n    } catch (err) {\n      if (err.response) {\n        // Not in the 200 response range\n        console.log(err.response.data);\n        console.log(err.response.status);\n        console.log(err.response.headers);\n      } else {\n        console.log(`Error: ${err.message}`);\n      }\n    }\n\n    navigate('/');\n  }; // ------------------- Filter Search Results on Home page ------------------- //\n\n\n  useEffect(() => {\n    const filteredResults = pets.filter(pet => pet.pet_name.toLowerCase().includes(search.toLowerCase()));\n    setSearchResults(filteredResults.reverse());\n  }, [pets, search]); // ------------------- Main ------------------- //\n\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(Layout, {\n        search: search,\n        setSearch: setSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 32\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(Home, {\n          pets: searchResults\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(NewPet, {\n            handleSubmit: handleSubmit,\n            petName: petName,\n            setPetName: setPetName,\n            petType: petType,\n            setPetType: setPetType,\n            dob: dob,\n            setDob: setDob,\n            deworm: deworm,\n            setDeworm: setDeworm,\n            gender: gender,\n            setGender: setGender,\n            ster: ster,\n            setSter: setSter,\n            petDesc: petDesc,\n            setPetDesc: setPetDesc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \":id\",\n          element: /*#__PURE__*/_jsxDEV(PostPage, {\n            pets: pets,\n            handleDelete: handleDelete,\n            sendEmail: sendEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Missing, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pw1dAexUQppTPriTm4bh/yE4mB4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tungngo/Dropbox/Personal/Learning/React/petbook/src/App.js"],"names":["Layout","Home","NewPet","PostPage","About","Missing","Route","Routes","useNavigate","useState","useEffect","format","api","App","API_URL","pets","setPets","search","setSearch","searchResults","setSearchResults","navigate","petName","setPetName","petType","setPetType","dob","setDob","deworm","setDeworm","Date","gender","setGender","ster","setSter","petDesc","setPetDesc","newPetName","setNewPetName","newPetType","setNewPetType","newDob","setNewDob","newDeworm","setNewDeworm","newGender","setNewGender","newSter","setNewSter","newPetDesc","setNewPetDesc","addPet","id","length","isSterilised","toLowerCase","newPet","pet_name","pet_type","pet_dob","pet_gender","last_deworm","sterilised","pet_description","user_id","response","post","console","log","allPets","err","message","handleSubmit","e","preventDefault","fetchPets","get","data","status","headers","handleEdit","updatePet","patch","map","pet","handleDelete","delete","petsList","filter","sendEmail","filteredResults","includes","reverse"],"mappings":"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","sourcesContent":["import Layout from './Layout';\nimport Home from './Home';\nimport NewPet from './NewPet';\nimport PostPage from './PostPage';\nimport About from './About';\nimport Missing from './Missing';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { format } from 'date-fns';\nimport api from './api/posts';\n\nfunction App() {\n  const API_URL = 'http://127.0.0.1:5000/pets/';\n  const [pets, setPets] = useState([]); /* default state is an array loaded from local storage or an empty array, in the event the database shoppinglist is deleted */\n  const [search, setSearch] = useState('');\n  const [searchResults, setSearchResults] = useState([]); // array of search results\n  // const [edit, setEdit] = useState('');\n  const navigate = useNavigate();\n\n  // Inputs for Pet in POST\n  const [petName, setPetName] = useState('');\n  const [petType, setPetType] = useState('');\n  const [dob, setDob] = useState('');\n  const [deworm, setDeworm] = useState(format(new Date(), 'M-d-y'));\n  const [gender, setGender] = useState('');\n  const [ster, setSter] = useState('false');\n  const [petDesc, setPetDesc] = useState('');\n\n  // Inputs for Pet in PATCH\n  const [newPetName, setNewPetName] = useState('');\n  const [newPetType, setNewPetType] = useState('');\n  const [newDob, setNewDob] = useState('');\n  const [newDeworm, setNewDeworm] = useState(format(new Date(), 'M-d-y'));\n  const [newGender, setNewGender] = useState('');\n  const [newSter, setNewSter] = useState('false');\n  const [newPetDesc, setNewPetDesc] = useState('');\n\n  // ------------------- CREATE in CRUD ------------------- //\n  const addPet = async (petName, petType, dob, deworm, gender, ster, petDesc) => {\n    const id = pets.length ? pets[pets.length - 1].id + 1 : 1; // to reference the last post --> posts[posts.length-1]\n    const isSterilised = (ster.toLowerCase()) === 'true';\n    const newPet = { \n      id, \n      pet_name: petName, \n      pet_type: petType,\n      pet_dob: dob,\n      pet_gender: gender,\n      last_deworm: deworm,\n      sterilised: isSterilised, \n      pet_description: petDesc,\n      user_id: 7 };\n        \n    try {\n      const response = api.post('register', newPet)\n      console.log(response)\n      const allPets = [...pets, newPet]; // append new post to allPosts\n      setPets(allPets); // set Posts to allPosts\n      setPetName(''); // reset the setPostTitle and setPostBody to empty\n      setPetType('');\n      setDob('');\n      setDeworm(format(new Date(), 'M-d-y'));\n      setGender('');\n      setSter('false');\n      setPetDesc('');\n    } catch (err) {\n      console.log(`Error: ${err.message}`)\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!petName) return;\n    addPet(petName, petType, dob, deworm, gender, ster, petDesc) // addItem function\n    navigate('/'); // return to home page after submitting post\n  }\n\n  // ------------------- REQUEST in CRUD ------------------- //\n  useEffect(() => {\n    const fetchPets = async () => {\n      try {\n        // in axios, it automatically returns response in json format and catch the error, accesible through response.data\n        const response = await api.get('');\n        setPets(response.data); // response.data is in json format\n      } catch (err) {\n        if (err.response) { // Not in the 200 response range\n          console.log(err.response.data);\n          console.log(err.response.status);\n          console.log(err.response.headers);\n        } else { console.log(`Error: ${err.message}`)}\n      }\n    }\n    fetchPets();\n  }, []) // [] to show dependency so it won't infinitely request from server\n\n  // ------------------- UPDATE in CRUD ------------------- //\n  const handleEdit = async (id) => {\n    const updatePet = {\n      id,\n      pet_type: petType,\n      pet_dob: dob,\n      pet_gender: gender,\n      last_deworm: deworm,\n      sterilised: isSterilised, \n      pet_description: petDesc,\n      pet_name: newPetName};\n    try {\n      const response = await api.patch(`${id}`, updatePet);\n      setPets(pets.map(pet => pet.id === id ? {...updatePet} : pet)) // if pet id matches then update\n      setNewPetName('')\n      navigate('/')\n    } catch (err) {\n      console.log(`Error: ${err.message}`)\n    }\n  }\n  // ------------------- DELETE in CRUD ------------------- //\n  const handleDelete = async (id) => {\n    try {\n      await api.delete(`${id}`);\n      const petsList = pets.filter(pet => pet.id !== id); // filter out the posts with post.id not equal to the id of the post we want to delete\n      setPets(petsList); // setPets to the newly filtered postsList\n    } catch (err) {\n      console.log(`Error: ${err.message}`)\n    }\n    navigate('/');\n  }\n\n  // ------------------- Send Notification Email (not automated) ------------------- //\n  const sendEmail = async (id) => {\n    try {\n      const response = api.get(`${API_URL}reminder/${id}/send-email`);\n    } catch (err) {\n      if (err.response) {\n      // Not in the 200 response range\n        console.log(err.response.data);\n        console.log(err.response.status);\n        console.log(err.response.headers);\n      } else { console.log(`Error: ${err.message}`)}\n    }\n    navigate('/');\n  }\n\n  // ------------------- Filter Search Results on Home page ------------------- //\n  useEffect(() => {\n    const filteredResults = pets.filter((pet) =>\n    ((pet.pet_name).toLowerCase()).includes(search.toLowerCase()));\n    setSearchResults(filteredResults.reverse());\n  }, [pets, search]) \n\n  // ------------------- Main ------------------- //\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Layout\n        search={search}\n        setSearch={setSearch}\n      />}>\n        <Route index element={<Home pets={searchResults} />} />\n        <Route path=\"post\">\n          <Route index element={<NewPet\n            handleSubmit={handleSubmit}\n            petName={petName} setPetName={setPetName}\n            petType={petType} setPetType={setPetType}\n            dob={dob} setDob={setDob}\n            deworm={deworm} setDeworm={setDeworm}\n            gender={gender} setGender={setGender}\n            ster={ster} setSter={setSter}\n            petDesc={petDesc} setPetDesc={setPetDesc}\n          />} />\n          <Route path=\":id\" element={<PostPage\n            pets={pets}\n            handleDelete={handleDelete}\n            sendEmail={sendEmail}\n          />} />\n        </Route>\n        <Route path=\"about\" element={<About />} />\n        <Route path=\"*\" element={<Missing />} />\n      </Route>\n    </Routes>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}