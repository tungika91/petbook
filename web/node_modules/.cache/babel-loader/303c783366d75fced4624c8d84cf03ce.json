{"ast":null,"code":"import _objectSpread from\"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{createContext,useState,useEffect}from\"react\";import{useNavigate}from'react-router-dom';import{format}from'date-fns';import api from'../api/axios';import{jsx as _jsx}from\"react/jsx-runtime\";var DataContext=/*#__PURE__*/createContext({});export var DataProvider=function DataProvider(_ref){var children=_ref.children;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),pets=_useState2[0],setPets=_useState2[1];/* default state is an array loaded from local storage or an empty array, in the event the database shoppinglist is deleted */var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),search=_useState4[0],setSearch=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),searchResults=_useState6[0],setSearchResults=_useState6[1];// array of search results\nvar _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),picURL=_useState8[0],setPicURL=_useState8[1];var navigate=useNavigate();// Inputs for Login\nvar _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),user=_useState10[0],setUser=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),pwd=_useState12[0],setPwd=_useState12[1];var _useState13=useState(''),_useState14=_slicedToArray(_useState13,2),userID=_useState14[0],setUserID=_useState14[1];var _useState15=useState({}),_useState16=_slicedToArray(_useState15,2),auth=_useState16[0],setAuth=_useState16[1];var _useState17=useState(''),_useState18=_slicedToArray(_useState17,2),email=_useState18[0],setEmail=_useState18[1];// Inputs for Pet in POST\nvar _useState19=useState(''),_useState20=_slicedToArray(_useState19,2),petName=_useState20[0],setPetName=_useState20[1];var _useState21=useState(''),_useState22=_slicedToArray(_useState21,2),petType=_useState22[0],setPetType=_useState22[1];var _useState23=useState(''),_useState24=_slicedToArray(_useState23,2),dob=_useState24[0],setDob=_useState24[1];// const [deworm, setDeworm] = useState(format(new Date(), 'M-d-y'));\nvar _useState25=useState(new Date()),_useState26=_slicedToArray(_useState25,2),deworm=_useState26[0],setDeworm=_useState26[1];var _useState27=useState(''),_useState28=_slicedToArray(_useState27,2),gender=_useState28[0],setGender=_useState28[1];var _useState29=useState('false'),_useState30=_slicedToArray(_useState29,2),ster=_useState30[0],setSter=_useState30[1];var _useState31=useState(''),_useState32=_slicedToArray(_useState31,2),petDesc=_useState32[0],setPetDesc=_useState32[1];// Inputs for Pet in PATCH\nvar _useState33=useState(petName),_useState34=_slicedToArray(_useState33,2),newPetName=_useState34[0],setNewPetName=_useState34[1];var _useState35=useState(petType),_useState36=_slicedToArray(_useState35,2),newPetType=_useState36[0],setNewPetType=_useState36[1];var _useState37=useState(dob),_useState38=_slicedToArray(_useState37,2),newDob=_useState38[0],setNewDob=_useState38[1];var _useState39=useState(deworm),_useState40=_slicedToArray(_useState39,2),newDeworm=_useState40[0],setNewDeworm=_useState40[1];var _useState41=useState(gender),_useState42=_slicedToArray(_useState41,2),newGender=_useState42[0],setNewGender=_useState42[1];var _useState43=useState(ster),_useState44=_slicedToArray(_useState43,2),newSter=_useState44[0],setNewSter=_useState44[1];var _useState45=useState(petDesc),_useState46=_slicedToArray(_useState45,2),newPetDesc=_useState46[0],setNewPetDesc=_useState46[1];// Inputs for Pet Medical\nvar _useState47=useState(),_useState48=_slicedToArray(_useState47,2),medicalRecord=_useState48[0],setMedicalRecord=_useState48[1];// ------------------- CREATE in CRUD ------------------- //\nvar addPet=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(petName,petType,dob,deworm,gender,ster,petDesc,userID){var id,isSterilised,newPet,response,allPets;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:id=pets.length?pets[pets.length-1].id+1:1;// to reference the last post --> posts[posts.length-1]\nisSterilised=ster.toLowerCase()==='true';newPet={id:id,pet_name:petName,pet_type:petType,pet_dob:dob,pet_gender:gender,last_deworm:deworm,sterilised:isSterilised,pet_description:petDesc,user_id:userID};_context.prev=3;_context.next=6;return api.post(\"\".concat(userID,\"/pets/register\"),newPet,{headers:{'x-access-token':auth.accessToken}});case 6:response=_context.sent;console.log(response.data);allPets=[].concat(_toConsumableArray(pets),[response.data]);// append new post to allPosts\nsetPets(allPets);// set Posts to allPosts\nsetPetName('');// reset the setPostTitle and setPostBody to empty\nsetPetType('');setDob('');setDeworm(format(new Date(),'M-d-y'));setGender('');setSter('false');setPetDesc('');_context.next=22;break;case 19:_context.prev=19;_context.t0=_context[\"catch\"](3);console.log(\"Error: \".concat(_context.t0.message));case 22:case\"end\":return _context.stop();}}},_callee,null,[[3,19]]);}));return function addPet(_x,_x2,_x3,_x4,_x5,_x6,_x7,_x8){return _ref2.apply(this,arguments);};}();var handleSubmit=function handleSubmit(e){e.preventDefault();if(!petName)return;addPet(petName,petType,dob,deworm,gender,ster,petDesc,userID);// addItem function\nnavigate('/');// return to home page after submitting post\n};// ------------------- REQUEST in CRUD ------------------- //\nuseEffect(function(){var fetchPets=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return api.get(\"\".concat(userID,\"/pets\"),{headers:{'x-access-token':auth.accessToken}});case 3:response=_context2.sent;setPets(response.data);// response.data is in json format\nconsole.log(response.data);_context2.next=11;break;case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](0);if(_context2.t0.response){// Not in the 200 response range\nconsole.log(_context2.t0.response.data);console.log(_context2.t0.response.status);console.log(_context2.t0.response.headers);}else{console.log(\"Error: \".concat(_context2.t0.message));}case 11:case\"end\":return _context2.stop();}}},_callee2,null,[[0,8]]);}));return function fetchPets(){return _ref3.apply(this,arguments);};}();fetchPets();},[userID,auth]);// [] to show dependency so it won't infinitely request from server\n// ------------------- UPDATE in CRUD ------------------- //\nvar handleEdit=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id){var updatePet,response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:updatePet={id:id,pet_type:newPetType,pet_dob:newDob,pet_gender:newGender,last_deworm:newDeworm,sterilised:newSter.toLowerCase()==='true',pet_description:newPetDesc,pet_name:newPetName};_context3.prev=1;_context3.next=4;return api.patch(\"\".concat(userID,\"/pets/\").concat(id),updatePet,{headers:{'x-access-token':auth.accessToken}});case 4:response=_context3.sent;console.log(response.data);setPets(pets.map(function(pet){return pet.id.toString()===id?_objectSpread({},response.data):pet;}));// if pet id matches then update\nsetNewPetName('');navigate(\"/post/\".concat(id));_context3.next=14;break;case 11:_context3.prev=11;_context3.t0=_context3[\"catch\"](1);console.log(\"Error: \".concat(_context3.t0.message));case 14:case\"end\":return _context3.stop();}}},_callee3,null,[[1,11]]);}));return function handleEdit(_x9){return _ref4.apply(this,arguments);};}();// ------------------- DELETE in CRUD ------------------- //\nvar handleDelete=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id){var petsList;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return api.delete(\"\".concat(userID,\"/pets/\").concat(id),{headers:{'x-access-token':auth.accessToken}});case 3:petsList=pets.filter(function(pet){return pet.id!==id;});// filter out the posts with post.id not equal to the id of the post we want to delete\nsetPets(petsList);// setPets to the newly filtered postsList\n_context4.next=10;break;case 7:_context4.prev=7;_context4.t0=_context4[\"catch\"](0);console.log(\"Error: \".concat(_context4.t0.message));case 10:navigate('/');case 11:case\"end\":return _context4.stop();}}},_callee4,null,[[0,7]]);}));return function handleDelete(_x10){return _ref5.apply(this,arguments);};}();// ------------------- Filter Search Results on Home page ------------------- //\nuseEffect(function(){var filteredResults=pets.filter(function(pet){return pet.pet_name.toLowerCase().includes(search.toLowerCase());});setSearchResults(filteredResults.reverse());},[pets,search]);return/*#__PURE__*/_jsx(DataContext.Provider,{value:{search:search,setSearch:setSearch,searchResults:searchResults,setSearchResults:setSearchResults,handleSubmit:handleSubmit,petName:petName,setPetName:setPetName,petType:petType,setPetType:setPetType,dob:dob,setDob:setDob,deworm:deworm,setDeworm:setDeworm,gender:gender,setGender:setGender,ster:ster,setSter:setSter,petDesc:petDesc,setPetDesc:setPetDesc,pets:pets,handleDelete:handleDelete,handleEdit:handleEdit,newPetName:newPetName,setNewPetName:setNewPetName,newPetType:newPetType,setNewPetType:setNewPetType,newDob:newDob,setNewDob:setNewDob,newDeworm:newDeworm,setNewDeworm:setNewDeworm,newGender:newGender,setNewGender:setNewGender,newSter:newSter,setNewSter:setNewSter,newPetDesc:newPetDesc,setNewPetDesc:setNewPetDesc,user:user,setUser:setUser,pwd:pwd,setPwd:setPwd,userID:userID,setUserID:setUserID,auth:auth,setAuth:setAuth,picURL:picURL,setPicURL:setPicURL,navigate:navigate,medicalRecord:medicalRecord,setMedicalRecord:setMedicalRecord,email:email,setEmail:setEmail},children:children});};export default DataContext;","map":{"version":3,"sources":["/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/context/DataContext.js"],"names":["createContext","useState","useEffect","useNavigate","format","api","DataContext","DataProvider","children","pets","setPets","search","setSearch","searchResults","setSearchResults","picURL","setPicURL","navigate","user","setUser","pwd","setPwd","userID","setUserID","auth","setAuth","email","setEmail","petName","setPetName","petType","setPetType","dob","setDob","Date","deworm","setDeworm","gender","setGender","ster","setSter","petDesc","setPetDesc","newPetName","setNewPetName","newPetType","setNewPetType","newDob","setNewDob","newDeworm","setNewDeworm","newGender","setNewGender","newSter","setNewSter","newPetDesc","setNewPetDesc","medicalRecord","setMedicalRecord","addPet","id","length","isSterilised","toLowerCase","newPet","pet_name","pet_type","pet_dob","pet_gender","last_deworm","sterilised","pet_description","user_id","post","headers","accessToken","response","console","log","data","allPets","message","handleSubmit","e","preventDefault","fetchPets","get","status","handleEdit","updatePet","patch","map","pet","toString","handleDelete","delete","petsList","filter","filteredResults","includes","reverse"],"mappings":"45BAAA,OAASA,aAAT,CAAwBC,QAAxB,CAAkCC,SAAlC,KAAmD,OAAnD,CACA,OAASC,WAAT,KAA4B,kBAA5B,CACA,OAASC,MAAT,KAAuB,UAAvB,CACA,MAAOC,CAAAA,GAAP,KAAgB,cAAhB,C,2CAEA,GAAMC,CAAAA,WAAW,cAAGN,aAAa,CAAC,EAAD,CAAjC,CAEA,MAAO,IAAMO,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,CAC1C,cAAwBP,QAAQ,CAAC,EAAD,CAAhC,wCAAOQ,IAAP,eAAaC,OAAb,eAAsC,8HACtC,eAA4BT,QAAQ,CAAC,EAAD,CAApC,yCAAOU,MAAP,eAAeC,SAAf,eACA,eAA0CX,QAAQ,CAAC,EAAD,CAAlD,yCAAOY,aAAP,eAAsBC,gBAAtB,eAAwD;AACxD,eAA4Bb,QAAQ,CAAC,EAAD,CAApC,yCAAOc,MAAP,eAAeC,SAAf,eACA,GAAMC,CAAAA,QAAQ,CAAGd,WAAW,EAA5B,CAEA;AACA,eAAwBF,QAAQ,CAAC,EAAD,CAAhC,0CAAOiB,IAAP,gBAAaC,OAAb,gBACA,gBAAsBlB,QAAQ,CAAC,EAAD,CAA9B,2CAAOmB,GAAP,gBAAYC,MAAZ,gBACA,gBAA4BpB,QAAQ,CAAC,EAAD,CAApC,2CAAOqB,MAAP,gBAAeC,SAAf,gBACA,gBAAwBtB,QAAQ,CAAC,EAAD,CAAhC,2CAAOuB,IAAP,gBAAaC,OAAb,gBACA,gBAA0BxB,QAAQ,CAAC,EAAD,CAAlC,2CAAOyB,KAAP,gBAAcC,QAAd,gBAEA;AACA,gBAA8B1B,QAAQ,CAAC,EAAD,CAAtC,2CAAO2B,OAAP,gBAAgBC,UAAhB,gBACA,gBAA8B5B,QAAQ,CAAC,EAAD,CAAtC,2CAAO6B,OAAP,gBAAgBC,UAAhB,gBACA,gBAAsB9B,QAAQ,CAAC,EAAD,CAA9B,2CAAO+B,GAAP,gBAAYC,MAAZ,gBACA;AACA,gBAA4BhC,QAAQ,CAAC,GAAIiC,CAAAA,IAAJ,EAAD,CAApC,2CAAOC,MAAP,gBAAeC,SAAf,gBACA,gBAA4BnC,QAAQ,CAAC,EAAD,CAApC,2CAAOoC,MAAP,gBAAeC,SAAf,gBACA,gBAAwBrC,QAAQ,CAAC,OAAD,CAAhC,2CAAOsC,IAAP,gBAAaC,OAAb,gBACA,gBAA8BvC,QAAQ,CAAC,EAAD,CAAtC,2CAAOwC,OAAP,gBAAgBC,UAAhB,gBAEA;AACA,gBAAoCzC,QAAQ,CAAC2B,OAAD,CAA5C,2CAAOe,UAAP,gBAAmBC,aAAnB,gBACA,gBAAoC3C,QAAQ,CAAC6B,OAAD,CAA5C,2CAAOe,UAAP,gBAAmBC,aAAnB,gBACA,gBAA4B7C,QAAQ,CAAC+B,GAAD,CAApC,2CAAOe,MAAP,gBAAeC,SAAf,gBACA,gBAAkC/C,QAAQ,CAACkC,MAAD,CAA1C,2CAAOc,SAAP,gBAAkBC,YAAlB,gBACA,gBAAkCjD,QAAQ,CAACoC,MAAD,CAA1C,2CAAOc,SAAP,gBAAkBC,YAAlB,gBACA,gBAA8BnD,QAAQ,CAACsC,IAAD,CAAtC,2CAAOc,OAAP,gBAAgBC,UAAhB,gBACA,gBAAoCrD,QAAQ,CAACwC,OAAD,CAA5C,2CAAOc,UAAP,gBAAmBC,aAAnB,gBAEA;AACA,gBAA0CvD,QAAQ,EAAlD,2CAAOwD,aAAP,gBAAsBC,gBAAtB,gBAEA;AACA,GAAMC,CAAAA,MAAM,2FAAG,iBAAO/B,OAAP,CAAgBE,OAAhB,CAAyBE,GAAzB,CAA8BG,MAA9B,CAAsCE,MAAtC,CAA8CE,IAA9C,CAAoDE,OAApD,CAA6DnB,MAA7D,8JACLsC,EADK,CACAnD,IAAI,CAACoD,MAAL,CAAcpD,IAAI,CAACA,IAAI,CAACoD,MAAL,CAAc,CAAf,CAAJ,CAAsBD,EAAtB,CAA2B,CAAzC,CAA6C,CAD7C,CACgD;AACrDE,YAFK,CAEWvB,IAAI,CAACwB,WAAL,EAAD,GAAyB,MAFnC,CAGLC,MAHK,CAGI,CACXJ,EAAE,CAAFA,EADW,CAEXK,QAAQ,CAAErC,OAFC,CAGXsC,QAAQ,CAAEpC,OAHC,CAIXqC,OAAO,CAAEnC,GAJE,CAKXoC,UAAU,CAAE/B,MALD,CAMXgC,WAAW,CAAElC,MANF,CAOXmC,UAAU,CAAER,YAPD,CAQXS,eAAe,CAAE9B,OARN,CASX+B,OAAO,CAAElD,MATE,CAHJ,uCAgBgBjB,CAAAA,GAAG,CAACoE,IAAJ,WAAYnD,MAAZ,mBAAoC0C,MAApC,CAA4C,CAC/DU,OAAO,CAAE,CACL,iBAAkBlD,IAAI,CAACmD,WADlB,CADsD,CAA5C,CAhBhB,QAgBDC,QAhBC,eAqBPC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB,EACMC,OAtBC,8BAsBavE,IAtBb,GAsBmBmE,QAAQ,CAACG,IAtB5B,GAsBmC;AAC1CrE,OAAO,CAACsE,OAAD,CAAP,CAAkB;AAClBnD,UAAU,CAAC,EAAD,CAAV,CAAgB;AAChBE,UAAU,CAAC,EAAD,CAAV,CACAE,MAAM,CAAC,EAAD,CAAN,CACAG,SAAS,CAAChC,MAAM,CAAC,GAAI8B,CAAAA,IAAJ,EAAD,CAAa,OAAb,CAAP,CAAT,CACAI,SAAS,CAAC,EAAD,CAAT,CACAE,OAAO,CAAC,OAAD,CAAP,CACAE,UAAU,CAAC,EAAD,CAAV,CA9BO,iFAgCPmC,OAAO,CAACC,GAAR,kBAAsB,YAAIG,OAA1B,GAhCO,qEAAH,kBAANtB,CAAAA,MAAM,yEAAZ,CAoCA,GAAMuB,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CACxBA,CAAC,CAACC,cAAF,GACA,GAAI,CAACxD,OAAL,CAAc,OACd+B,MAAM,CAAC/B,OAAD,CAAUE,OAAV,CAAmBE,GAAnB,CAAwBG,MAAxB,CAAgCE,MAAhC,CAAwCE,IAAxC,CAA8CE,OAA9C,CAAuDnB,MAAvD,CAAN,CAAqE;AACrEL,QAAQ,CAAC,GAAD,CAAR,CAAe;AAClB,CALD,CAMA;AACAf,SAAS,CAAC,UAAM,CACZ,GAAMmF,CAAAA,SAAS,2FAAG,6LAGahF,CAAAA,GAAG,CAACiF,GAAJ,WAAWhE,MAAX,UAA0B,CAC7CoD,OAAO,CAAE,CACL,iBAAkBlD,IAAI,CAACmD,WADlB,CADoC,CAA1B,CAHb,QAGJC,QAHI,gBAQVlE,OAAO,CAACkE,QAAQ,CAACG,IAAV,CAAP,CAAwB;AACxBF,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB,EATU,mFAYV,GAAI,aAAIH,QAAR,CAAkB,CAAE;AAChBC,OAAO,CAACC,GAAR,CAAY,aAAIF,QAAJ,CAAaG,IAAzB,EACAF,OAAO,CAACC,GAAR,CAAY,aAAIF,QAAJ,CAAaW,MAAzB,EACAV,OAAO,CAACC,GAAR,CAAY,aAAIF,QAAJ,CAAaF,OAAzB,EACH,CAJD,IAIO,CAAEG,OAAO,CAACC,GAAR,kBAAsB,aAAIG,OAA1B,GAAsC,CAhBrC,sEAAH,kBAATI,CAAAA,SAAS,2CAAf,CAmBAA,SAAS,GACZ,CArBQ,CAqBN,CAAC/D,MAAD,CAASE,IAAT,CArBM,CAAT,CAqBmB;AAEnB;AACA,GAAMgE,CAAAA,UAAU,2FAAG,kBAAO5B,EAAP,6IACT6B,SADS,CACG,CACd7B,EAAE,CAAFA,EADc,CAEdM,QAAQ,CAAErB,UAFI,CAGdsB,OAAO,CAAEpB,MAHK,CAIdqB,UAAU,CAAEjB,SAJE,CAKdkB,WAAW,CAAEpB,SALC,CAMdqB,UAAU,CAAGjB,OAAO,CAACU,WAAR,EAAD,GAA4B,MAN1B,CAOdQ,eAAe,CAAEhB,UAPH,CAQdU,QAAQ,CAAEtB,UARI,CADH,yCAYYtC,CAAAA,GAAG,CAACqF,KAAJ,WAAapE,MAAb,kBAA4BsC,EAA5B,EAAkC6B,SAAlC,CAA6C,CAChEf,OAAO,CAAE,CACL,iBAAkBlD,IAAI,CAACmD,WADlB,CADuD,CAA7C,CAZZ,QAYLC,QAZK,gBAiBXC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB,EACArE,OAAO,CAACD,IAAI,CAACkF,GAAL,CAAS,SAAAC,GAAG,QAAKA,CAAAA,GAAG,CAAChC,EAAL,CAASiC,QAAT,KAAwBjC,EAAxB,kBAAkCgB,QAAQ,CAACG,IAA3C,EAAoDa,GAAxD,EAAZ,CAAD,CAAP,CAAkF;AAClFhD,aAAa,CAAC,EAAD,CAAb,CACA3B,QAAQ,iBAAU2C,EAAV,EAAR,CApBW,qFAsBXiB,OAAO,CAACC,GAAR,kBAAsB,aAAIG,OAA1B,GAtBW,uEAAH,kBAAVO,CAAAA,UAAU,8CAAhB,CAyBA;AACA,GAAMM,CAAAA,YAAY,2FAAG,kBAAOlC,EAAP,2KAEPvD,CAAAA,GAAG,CAAC0F,MAAJ,WAAczE,MAAd,kBAA6BsC,EAA7B,EAAmC,CACrCc,OAAO,CAAE,CACL,iBAAkBlD,IAAI,CAACmD,WADlB,CAD4B,CAAnC,CAFO,QAOPqB,QAPO,CAOIvF,IAAI,CAACwF,MAAL,CAAY,SAAAL,GAAG,QAAIA,CAAAA,GAAG,CAAChC,EAAJ,GAAWA,EAAf,EAAf,CAPJ,CAOuC;AACpDlD,OAAO,CAACsF,QAAD,CAAP,CAAmB;AARN,mFAUbnB,OAAO,CAACC,GAAR,kBAAsB,aAAIG,OAA1B,GAVa,QAYjBhE,QAAQ,CAAC,GAAD,CAAR,CAZiB,sEAAH,kBAAZ6E,CAAAA,YAAY,+CAAlB,CAeA;AACA5F,SAAS,CAAC,UAAM,CACZ,GAAMgG,CAAAA,eAAe,CAAGzF,IAAI,CAACwF,MAAL,CAAY,SAACL,GAAD,QAC9BA,CAAAA,GAAG,CAAC3B,QAAL,CAAeF,WAAf,EAAD,CAA+BoC,QAA/B,CAAwCxF,MAAM,CAACoD,WAAP,EAAxC,CADgC,EAAZ,CAAxB,CAEAjD,gBAAgB,CAACoF,eAAe,CAACE,OAAhB,EAAD,CAAhB,CACH,CAJQ,CAIN,CAAC3F,IAAD,CAAOE,MAAP,CAJM,CAAT,CAMA,mBACI,KAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAE,CACzBA,MAAM,CAANA,MADyB,CACjBC,SAAS,CAATA,SADiB,CAEzBC,aAAa,CAAbA,aAFyB,CAEVC,gBAAgB,CAAhBA,gBAFU,CAGzBoE,YAAY,CAAZA,YAHyB,CAGXtD,OAAO,CAAPA,OAHW,CAGFC,UAAU,CAAVA,UAHE,CAGUC,OAAO,CAAPA,OAHV,CAGmBC,UAAU,CAAVA,UAHnB,CAG+BC,GAAG,CAAHA,GAH/B,CAGoCC,MAAM,CAANA,MAHpC,CAG4CE,MAAM,CAANA,MAH5C,CAGoDC,SAAS,CAATA,SAHpD,CAG+DC,MAAM,CAANA,MAH/D,CAGuEC,SAAS,CAATA,SAHvE,CAGkFC,IAAI,CAAJA,IAHlF,CAGwFC,OAAO,CAAPA,OAHxF,CAGiGC,OAAO,CAAPA,OAHjG,CAG0GC,UAAU,CAAVA,UAH1G,CAIzBjC,IAAI,CAAJA,IAJyB,CAInBqF,YAAY,CAAZA,YAJmB,CAKzBN,UAAU,CAAVA,UALyB,CAKb7C,UAAU,CAAVA,UALa,CAKDC,aAAa,CAAbA,aALC,CAKcC,UAAU,CAAVA,UALd,CAK0BC,aAAa,CAAbA,aAL1B,CAKyCC,MAAM,CAANA,MALzC,CAKiDC,SAAS,CAATA,SALjD,CAK4DC,SAAS,CAATA,SAL5D,CAKuEC,YAAY,CAAZA,YALvE,CAKqFC,SAAS,CAATA,SALrF,CAKgGC,YAAY,CAAZA,YALhG,CAK8GC,OAAO,CAAPA,OAL9G,CAKuHC,UAAU,CAAVA,UALvH,CAKmIC,UAAU,CAAVA,UALnI,CAK+IC,aAAa,CAAbA,aAL/I,CAMzBtC,IAAI,CAAJA,IANyB,CAMnBC,OAAO,CAAPA,OANmB,CAMVC,GAAG,CAAHA,GANU,CAMLC,MAAM,CAANA,MANK,CAMGC,MAAM,CAANA,MANH,CAMWC,SAAS,CAATA,SANX,CAMsBC,IAAI,CAAJA,IANtB,CAM4BC,OAAO,CAAPA,OAN5B,CAMqCV,MAAM,CAANA,MANrC,CAM6CC,SAAS,CAATA,SAN7C,CAMwDC,QAAQ,CAARA,QANxD,CAOzBwC,aAAa,CAAbA,aAPyB,CAOVC,gBAAgB,CAAhBA,gBAPU,CAOQhC,KAAK,CAALA,KAPR,CAOeC,QAAQ,CAARA,QAPf,CAA7B,UASKnB,QATL,EADJ,CAaH,CArKM,CAuKP,cAAeF,CAAAA,WAAf","sourcesContent":["import { createContext, useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport api from '../api/axios';\n\nconst DataContext = createContext({});\n\nexport const DataProvider = ({ children }) => {\n    const [pets, setPets] = useState([]); /* default state is an array loaded from local storage or an empty array, in the event the database shoppinglist is deleted */\n    const [search, setSearch] = useState('');\n    const [searchResults, setSearchResults] = useState([]); // array of search results\n    const [picURL, setPicURL] = useState('')\n    const navigate = useNavigate();\n\n    // Inputs for Login\n    const [user, setUser] = useState('');\n    const [pwd, setPwd] = useState('');\n    const [userID, setUserID] = useState('');\n    const [auth, setAuth] = useState({})\n    const [email, setEmail] = useState('');\n\n    // Inputs for Pet in POST\n    const [petName, setPetName] = useState('');\n    const [petType, setPetType] = useState('');\n    const [dob, setDob] = useState('');\n    // const [deworm, setDeworm] = useState(format(new Date(), 'M-d-y'));\n    const [deworm, setDeworm] = useState(new Date());\n    const [gender, setGender] = useState('');\n    const [ster, setSter] = useState('false');\n    const [petDesc, setPetDesc] = useState('');\n\n    // Inputs for Pet in PATCH\n    const [newPetName, setNewPetName] = useState(petName);\n    const [newPetType, setNewPetType] = useState(petType);\n    const [newDob, setNewDob] = useState(dob);\n    const [newDeworm, setNewDeworm] = useState(deworm);\n    const [newGender, setNewGender] = useState(gender);\n    const [newSter, setNewSter] = useState(ster);\n    const [newPetDesc, setNewPetDesc] = useState(petDesc);\n\n    // Inputs for Pet Medical\n    const [medicalRecord, setMedicalRecord] = useState();\n\n    // ------------------- CREATE in CRUD ------------------- //\n    const addPet = async (petName, petType, dob, deworm, gender, ster, petDesc, userID) => {\n        const id = pets.length ? pets[pets.length - 1].id + 1 : 1; // to reference the last post --> posts[posts.length-1]\n        const isSterilised = (ster.toLowerCase()) === 'true';\n        const newPet = {\n            id,\n            pet_name: petName,\n            pet_type: petType,\n            pet_dob: dob,\n            pet_gender: gender,\n            last_deworm: deworm,\n            sterilised: isSterilised,\n            pet_description: petDesc,\n            user_id: userID\n        };\n\n        try {\n            const response = await api.post(`${userID}/pets/register`, newPet, {\n                headers: {\n                    'x-access-token': auth.accessToken\n                }\n            })\n            console.log(response.data)\n            const allPets = [...pets, response.data]; // append new post to allPosts\n            setPets(allPets); // set Posts to allPosts\n            setPetName(''); // reset the setPostTitle and setPostBody to empty\n            setPetType('');\n            setDob('');\n            setDeworm(format(new Date(), 'M-d-y'));\n            setGender('');\n            setSter('false');\n            setPetDesc('');\n        } catch (err) {\n            console.log(`Error: ${err.message}`)\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (!petName) return;\n        addPet(petName, petType, dob, deworm, gender, ster, petDesc, userID) // addItem function\n        navigate('/'); // return to home page after submitting post\n    }\n    // ------------------- REQUEST in CRUD ------------------- //\n    useEffect(() => {\n        const fetchPets = async () => {\n            try {\n                // in axios, it automatically returns response in json format and catch the error, accesible through response.data\n                const response = await api.get(`${userID}/pets`, {\n                    headers: {\n                        'x-access-token': auth.accessToken\n                    }\n                });\n                setPets(response.data); // response.data is in json format\n                console.log(response.data)\n\n            } catch (err) {\n                if (err.response) { // Not in the 200 response range\n                    console.log(err.response.data);\n                    console.log(err.response.status);\n                    console.log(err.response.headers);\n                } else { console.log(`Error: ${err.message}`) }\n            }\n        }\n        fetchPets();\n    }, [userID, auth]) // [] to show dependency so it won't infinitely request from server\n\n    // ------------------- UPDATE in CRUD ------------------- //\n    const handleEdit = async (id) => {\n        const updatePet = {\n            id,\n            pet_type: newPetType,\n            pet_dob: newDob,\n            pet_gender: newGender,\n            last_deworm: newDeworm,\n            sterilised: (newSter.toLowerCase()) === 'true',\n            pet_description: newPetDesc,\n            pet_name: newPetName\n        };\n        try {\n            const response = await api.patch(`${userID}/pets/${id}`, updatePet, {\n                headers: {\n                    'x-access-token': auth.accessToken\n                }\n            });\n            console.log(response.data)\n            setPets(pets.map(pet => (pet.id).toString() === id ? { ...response.data } : pet)) // if pet id matches then update\n            setNewPetName('')\n            navigate(`/post/${id}`)\n        } catch (err) {\n            console.log(`Error: ${err.message}`)\n        }\n    }\n    // ------------------- DELETE in CRUD ------------------- //\n    const handleDelete = async (id) => {\n        try {\n            await api.delete(`${userID}/pets/${id}`, {\n                headers: {\n                    'x-access-token': auth.accessToken\n                }\n            });\n            const petsList = pets.filter(pet => pet.id !== id); // filter out the posts with post.id not equal to the id of the post we want to delete\n            setPets(petsList); // setPets to the newly filtered postsList\n        } catch (err) {\n            console.log(`Error: ${err.message}`)\n        }\n        navigate('/');\n    }\n\n    // ------------------- Filter Search Results on Home page ------------------- //\n    useEffect(() => {\n        const filteredResults = pets.filter((pet) =>\n            ((pet.pet_name).toLowerCase()).includes(search.toLowerCase()));\n        setSearchResults(filteredResults.reverse());\n    }, [pets, search])\n\n    return (\n        <DataContext.Provider value={{\n            search, setSearch,\n            searchResults, setSearchResults,\n            handleSubmit, petName, setPetName, petType, setPetType, dob, setDob, deworm, setDeworm, gender, setGender, ster, setSter, petDesc, setPetDesc,\n            pets, handleDelete,\n            handleEdit, newPetName, setNewPetName, newPetType, setNewPetType, newDob, setNewDob, newDeworm, setNewDeworm, newGender, setNewGender, newSter, setNewSter, newPetDesc, setNewPetDesc,\n            user, setUser, pwd, setPwd, userID, setUserID, auth, setAuth, picURL, setPicURL, navigate,\n            medicalRecord, setMedicalRecord, email, setEmail\n        }}>\n            {children}\n        </DataContext.Provider>\n    )\n}\n\nexport default DataContext;"]},"metadata":{},"sourceType":"module"}