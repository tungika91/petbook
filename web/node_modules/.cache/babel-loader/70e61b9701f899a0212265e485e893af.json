{"ast":null,"code":"var _jsxFileName = \"/Users/tungngo/Dropbox/Personal/Learning/React/petbook/src/Post.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport { useContext, useEffect } from 'react';\nimport DataContext from './context/DataContext';\nimport api from './api/posts';\nimport Loki from './images/Loki2.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = ({\n  pet,\n  id\n}) => {\n  _s();\n\n  const {\n    userID,\n    auth,\n    picURL,\n    setPicURL\n  } = useContext(DataContext); // useEffect(() => {\n  //     const getImages = async (id) => {\n  //         try {\n  //             // in axios, it automatically returns response in json format and catch the error, accesible through response.data\n  //             const response = await api.get(`${userID}/pets/${id}/upload`, {\n  //                 headers: {\n  //                     'x-access-token': auth.accessToken\n  //                 }\n  //             });\n  //             setPicURL(response.data); // response.data is in json format\n  //         } catch (err) {\n  //             if (err.response) { // Not in the 200 response range\n  //                 console.log(err.response.data);\n  //                 console.log(err.response.status);\n  //                 console.log(err.response.headers);\n  //             } else { console.log(`Error: ${err.message}`) }\n  //         }\n  //     }\n  //     getImages(pet.id);\n  // }, [pet.id]) // [] to show dependency so it won't infinitely request from server\n\n  const getImages = async id => {\n    try {\n      // in axios, it automatically returns response in json format and catch the error, accesible through response.data\n      const response = await api.get(`${userID}/pets/${id}/upload`, {\n        headers: {\n          'x-access-token': auth.accessToken\n        }\n      });\n      setPicURL(response.data); // response.data is in json format\n    } catch (err) {\n      if (err.response) {\n        // Not in the 200 response range\n        console.log(err.response.data);\n        console.log(err.response.status);\n        console.log(err.response.headers);\n      } else {\n        console.log(`Error: ${err.message}`);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: picURL,\n        alt: pet.pet_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `post/${pet.id}`,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: pet.pet_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: pet.pet_type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Post, \"tFHdsjB00H6zOA4j0/lICwFpCZI=\");\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/tungngo/Dropbox/Personal/Learning/React/petbook/src/Post.js"],"names":["Link","useContext","useEffect","DataContext","api","Loki","Post","pet","id","userID","auth","picURL","setPicURL","getImages","response","get","headers","accessToken","data","err","console","log","status","message","pet_name","pet_type"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAD,KAAiB;AAAA;;AAC1B,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA,MAAhB;AAAwBC,IAAAA;AAAxB,MAAsCX,UAAU,CAACE,WAAD,CAAtD,CAD0B,CAG1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMU,SAAS,GAAG,MAAOL,EAAP,IAAc;AAC5B,QAAI;AACA;AACA,YAAMM,QAAQ,GAAG,MAAMV,GAAG,CAACW,GAAJ,CAAS,GAAEN,MAAO,SAAQD,EAAG,SAA7B,EAAuC;AAC1DQ,QAAAA,OAAO,EAAE;AACL,4BAAkBN,IAAI,CAACO;AADlB;AADiD,OAAvC,CAAvB;AAKAL,MAAAA,SAAS,CAACE,QAAQ,CAACI,IAAV,CAAT,CAPA,CAO0B;AAC7B,KARD,CAQE,OAAOC,GAAP,EAAY;AACV,UAAIA,GAAG,CAACL,QAAR,EAAkB;AAAE;AAChBM,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACL,QAAJ,CAAaI,IAAzB;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACL,QAAJ,CAAaQ,MAAzB;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACL,QAAJ,CAAaE,OAAzB;AACH,OAJD,MAIO;AAAEI,QAAAA,OAAO,CAACC,GAAR,CAAa,UAASF,GAAG,CAACI,OAAQ,EAAlC;AAAsC;AAClD;AACJ,GAhBD;;AAkBA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAA,6BACI;AAAK,QAAA,GAAG,EAAEZ,MAAV;AAAkB,QAAA,GAAG,EAAEJ,GAAG,CAACiB;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHJ,eAOI;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,QAAOjB,GAAG,CAACC,EAAG,EAAzB;AAAA,+BACI;AAAA,oBAAKD,GAAG,CAACiB;AAAT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA,kBAAOjB,GAAG,CAACkB;AAAX;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CAhED;;GAAMnB,I;;KAAAA,I;AAkEN,eAAeA,IAAf","sourcesContent":["import { Link } from 'react-router-dom';\nimport { useContext, useEffect } from 'react';\nimport DataContext from './context/DataContext';\nimport api from './api/posts';\nimport Loki from './images/Loki2.jpeg'\n\nconst Post = ({ pet, id }) => {\n    const { userID, auth, picURL, setPicURL } = useContext(DataContext);\n\n    // useEffect(() => {\n    //     const getImages = async (id) => {\n    //         try {\n    //             // in axios, it automatically returns response in json format and catch the error, accesible through response.data\n    //             const response = await api.get(`${userID}/pets/${id}/upload`, {\n    //                 headers: {\n    //                     'x-access-token': auth.accessToken\n    //                 }\n    //             });\n    //             setPicURL(response.data); // response.data is in json format\n    //         } catch (err) {\n    //             if (err.response) { // Not in the 200 response range\n    //                 console.log(err.response.data);\n    //                 console.log(err.response.status);\n    //                 console.log(err.response.headers);\n    //             } else { console.log(`Error: ${err.message}`) }\n    //         }\n    //     }\n    //     getImages(pet.id);\n    // }, [pet.id]) // [] to show dependency so it won't infinitely request from server\n\n    const getImages = async (id) => {\n        try {\n            // in axios, it automatically returns response in json format and catch the error, accesible through response.data\n            const response = await api.get(`${userID}/pets/${id}/upload`, {\n                headers: {\n                    'x-access-token': auth.accessToken\n                }\n            });\n            setPicURL(response.data); // response.data is in json format\n        } catch (err) {\n            if (err.response) { // Not in the 200 response range\n                console.log(err.response.data);\n                console.log(err.response.status);\n                console.log(err.response.headers);\n            } else { console.log(`Error: ${err.message}`) }\n        }\n    }\n\n    return (\n        <div className=\"movie\">\n            <div></div>\n\n            <div>\n                <img src={picURL} alt={pet.pet_name}/>\n            </div>\n\n            <div>\n                <Link to={`post/${pet.id}`}>\n                    <h3>{pet.pet_name}</h3>\n                </Link>\n                <span>{pet.pet_type}</span>\n            </div>\n\n            {/* <p className=\"postBody\">{\n                (pet.pet_description).length <= 25\n                    ? pet.pet_description\n                    : `${(pet.pet_description).slice(0, 25)}...`\n            }</p> */}\n        </div>    \n    )\n}\n\nexport default Post\n"]},"metadata":{},"sourceType":"module"}