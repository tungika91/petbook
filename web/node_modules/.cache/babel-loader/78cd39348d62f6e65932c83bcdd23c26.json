{"ast":null,"code":"var _jsxFileName = \"/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/medicals/NewPetMedicalRecord.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\nimport { useContext } from 'react';\nimport DataContext from '../context/DataContext';\nimport api from '../api/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const NewPetMedicalRecord = () => {\n  _s();\n\n  const navigate = useNavigate(); // Inputs for Pet in POST\n\n  const {\n    medicalRecord,\n    userID,\n    auth\n  } = useContext(DataContext);\n  const {\n    id,\n    record_id\n  } = useParams(); // extract the id from the link\n\n  const record = medicalRecord.find(record => record.id.toString() === record_id);\n  const [newClinic, setNewClinic] = useState('');\n  const [newDoctor, setNewDoctor] = useState('');\n  const [newAddress, setNewAddress] = useState('');\n  const [newPhone, setNewPhone] = useState('');\n  const [newDate, setNewDate] = useState('');\n  const [newReason, setNewReason] = useState('');\n\n  const handleSubmitMedical = async () => {\n    const newMedical = {\n      date: newDate,\n      clinic: newClinic,\n      address: newAddress,\n      phone: newPhone,\n      doctor: newDoctor,\n      agenda: newReason\n    };\n\n    try {\n      const response = await api.post(`${userID}/pets/${id}/medical`, newMedical, {\n        headers: {\n          'x-access-token': auth.accessToken\n        }\n      });\n      navigate(`/post/${id}`);\n    } catch (err) {\n      console.log(`Error: ${err.message}`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"NewPost\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"New Medical Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"newPostForm\",\n        onSubmit: e => e.preventDefault(),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\",\n          type: \"text\",\n          required: true,\n          value: newDate,\n          onChange: e => setNewDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Clinic:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\",\n          type: \"text\",\n          required: true,\n          value: newClinic,\n          onChange: e => setNewClinic(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\",\n          type: \"text\",\n          required: true,\n          value: newAddress,\n          onChange: e => setNewAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Phone:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\",\n          type: \"text\",\n          required: true,\n          value: newPhone,\n          onChange: e => setNewPhone(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Doctor:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\",\n          type: \"text\",\n          required: true,\n          value: newDoctor,\n          onChange: e => setNewDoctor(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Reason:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\",\n          type: \"text\",\n          required: true,\n          value: newReason,\n          onChange: e => setNewReason(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: () => handleSubmitMedical(),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewPetMedicalRecord, \"A/+RfJkQmxrcsRRF6TtjCwgcqX4=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = NewPetMedicalRecord;\nexport default NewPetMedicalRecord;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPetMedicalRecord\");","map":{"version":3,"sources":["/Users/tungngo/Dropbox/Personal/Learning/React/webapp/petbook/web/src/medicals/NewPetMedicalRecord.js"],"names":["useEffect","useState","useParams","Link","useNavigate","useContext","DataContext","api","NewPetMedicalRecord","navigate","medicalRecord","userID","auth","id","record_id","record","find","toString","newClinic","setNewClinic","newDoctor","setNewDoctor","newAddress","setNewAddress","newPhone","setNewPhone","newDate","setNewDate","newReason","setNewReason","handleSubmitMedical","newMedical","date","clinic","address","phone","doctor","agenda","response","post","headers","accessToken","err","console","log","message","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\nimport { useContext } from 'react';\nimport DataContext from '../context/DataContext';\nimport api from '../api/posts';\n\nexport const NewPetMedicalRecord = () => {\n    const navigate = useNavigate();\n\n    // Inputs for Pet in POST\n    const { medicalRecord, userID, auth } = useContext(DataContext);\n    const { id, record_id } = useParams(); // extract the id from the link\n    const record = medicalRecord.find(record => (record.id).toString() === record_id);\n    const [newClinic, setNewClinic] = useState('');\n    const [newDoctor, setNewDoctor] = useState('');\n    const [newAddress, setNewAddress] = useState('');\n    const [newPhone, setNewPhone] = useState('');\n    const [newDate, setNewDate] = useState('');\n    const [newReason, setNewReason] = useState('');\n    \n    const handleSubmitMedical = async () => {\n        const newMedical = {\n            date: newDate,\n            clinic: newClinic,\n            address: newAddress,\n            phone: newPhone,\n            doctor: newDoctor,\n            agenda: newReason\n        };\n        try {\n            const response = await api.post(`${userID}/pets/${id}/medical`, newMedical, {\n                headers: {\n                    'x-access-token': auth.accessToken\n                }\n            });\n            navigate(`/post/${id}`)\n        } catch (err) {\n            console.log(`Error: ${err.message}`)\n        }\n    }\n\n    return (\n        <main className=\"NewPost\">\n            <>\n                <h2>New Medical Record</h2>\n                <form className=\"newPostForm\" onSubmit={(e)=>e.preventDefault()}>\n                    <label htmlFor=\"postTitle\">Date:</label>\n                    <input\n                        id=\"postTitle\"\n                        type=\"text\"\n                        required\n                        value={ newDate }\n                        onChange={(e) => setNewDate(e.target.value)}\n                    />\n                    <label htmlFor=\"postTitle\">Clinic:</label>\n                    <input\n                        id=\"postTitle\"\n                        type=\"text\"\n                        required\n                        value={ newClinic }\n                        onChange={(e) => setNewClinic(e.target.value)}\n                    />\n                    <label htmlFor=\"postTitle\">Address:</label>\n                    <input\n                        id=\"postTitle\"\n                        type=\"text\"\n                        required\n                        value={ newAddress }\n                        onChange={(e) => setNewAddress(e.target.value)}\n                    />\n                    <label htmlFor=\"postTitle\">Phone:</label>\n                    <input\n                        id=\"postTitle\"\n                        type=\"text\"\n                        required\n                        value={ newPhone }\n                        onChange={(e) => setNewPhone(e.target.value)}\n                    />\n                    <label htmlFor=\"postTitle\">Doctor:</label>\n                    <input\n                        id=\"postTitle\"\n                        type=\"text\"\n                        required\n                        value={ newDoctor }\n                        onChange={(e) => setNewDoctor(e.target.value)}\n                    />\n                    <label htmlFor=\"postTitle\">Reason:</label>\n                    <input\n                        id=\"postTitle\"\n                        type=\"text\"\n                        required\n                        value={ newReason }\n                        onChange={(e) => setNewReason(e.target.value)}\n                    />\n                    <button type=\"submit\" onClick={() => handleSubmitMedical()}>Submit</button>\n\n                </form>\n            </>\n        </main>\n    )\n}\n\nexport default NewPetMedicalRecord"]},"metadata":{},"sourceType":"module"}