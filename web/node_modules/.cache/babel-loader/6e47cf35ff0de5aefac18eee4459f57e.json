{"ast":null,"code":"var _jsxFileName = \"/Users/tungngo/Dropbox/Personal/Learning/React/petbook/src/PostPage.js\",\n    _s = $RefreshSig$();\n\nimport { useParams, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { useContext } from 'react';\nimport DataContext from './context/DataContext'; // -------------- CSS Style -------------- //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Button1 = styled.button`\n    height: 48px;\n    min-width: 48px;\n    margin-left: 0.5rem;\n    border-radius: 0.25rem;\n    padding: 0.5rem;\n    font-size: 1rem;\n    background-color: #ff5e6c;\n    color: white;\n    cursor: pointer;\n`;\n_c = Button1;\nconst Button2 = styled.button`\n    height: 48px;\n    min-width: 48px;\n    margin-left: 0.5rem;\n    border-radius: 0.25rem;\n    padding: 0.5rem; \n    font-size: 1rem;\n    background-color: #fff5d7;\n    color: black;\n    cursor: pointer;\n`;\n_c2 = Button2;\n\nconst PostPage = () => {\n  _s();\n\n  const {\n    pets,\n    handleDelete,\n    sendEmail\n  } = useContext(DataContext);\n  const {\n    id\n  } = useParams(); // id is used in Route\n  // specify the post we want to see by finding the post.id\n\n  const pet = pets.find(pet => pet.id.toString() === id); // === is for string match, == for numeric\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"PostPage\",\n    children: /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"post\",\n      children: [pet && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: pet.pet_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"postBody\",\n          children: [\"Birthday: \", pet.pet_dob.slice(0, 16)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"postBody\",\n          children: [\"Last deworm date: \", pet.last_deworm.slice(0, 16)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"postBody\",\n          children: [\"Age: \", pet.pet_age]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"postBody\",\n          children: [\"Sterilised: \", pet.sterilised.toString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"postBody\",\n          children: [\"Pet Type: \", pet.pet_type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"postBody\",\n          children: [\"Owner: \", pet.owner]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button1, {\n          onClick: () => handleDelete(pet.id),\n          children: \"Remove Pet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `edit`,\n          children: /*#__PURE__*/_jsxDEV(Button2, {\n            children: \"Edit Pet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button2, {\n          onClick: () => sendEmail(pet.id),\n          children: \"Notify me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), !pet && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Pet Not Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Return to Homepage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostPage, \"XP3YFJrSi5sNedoRrDwsx6LwS4c=\", false, function () {\n  return [useParams];\n});\n\n_c3 = PostPage;\nexport default PostPage;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Button1\");\n$RefreshReg$(_c2, \"Button2\");\n$RefreshReg$(_c3, \"PostPage\");","map":{"version":3,"sources":["/Users/tungngo/Dropbox/Personal/Learning/React/petbook/src/PostPage.js"],"names":["useParams","Link","styled","useContext","DataContext","Button1","button","Button2","PostPage","pets","handleDelete","sendEmail","id","pet","find","toString","pet_name","pet_dob","slice","last_deworm","pet_age","sterilised","pet_type","owner"],"mappings":"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","sourcesContent":["import { useParams, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { useContext } from 'react';\nimport DataContext from './context/DataContext';\n\n// -------------- CSS Style -------------- //\nconst Button1 = styled.button`\n    height: 48px;\n    min-width: 48px;\n    margin-left: 0.5rem;\n    border-radius: 0.25rem;\n    padding: 0.5rem;\n    font-size: 1rem;\n    background-color: #ff5e6c;\n    color: white;\n    cursor: pointer;\n`;\n\nconst Button2 = styled.button`\n    height: 48px;\n    min-width: 48px;\n    margin-left: 0.5rem;\n    border-radius: 0.25rem;\n    padding: 0.5rem; \n    font-size: 1rem;\n    background-color: #fff5d7;\n    color: black;\n    cursor: pointer;\n`;\n\nconst PostPage = () => {\n    const { pets, handleDelete, sendEmail } = useContext(DataContext);\n    const { id } = useParams(); // id is used in Route\n    // specify the post we want to see by finding the post.id\n    const pet = pets.find(pet => (pet.id).toString() === id); // === is for string match, == for numeric\n    return (\n        <main className=\"PostPage\">\n            <article className=\"post\">\n                {/* if post is true then && ... */}\n                {pet &&\n                    <>\n                        <h2>{pet.pet_name}</h2>\n                        <li className=\"postBody\">Birthday: {pet.pet_dob.slice(0, 16)}</li>\n                        <li className=\"postBody\">Last deworm date: {pet.last_deworm.slice(0, 16)}</li>\n                        <li className=\"postBody\">Age: {pet.pet_age}</li>\n                        <li className=\"postBody\">Sterilised: {(pet.sterilised).toString()}</li>\n                        <li className=\"postBody\">Pet Type: {pet.pet_type}</li>\n                        <li className=\"postBody\">Owner: {pet.owner}</li>\n                        <Button1 onClick={() => handleDelete(pet.id)}>\n                            Remove Pet\n                        </Button1>\n\n                        <Link to={`edit`}><Button2>Edit Pet</Button2></Link>\n\n                        <Button2 onClick={() => sendEmail(pet.id)}>\n                            Notify me\n                        </Button2>\n                    </>\n                }\n                {!pet &&\n                    <>\n                        <h2>Pet Not Found</h2>\n                        <p>\n                            <Link to='/'>Return to Homepage</Link>\n                        </p>\n                    </>\n                }\n            </article>\n        </main>\n    )\n}\n\nexport default PostPage\n"]},"metadata":{},"sourceType":"module"}